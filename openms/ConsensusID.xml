<?xml version='1.0' encoding='UTF-8'?>
<tool id="ConsensusID" name="ConsensusID" version="2.0.0">
  <description>Computes a consensus identification from peptide identifications of several identification engines.</description>
  <macros>
    <token name="@EXECUTABLE@">ConsensusID</token>
    <import>macros.xml</import>
  </macros>
  <expand macro="stdio"/>
  <expand macro="requirements"/>
  <command>ConsensusID

#if $param_in:
  -in $param_in
#end if
#if $param_out:
  -out $param_out
#end if
#if $param_rt_delta:
  -rt_delta $param_rt_delta
#end if
#if $param_mz_delta:
  -mz_delta $param_mz_delta
#end if
#if $param_min_length:
  -min_length $param_min_length
#end if
#if $param_use_all_hits:
  -use_all_hits
#end if
-threads \${GALAXY_SLOTS:-24} 
#if $param_algorithm_algorithm:
  -algorithm:algorithm
  #if " " in str($param_algorithm_algorithm):
    "$param_algorithm_algorithm"
  #else
    $param_algorithm_algorithm
  #end if
#end if
#if $param_algorithm_considered_hits:
  -algorithm:considered_hits $param_algorithm_considered_hits
#end if
#if $param_algorithm_number_of_runs:
  -algorithm:number_of_runs $param_algorithm_number_of_runs
#end if
#if $param_algorithm_PEPIons_MinNumberOfFragments:
  -algorithm:PEPIons:MinNumberOfFragments $param_algorithm_PEPIons_MinNumberOfFragments
#end if
#if $param_algorithm_PEPIons_common:
  -algorithm:PEPIons:common $param_algorithm_PEPIons_common
#end if
#if $param_algorithm_PEPMatrix_common:
  -algorithm:PEPMatrix:common $param_algorithm_PEPMatrix_common
#end if
#if $param_algorithm_PEPMatrix_penalty:
  -algorithm:PEPMatrix:penalty $param_algorithm_PEPMatrix_penalty
#end if
</command>
  <inputs>
    <param name="param_in" type="data" format="idXML,featureXML,consensusXML" optional="False" label="input file" help="(-in) "/>
    <param name="param_rt_delta" type="float" min="0.0" optional="True" value="0.1" label="Maximum allowed precursor RT deviation between identifications" help="(-rt_delta) "/>
    <param name="param_mz_delta" type="float" min="0.0" optional="True" value="0.1" label="Maximum allowed precursor m/z deviation between identifications" help="(-mz_delta) "/>
    <param name="param_min_length" type="integer" min="1" optional="True" value="6" label="Minimum of length of peptides for final consensus list" help="(-min_length) "/>
    <param name="param_use_all_hits" type="boolean" truevalue="-use_all_hits" falsevalue="" checked="false" optional="True" label="If 'true' not only the first hit, but all are used (peptides only)" help="(-use_all_hits) "/>
    <param name="param_algorithm_algorithm" type="select" optional="True" value="PEPMatrix" label="Algorithm used for the consensus scoring" help="(-algorithm) &lt;br&gt;ranked -- reorders the hits according to a consensus score computed from the ranks in the input runs. The score is normalized to the interval (0,100). The PeptideIdentifications do not need to have the same score type. &lt;br&gt;average -- reorders the hits according to the average score of the input runs. Make sure to use PeptideIdentifications with the same score type only! &lt;br&gt;PEPMatrix -- calculates a consensus score based on posterior error probabilities and scoring matrices for siimilarity. This algorithm uses the PAM30MS matrix to score sequences not listed by all engines. Make sure to use PeptideIdentifications with score types converted to PEPs only! &lt;br&gt;PEPIons -- calculates a consensus score based on posterior error probabilities and fragment ion siimilarity. Make sure to use PeptideIdentifications with score types converted to PEPs only! &lt;br&gt;Minimum -- calculates a consensus score based on the minimal score. Make sure to use PeptideIdentifications with score types converted to PEPs only! &lt;br&gt;">
      <option value="ranked">ranked</option>
      <option value="average">average</option>
      <option value="PEPMatrix">PEPMatrix</option>
      <option value="PEPIons">PEPIons</option>
      <option value="Minimum">Minimum</option>
    </param>
    <param name="param_algorithm_considered_hits" type="integer" min="1" optional="True" value="10" label="The number of top hits that are used for the consensus scoring" help="(-considered_hits) "/>
    <param name="param_algorithm_number_of_runs" type="integer" min="0" optional="True" value="0" label="The number of runs used as input" help="(-number_of_runs) This information is used in 'Ranked' and 'Average' to compute the new scores. If not given, the number of input identifications is taken"/>
    <param name="param_algorithm_PEPIons_MinNumberOfFragments" type="integer" min="0" optional="True" value="2" label="The minimal number of similar (between two suggested sequences) fragment ion masses that is necessary to evaluate the shared peak count similarity (SPC)" help="(-MinNumberOfFragments) "/>
    <param name="param_algorithm_PEPIons_common" type="float" min="0.0" max="1.1" optional="True" value="1.1" label="Similarity threshold to accept the best score" help="(-common) E.g. for a given spectrum: engine 1 -&gt; pep 1 with score x1 and engine2 -&gt; pep2 with score x2. The better score from {x1,x2} will be used if the degree of similarity between pep1 and pep2 &gt;= common, Note that 0 &lt;= degree of similarity &lt;= 1. Values &gt; 1 will disable this option"/>
    <param name="param_algorithm_PEPMatrix_common" type="float" min="0.0" max="1.1" optional="True" value="1.1" label="Similarity threshold to accept the best score" help="(-common) E.g. for a given spectrum: engine 1 -&gt; pep 1 with score x1 and engine2 -&gt; pep2 with score x2. The better score from {x1,x2} will be used if the degree of similarity between pep1 and pep2 &gt;= common, Note that 0 &lt;= degree of similarity &lt;= 1. Values &gt; 1 will disable this option"/>
    <param name="param_algorithm_PEPMatrix_penalty" type="integer" value="5" label="Give the gap penalty (the same penalty will be used for opening and extension) as a positive intege" help="(-penalty) "/>
  </inputs>
  <outputs>
    <data name="param_out" format="consensusXML">
      <change_format>
        <when input="param_out_type" value="idXML" format="idXML"/>
        <when input="param_out_type" value="featureXML" format="featureXML"/>
      </change_format>
    </data>
  </outputs>
  <help>**What it does**

Computes a consensus identification from peptide identifications of several identification engines.


For more information, visit http://ftp.mi.fu-berlin.de/OpenMS/release-documentation/html/TOPP_ConsensusID.html</help>
  <expand macro="references"/>
</tool>
