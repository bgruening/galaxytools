<?xml version='1.0' encoding='UTF-8'?>
<tool id="IDFilter" name="IDFilter" version="2.0.0">
  <description>Filters results from protein or peptide identification engines based on different criteria.</description>
  <macros>
    <token name="@EXECUTABLE@">IDFilter</token>
    <import>macros.xml</import>
  </macros>
  <expand macro="stdio"/>
  <expand macro="requirements"/>
  <command>IDFilter

#if $param_in:
  -in $param_in
#end if
#if $param_out:
  -out $param_out
#end if
#if $param_min_length:
  -min_length $param_min_length
#end if
#if $param_max_length:
  -max_length $param_max_length
#end if
#if $param_min_charge:
  -min_charge $param_min_charge
#end if
#if $param_var_mods:
  -var_mods
#end if
#if $param_unique:
  -unique
#end if
#if $param_unique_per_protein:
  -unique_per_protein
#end if
#if $param_keep_unreferenced_protein_hits:
  -keep_unreferenced_protein_hits
#end if
#if $param_removeDecoys:
  -removeDecoys
#end if
#if $param_delete_unreferenced_peptide_hits:
  -delete_unreferenced_peptide_hits
#end if
-threads \${GALAXY_SLOTS:-24} 
#if $param_precursor_rt:
  -precursor:rt $param_precursor_rt
#end if
#if $param_precursor_mz:
  -precursor:mz $param_precursor_mz
#end if
#if $param_precursor_allow_missing:
  -precursor:allow_missing
#end if
#if $param_score_pep:
  -score:pep $param_score_pep
#end if
#if $param_score_prot:
  -score:prot $param_score_prot
#end if
#if $param_thresh_pep:
  -thresh:pep $param_thresh_pep
#end if
#if $param_thresh_prot:
  -thresh:prot $param_thresh_prot
#end if
#if $param_whitelist_proteins:
  -whitelist:proteins $param_whitelist_proteins
#end if
#if $param_whitelist_by_seq_only:
  -whitelist:by_seq_only
#end if
#if $param_blacklist_peptides:
  -blacklist:peptides $param_blacklist_peptides
#end if
#if $param_rt_p_value:
  -rt:p_value $param_rt_p_value
#end if
#if $param_rt_p_value_1st_dim:
  -rt:p_value_1st_dim $param_rt_p_value_1st_dim
#end if
#if $param_mz_error:
  -mz:error $param_mz_error
#end if
#if $param_mz_unit:
  -mz:unit
  #if " " in str($param_mz_unit):
    "$param_mz_unit"
  #else
    $param_mz_unit
  #end if
#end if
#if $param_best_n_peptide_hits:
  -best:n_peptide_hits $param_best_n_peptide_hits
#end if
#if $param_best_n_protein_hits:
  -best:n_protein_hits $param_best_n_protein_hits
#end if
#if $param_best_strict:
  -best:strict
#end if
#if $adv_opts.adv_opts_selector=='advanced':
    #if $adv_opts.param_best_n_to_m_peptide_hits:
  -best:n_to_m_peptide_hits $adv_opts.param_best_n_to_m_peptide_hits
#end if
#end if
</command>
  <inputs>
    <param name="param_in" type="data" format="idXML" optional="False" label="input file" help="(-in) "/>
    <param name="param_min_length" type="integer" min="0" optional="True" value="0" label="Keep only peptide hits with a length greater or equal this value" help="(-min_length) Value 0 will have no filter effect"/>
    <param name="param_max_length" type="integer" max="0" optional="True" value="0" label="Keep only peptide hits with a length less or equal this value" help="(-max_length) Value 0 will have no filter effect. Value is overridden by min_length, i.e. if max_length &lt; min_length, max_length will be ignored"/>
    <param name="param_min_charge" type="integer" min="1" optional="True" value="1" label="Keep only peptide hits for tandem spectra with charge greater or equal this value" help="(-min_charge) "/>
    <param name="param_var_mods" type="boolean" truevalue="-var_mods" falsevalue="" checked="false" optional="True" label="Keep only peptide hits with variable modifications (fixed modifications from SearchParameters will be ignored)" help="(-var_mods) "/>
    <param name="param_unique" type="boolean" truevalue="-unique" falsevalue="" checked="false" optional="True" label="If a peptide hit occurs more than once per PSM, only one instance is kept" help="(-unique) "/>
    <param name="param_unique_per_protein" type="boolean" truevalue="-unique_per_protein" falsevalue="" checked="false" optional="True" label="Only peptides matching exactly one protein are kept" help="(-unique_per_protein) Remember that isoforms count as different proteins!"/>
    <param name="param_keep_unreferenced_protein_hits" type="boolean" truevalue="-keep_unreferenced_protein_hits" falsevalue="" checked="false" optional="True" label="Proteins not referenced by a peptide are retained in the ids" help="(-keep_unreferenced_protein_hits) "/>
    <param name="param_removeDecoys" type="boolean" truevalue="-removeDecoys" falsevalue="" checked="false" optional="True" label="Remove Proteins with the idDecoy flag" help="(-removeDecoys) Usually used in combination with 'delete_unreferenced_peptide_hits'"/>
    <param name="param_delete_unreferenced_peptide_hits" type="boolean" truevalue="-delete_unreferenced_peptide_hits" falsevalue="" checked="false" optional="True" label="Peptides not referenced by any protein are deleted in the ids" help="(-delete_unreferenced_peptide_hits) Usually used in combination with 'score:prot' or 'thresh:prot'"/>
    <param name="param_precursor_rt" type="text" size="30" value=":" label="Retention time range to extract" help="(-rt) ">
      <sanitizer>
        <valid initial="string.printable"/>
      </sanitizer>
    </param>
    <param name="param_precursor_mz" type="text" size="30" value=":" label="Mass-to-charge range to extract" help="(-mz) ">
      <sanitizer>
        <valid initial="string.printable"/>
      </sanitizer>
    </param>
    <param name="param_precursor_allow_missing" type="boolean" truevalue="-precursor:allow_missing" falsevalue="" checked="false" optional="True" label="When filtering by precursor RT or m/z, keep peptide IDs with missing precursor information ('RT'/'MZ' meta values)?" help="(-allow_missing) "/>
    <param name="param_score_pep" type="float" value="0.0" label="The score which should be reached by a peptide hit to be kept" help="(-pep) The score is dependent on the most recent(!) preprocessing - it could be Mascot scores (if a MascotAdapter was applied before), or an FDR (if FalseDiscoveryRate was applied before), etc"/>
    <param name="param_score_prot" type="float" value="0.0" label="The score which should be reached by a protein hit to be kept" help="(-prot) Use in combination with 'delete_unreferenced_peptide_hits' to remove affected peptides"/>
    <param name="param_thresh_pep" type="float" value="0.0" label="Keep a peptide hit only if its score is above this fraction of the peptide significance threshold" help="(-pep) "/>
    <param name="param_thresh_prot" type="float" value="0.0" label="Keep a protein hit only if its score is above this fraction of the protein significance threshold" help="(-prot) Use in combination with 'delete_unreferenced_peptide_hits' to remove affected peptides"/>
    <param name="param_whitelist_proteins" type="data" format="fasta" optional="True" label="filename of a FASTA file containing protein sequences" help="(-proteins) &lt;br&gt;All peptides that are not a substring of a sequence in this file are removed &lt;br&gt;All proteins whose accession is not present in this file are removed"/>
    <param name="param_whitelist_by_seq_only" type="boolean" truevalue="-whitelist:by_seq_only" falsevalue="" checked="false" optional="True" label="Match peptides with FASTA file by sequence instead of accession and disable protein filtering" help="(-by_seq_only) "/>
    <param name="param_blacklist_peptides" type="data" format="idXML" optional="True" label="Peptides having the same sequence as any peptide in this file will be filtered out" help="(-peptides) "/>
    <param name="param_rt_p_value" type="float" min="0.0" max="1.0" optional="True" value="0.0" label="Retention time filtering by the p-value predicted by RTPredict" help="(-p_value) "/>
    <param name="param_rt_p_value_1st_dim" type="float" min="0.0" max="1.0" optional="True" value="0.0" label="Retention time filtering by the p-value predicted by RTPredict for first dimension" help="(-p_value_1st_dim) "/>
    <param name="param_mz_error" type="float" value="-1.0" label="Filtering by deviation to theoretical mass (disabled for negative values)" help="(-error) "/>
    <param name="param_mz_unit" type="select" optional="True" value="ppm" label="Absolute or relativ erro" help="(-unit) ">
      <option value="Da">Da</option>
      <option value="ppm">ppm</option>
    </param>
    <param name="param_best_n_peptide_hits" type="integer" min="0" optional="True" value="0" label="Keep only the 'n' highest scoring peptide hits per spectrum (for n&gt;0)" help="(-n_peptide_hits) "/>
    <param name="param_best_n_protein_hits" type="integer" min="0" optional="True" value="0" label="Keep only the 'n' highest scoring protein hits (for n&gt;0)" help="(-n_protein_hits) "/>
    <param name="param_best_strict" type="boolean" truevalue="-best:strict" falsevalue="" checked="false" optional="True" label="Keep only the highest scoring peptide hit" help="(-strict) &lt;br&gt;Similar to n_peptide_hits=1, but if there are two or more highest scoring hits, none are kept"/>
    <expand macro="advanced_options">
      <param name="param_best_n_to_m_peptide_hits" type="text" size="30" value=":" label="peptide hit rank range to extracts" help="(-n_to_m_peptide_hits) ">
        <sanitizer>
          <valid initial="string.printable"/>
        </sanitizer>
      </param>
    </expand>
  </inputs>
  <outputs>
    <data name="param_out" format="idXML"/>
  </outputs>
  <help>**What it does**

Filters results from protein or peptide identification engines based on different criteria.


For more information, visit http://ftp.mi.fu-berlin.de/OpenMS/release-documentation/html/TOPP_IDFilter.html</help>
  <expand macro="references"/>
</tool>
