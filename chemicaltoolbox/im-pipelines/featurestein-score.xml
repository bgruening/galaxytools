<tool id="featurestein_score" name="Score poses with 'FeatureStein' merged features maps" version="0.1">
    <description>shape and feature overlays</description>
    <macros>
        <import>macros.xml</import>
        <token name="@GALAXY_VERSION@">0</token>
    </macros>
    <expand macro="requirements" />
    <command detect_errors="exit_code">
<![CDATA[
        python -m pipelines.xchem.featurestein_score -i '$input' -if sdf -f '$featuremaps' -o output -of sdf --no-gzip &&
        mv output.sdf '$output'
]]>
    </command>
    <inputs>
        <param name="input" format="sdf" type="data" label="Ligands to score" help="In SDF format"/>
        <param name="featuremaps" format="binary" type="data" label="The merged feature maps" help="A Python pickle"/>
    </inputs>
    <outputs>
        <data format="sdf" name="output" label="The scored ligands"/>
    </outputs>
    <tests>
        <test>
            <param name="input" ftype='sdf' value="poses.sdf" />
            <param name="featuremaps" ftype='binary' value="fmaps.p" />
            <output name="output" ftype="sdf">
                <assert_contents>
                    <has_text text="Featurestein_Score" />
                </assert_contents>
            </output>
        </test>
    </tests>
    <help>
<![CDATA[

.. class:: infomark

**What this tool does**

FeatureStein involves use of merged RDKit feature maps to score ligand poses in terms of how well the features overlap
with features from a set of ligands, typically fragment screening hits. The features are molecular features like
hydrogen bond donors and acceptors or hydrophobic groups.
See this Jupyter notebook for more information: https://github.com/tdudgeon/jupyter_mpro/blob/master/featurestein/FeatureStein.ipynb
and this blog for more general info on RDKit feature maps:
http://rdkit.blogspot.com/2017/11/using-feature-maps.html

This module scores a set of ligand poses using the merged feature maps that can be generated by the 'featurestein_generate' tool.

The resulting score typically ranges from 0 (no feature overlap) to 1 (complete feature overlap).

-----

.. class:: infomark

**Input**

- poses: SD-file of ligand poses to score
- featuremaps: Python pickle containing the merged feature maps

-----

.. class:: infomark

 **Output**

SD-file with the FeatureStein scores added.


]]>
    </help>
    <expand macro="citations" />
</tool>
