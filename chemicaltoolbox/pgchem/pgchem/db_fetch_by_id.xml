<tool id="pgchem_db_fetch_by_id" name="Fetch" version="@TOOL_VERSION@+galaxy@GALAXY_VERSION@" profile="23.0">
  <description>a list of compounds by unique identifier</description>
  <macros>
    <import>macros.xml</import>
    <token name="@GALAXY_VERSION@">0</token>
  </macros>
  <expand macro="requirements"/>
  <command detect_errors="exit_code">
<![CDATA[
    python '$__tool_directory__/db_fetch_by_id.py'
    -i $infile
    -c $column_number
    -dbname $lib.fields.db_name
    -dbuser $lib.fields.username
    -dbhost $lib.fields.server
    -dbpasswd $lib.fields.pswd
    -lib $lib.fields.libname
    -o $outfile
    -oformat $output_opts.output_opts_selector
    #if $output_opts.output_opts_selector == "table":
      -fetch "$output_opts.fields.value"
      #if $output_opts.header.value:
        --header $output_opts.header
      #end if
    #else if $output_opts.output_opts_selector == "sdf":
      -fetch "$output_opts.fields.value"
    #end if
    2>&1
]]>
  </command>
  <inputs>
    <param name="infile" type="data" format="tabular" label="Select input file"/>
    <param name="column_number" label="Specify the column number containing the compounds id" type="data_column" data_ref="infile" accept_default="true" />
    <expand macro="lib_param"/>
    <expand macro="output_opts_param"/>
  </inputs>
  <outputs>
        <data format="sdf" name="outfile">
            <change_format>
                <when input="output_opts.output_opts_selector" value="can_smiles" format="smi"/>
                <when input="output_opts.output_opts_selector" value="inchi" format="inchi"/>
                <when input="output_opts.output_opts_selector" value="mol2" format="mol2"/>
                <when input="output_opts.output_opts_selector" value="table" format="tabular"/>
            </change_format>
        </data>
    </outputs>
    <tests>
      <test expect_failure="true" />
    </tests>
  <help>
<![CDATA[

.. class:: infomark

**What does this tool do?**

  This tool queries a database of compounds by id and retrieves the resulting molecules.

-----

.. class:: infomark

**Input:** the input file needs to be a tab separated file, one of the columns of which containing the unique identifier for each molecule.

-----

.. class:: infomark

**Output:** the output formats included in this implementation are:

    # tabular formatted file with selected properties for the compounds. The header of the table may be included as the first raw of the table.

    # sdf formatted coordinates of the molecules, with selected properties stored as meta-data for each compound.

    # SMILES, InChI or mol2 formatted files containing the 1D strings or 3D coordinates for each compound.

-----

**This tool uses Pybel:** N. M. O'Boyle, C. Morley and G. R. Hutchison. Pybel: a Python wrapper for the OpenBabel cheminformatics toolkit Chem. Cent. J. 2008, 2, 5.

**ZINC library** obtained from: http://zinc.docking.org

**ChEMBL library** obtained from: https://www.ebi.ac.uk/chembldb

**DNP - Dictionary of Natural Products library** purchased from: http://dnp.chemnetbase.com

**Spectrophores(TM)** is a registered tool implemented in the open-source OpenBabel. Copyright (C) 2005-2011 by Silicos NV.

]]>
  </help>
  <expand macro="citations"/>
</tool>
