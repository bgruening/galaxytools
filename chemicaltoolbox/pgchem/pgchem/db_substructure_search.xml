<tool id="pgchem_db_sub_search" name="Substructure search" version="@TOOL_VERSION@+galaxy@GALAXY_VERSION@" profile="23.0">
  <description>of small molecules</description>
  <macros>
    <import>macros.xml</import>
    <token name="@GALAXY_VERSION@">0</token>
  </macros>
  <options sanitize="False"/>
  <expand macro="requirements"/>
  <command detect_errors="exit_code">
<![CDATA[
    python '$__tool_directory__/db_substructure_search.py'
      --istyle $input_opts.input_style
      #if $input_opts.input_style == 'pattern':
        -i "$input_opts.pattern_string"
      #else:
        -i $input_opts.pattern_file
      #end if
      -max $max_results
      -dbname $lib.fields.db_name
      -dbuser $lib.fields.username
      -dbhost $lib.fields.server
      -dbpasswd $lib.fields.pswd
      -lib $lib.fields.libname
      -o $outfile
      -oformat $output_opts.output_opts_selector
      #if $output_opts.output_opts_selector == "table":
        -fetch "$output_opts.fields.value"
        #if $output_opts.header.value:
          --header $output_opts.header
        #end if
      #else if $output_opts.output_opts_selector == "sdf":
        -fetch "$output_opts.fields.value"
      #end if
]]>
  </command>
  <inputs>
    <conditional name="input_opts">
      <param name="input_style" type="select" label="Specify input style">
        <option value="pattern">SMARTS pattern</option>
        <option value="infile">Multiple molecules (SMILES file)</option>
      </param>
      <when value="pattern">
        <param name="pattern_string" type="text" label="Insert a SMARTS pattern to be matched against the library"/>
        <param name="pattern_file" type="hidden"/>
      </when>
      <when value="infile">
        <param name="pattern_string" type="hidden"/>
        <param name="pattern_file" type="data" format="smi" label="Select SMILES formatted input file with multiple molecules"/>
      </when>
    </conditional>
    <expand macro="lib_param"/>
    <param name="max_results" type="integer" value="500" label="Specify the maximum number of results to be retrieved"/>
    <expand macro="output_opts_param"/>
  </inputs>
  <outputs>
    <data name="outfile" format="tabular">
        <change_format>
            <when input="output_opts.output_opts_selector" value="can_smiles" format="smi"/>
            <when input="output_opts.output_opts_selector" value="inchi" format="inchi"/>
            <when input="output_opts.output_opts_selector" value="sdf" format="sdf"/>
            <when input="output_opts.output_opts_selector" value="mol2" format="mol2"/>
        </change_format>
    </data>
  </outputs>
  <tests>
    <test expect_failure="true" />
  </tests>
  <help>
<![CDATA[

.. class:: infomark

**What does this tool do?**

  This tool performs a substructure search on a small molecules database, based on the fingerprint descriptor of the input pattern.

-----

.. class:: warningmark

**Tip:** exact substructure searches are time-consuming. Please, be patient :)

-----

.. class:: infomark

**Output:** the output formats included in this implementation are:

    # tabular formatted file with selected properties for the compounds. The header of the table may be included as the first raw of the table.

    # sdf formatted coordinates of the molecules, with selected properties stored as meta-data for each compound.

    # SMILES, InChI or mol2 formatted files containing the 1D strings or 3D coordinates of each compound.

-----

**This tool uses Pybel:** N. M. O'Boyle, C. Morley and G. R. Hutchison. Pybel: a Python wrapper for the OpenBabel cheminformatics toolkit Chem. Cent. J. 2008, 2, 5.

**ZINC library** obtained from: http://zinc.docking.org

**ChEMBL library** obtained from: https://www.ebi.ac.uk/chembldb

**DNP - Dictionary of Natural Products library** purchased from: http://dnp.chemnetbase.com

**Spectrophores(TM)** is a registered tool implemented in the open-source OpenBabel. Copyright (C) 2005-2011 by Silicos NV.

]]>
  </help>
  <expand macro="citations"/>
</tool>
