<tool id="fragmenter" name="Fragmenter" version="0.1+galaxy0" profile="23.0">
    <description>- splits a molecule into fragments</description>
    <parallelism method="multi" split_inputs="infile" split_mode="to_size" split_size="100000" merge_outputs="outfile,fragment_file"></parallelism>
    <requirements>
        <requirement type="package" version="3.1.1">openbabel</requirement>
    </requirements>
    <command detect_errors="exit_code">
<![CDATA[
    python '$__tool_directory__/fragmenter.py'
        -i $infile
        --input-format ${infile.ext}
        -o $outfile
        --output-format $oformat
        -r $rules
        $mark
        #if $non_fragment_file:
            --non-fragments $fragment_file
        #end if
    2>&1
]]>
  </command>
  <inputs>
    <param name="infile" type="data" format="sdf,smi,mol,inchi" label="Input file" help="Dataset missing? See TIP below"/>
    <param name='rules' type='select' format='text' label="Splitting rules.">
        <option value='recap'>Recap Rules</option>
        <option value='rotbonds'>rotatable bonds</option>
        <option value='rings'>ring</option>
    </param>
    <param name='oformat' type='select' format='text' label="Output format.">
        <option value='smi'>SMILES</option>
        <option value='inchi'>InChI</option>
        <option value='sdf'>SD-Files</option>
        <option value='mol2'>mol2</option>
    </param>
    <param name='mark' type='boolean' label='Replaces the newly created free ends on each bond break with some marker atoms' truevalue='--mark-sticky-ends' falsevalue='' help='This option is usefull if you want to to merge the fragments afterwarts.' />
    <param name='non_fragment_file' type='boolean' label='Output an additional file with all molecules that are not fragmented' truevalue='True' falsevalue='False' help='Without that option such molecules will also appear in the regular output file.' />
  </inputs>
  <outputs>
        <data format="smi" name="outfile">
            <change_format>
                <when input="oformat" value="inchi" format="inchi"/>
                <when input="oformat" value="sdf" format="sdf"/>
                <when input="oformat" value="mol2" format="mol2"/>
            </change_format>
       </data>
   <data format="smi" name="fragment_file" label="Fragments generated by ${tool.name} on ${on_string}">
     <filter>non_fragment_file is True</filter>
   </data>
  </outputs>
  <tests>
    <test expect_num_outputs="1">
        <param name="infile" ftype="sdf" value="CID_2244.sdf"/>
        <param name='rules' value='recap' />
        <param name='oformat' value='smi' />
        <output name="outfile" ftype="smi" file='fragmenter_on_CID_2244_recap.smi'/>
    </test>
    <test expect_num_outputs="1">
        <param name="infile" ftype="sdf" value="CID_2244.sdf"/>
        <param name='rules' value='recap' />
        <param name='oformat' value='smi' />
        <param name='mark' value='--mark-sticky-ends' />
        <output name="outfile" ftype="smi" file='fragmenter_on_CID_2244_recap_mark.smi'/>
    </test>
 </tests>

<help>
<![CDATA[

.. class:: infomark

**What this tool does**

Splits a molecule in smaller fragments according to predefined rules, e.g. the RECAP-rules.

-----

.. class:: infomark

**Input**

* Example::

	TEST

-----

.. class:: infomark

**Cite**

Based on a script_ from TJ O'Donnell

.. _script: https://gist.github.com/95387

Modified by B Gruening
Copyright 2009-2012 TJ O'Donnell, B Gruening



]]>
 </help>
 <citations>
    <citation type="doi">10.1186/1758-2946-3-33</citation>
 </citations>
</tool>
