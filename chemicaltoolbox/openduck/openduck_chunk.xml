<tool id="openduck_chunk" name="OpenDUck chunk" version="@VERSION@">
    <description>for dynamic undocking</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements" />
    <command detect_errors="exit_code"><![CDATA[
        cp '$ligand' ./ligand.sdf &&
        duck_chunk
            -p '$protein'
            -l ./ligand.sdf
            -c '$cutoff'
            $ignore_buffers
            ## -i is interaction, e.g. A_ASP_156_OD2
            -i '${ia.chain_sel}'_'${ia.res_sel}'_'${ia.resid_sel}'_'${ia.atom_sel}'

        #if $return_tar:
            && tar -czf allfiles.tar.gz --exclude=allfiles.tar.gz *
        #end if

    ]]></command>
    <inputs>
        <param argument="protein" type="data" format='pdb' label="PDB file for apoprotein"/>
        <param argument="ligand" type="data" format='sdf,mol' label="SDF/MOL file containing a single ligand"/>
        <param argument="cutoff" type="float" min="0" value="5" label="Cutoff" help="Cutoff for chunk generation (in angstroms)" />
        <param argument="ignore_buffers" type="select" label="Ignore buffers (solvent, ions etc.)?">
            <option value="">Remove buffers</option>
            <option value="-b">Leave buffers</option>
        </param>
        <expand macro="interaction_params" />
        <expand macro="tar_param" />

    </inputs>
    <outputs>
        <data name="chunk" format="pdb" from_work_dir="protein_out_prot.pdb" label="${tool.name} PDB file"/>
        <expand macro="tar_output" />
    </outputs>
    <tests>
        <test expect_num_outputs="1">
            <param name="protein" value="1n2v_apo.pdb" />
            <param name="ligand" value="ligand.mol" />
            <param name="cutoff" value="5" />
            <param name="ignore_buffers" value="" />
            <param name="chain_sel" value="A" />
            <param name="res_sel" value="ASP" />
            <param name="resid_sel" value="156" />
            <param name="atom_sel" value="OD2" />
            <param name="return_tar" value="false" />
            <output name="chunk" file="protein_out_prot.pdb" />
        </test>
    </tests>
    <help><![CDATA[

.. class:: infomark

**What it does**

Produce chunk automatically for dynamic undocking (DUck). Chunking entails selecting a region of the protein which is used for a DUck simulation.

This Galaxy tool uses OpenDUck, an open-source implementation of the original DUck method, using OpenMM and AmberTools.

_____

.. class:: infomark

**Input**

       - PDB file for protein
       - SDF/MOL file for ligand
       - Parameters defining the protein-ligand interaction

_____

        
.. class:: infomark

**Output**

       - PDB file containing the chunked protein ready for system preparation.

A tar file is also produced as a optional output, containing all files produced by the tool.

    ]]></help>
    <expand macro="citations" />
</tool>