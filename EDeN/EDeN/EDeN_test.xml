<tool id="bg_eden_test" name="EDeN Test" version="0.1">
    <description></description>
    <macros>
        <import>eden_macros.xml</import>
    </macros>
    <expand macro="requirements" />
    <command>
<![CDATA[
        EDeN --action TEST

        --input_data_file_name  $sparse_vector_infile
        --file_type "SPARSE_VECTOR"
        --binary_file_type

        --model_file_name $model_infile

        --minimal_output

]]>
    </command>
    <inputs>
        <param format="eden_sparse_vector" name="sparse_vector_infile" type="data" label="Input File" help="Sparse Vector file, created with EDeN convert." />
        <param format="txt" name="model_infile" type="data" label="Input Model"
            help="Created with EDeN Train."/>

        <expand macro="kernel_type_options" />

        <expand macro="graph_types" />

        <expand macro="normalization_kernel_hash_radius_dist_vertex" />

    </inputs>
    <outputs>
        <data format="tabular" name="prediction" from_work_dir="prediction" label="EDeN on ${on_string}: Prediction"/>
        <data format="tabular" name="margin" from_work_dir="margin" label="EDeN on ${on_string}: Margin"/>
    </outputs>
    <tests>
        <test>
        </test>
    </tests>
    <help>
<![CDATA[

.. class:: infomark

**What it does**

The linear model is induced using the accelerated stochastic gradient descent technique by LÃ©on Bottou and Yann LeCun.
When the target information is 0, a self-training algorithm is used to impute a positive or negative class to the unsupervised instances.
If the target information is imbalanced a minority class resampling technique is used to rebalance the training set.

@references@

]]>
    </help>
</tool>
