<tool id="rnafold" name="RNAfold" version="2.1.6.0">
    <description>Calculate minimum free energy secondary structures and partition function of RNAs</description>
    <expand macro="requirements" />
    <expand macro="version_command" />
    <expand macro="stdio" />
    <macros>
        <token name="@EXECUTABLE@">RNAfold</token>
        <import>macros.xml</import>
    </macros>
    <command interpreter="python">
        rnafold.py -i $fasta_input -o1 $tabularFile -o2 $imagesFile
        #if $pfselect.pf=="yes" 
            --partitionFunction
        #end if

        #if $measelect.mea=="yes"
            --mea $measelect.meavalue
        #end if

        --parameters " -T$temperature -d$dangling
            #if $varExists('$advancedOptions.noconversion')
                $advancedOptions.noconversion 
                $advancedOptions.gquad
                $advancedOptions.nolp
                $advancedOptions.nogu
                $advancedOptions.noclosinggu
                $advancedOptions.notetra
                $advancedOptions.canonicalonly
                $advancedOptions.circular
            #end if
        "
    </command>

    <inputs>
    <param format="fasta" name="fasta_input" type="data" label="FASTA file"/>
        <param name="temperature" size="6" type="float" value="37.0" label="temperature [Â°C]" help="-T"/>
        <param name="dangling" type="select" label="how to treat dangling end energies" help="-d">
            <option value="0">0: ignore dangling ends</option>
            <option value="1">1: unpaired bases participate in one dangling end only</option>
            <option value="2" selected="True">2: unpaired bases participate in all dangling ends</option>
            <option value="3">3: allow coaxial stacking</option>
        </param>
        <conditional name="pfselect">
            <param name="pf" type="select" label="calculate partition function" help="--partfunc">
                <option value="no">no</option>
                <option value="yes">yes</option>
            </param>
        </conditional>
        <conditional name="measelect">
            <param name="mea" type="select" label="calculate maximum expected accuracy" help="--MEA">
                <option value="no">no</option>
                <option value="yes">yes</option>
            </param>
            <when value="yes">
                <param name="meavalue" size="6" type="float" value="1.0" label="Gamma Value"/>
            </when>
        </conditional>
        <conditional name="advancedOptions">
            <param name="advancedSelector" type="boolean" checked="false" label=" advanced options"/>
            <when value="true">
                <param name="noconversion" type="boolean" truevalue="--noconv" falsevalue="" checked="false" label="no conversion" help="--noconv  do not convert thymine to uracile (T -> U)."/>
                <param name="gquad" type="boolean" truevalue="--gquad" falsevalue="" checked="false" label="G Quadruplex formation" help="-g  take into account G Quadruplex formation"/>
                <param name="nolp" type="boolean" truevalue="--noLP" falsevalue="" checked="false" label="No lonely pairs" help="--noLP  don't allow lonely pairs."/>
                <param name="nogu" type="boolean" truevalue="--noGU" falsevalue="" checked="false" label="No GU pairing" help="--noGU  don't allow pairing of G and U."/>
                <param name="noclosinggu" type="boolean" truevalue="--noClosingGU" falsevalue="" checked="false" label="No GU pairing at the ends" help="--noClosingGU  don't allow pairing of G and U at the ends of helices."/>
                <param name="notetra" type="boolean" truevalue="--noTetra" falsevalue="" checked="false" label="No stabilization for loops, hairpins etc." help="--noTetra"/>
                <param name="canonicalonly" type="boolean" truevalue="--canonicalBPonly" falsevalue="" checked="false" label="Canonical basepairing only" help="--canonicalBPonly"/>
                <param name="circular" type="boolean" truevalue="--circ" falsevalue="" checked="false" label="Assume circular RNA structure" help="--circ"/>
            </when>
        </conditional>
    </inputs>
    <outputs>  
        <data format="txt" name="tabularFile" label="Tabular File"/>
        <data format="tar" name="imagesFile" label="Image File"/>
    </outputs>
    <tests>
    </tests>
    <help>
**RNAfold**

The program reads RNA sequences, calculates their minimum free 
energy (mfe) structure and the mfe structure in dot-bracket notation.

If the -p option was given it also computes the 
partition function (pf) and base pairing probability matrix.

The dot plot of the base pairing probability matrix shows a matrix of squares with area proportional to the pairing 
probability in the upper right half, and one square for each pair in the 
minimum free energy structure in the lower left half. For each pair i-j with 
probability p>10E-6 there is a line of the form

i  j  sqrt(p)  ubox

in the PostScript file, so that the pair probabilities can be easily extracted.

The sequences have to be provided in FASTA format. The first word (max. 42 char) of the FASTA header will be used for output file names. PostScript files "name_ss.ps" and "name_dp.ps" are produced for the structure and dot plot, respectively.
The program will read the whole FASTA input file and provide output for each found sequence.



-----

**Input format**

RNAfold requires one input file
- FASTA file

------

**Outputs**

- Tab-seperated file
    - 1st column: header line of FASTA input
    - 2nd column: sequence
    - 3rd column: dot-bracket notation
    - 4th column: free energy
    - if the partition function or the mean ensemble accuracy is calculated then more columns are added
    - 5th column: dot-bracket notation
    - 6th column: free energy
    - 7th column: dot-bracket notation
    - 8th column: free energy
    - if the mean ensemble accuracy is calculated then even more columns are added
    - 9th column: dot-bracket
    - 10th column:free energy
    - 9/11th column: frequency of mfe ensemble, ensemble diversity

- several possible postscript images bundled together in a tar file
    - secondary structure for each sequence in the input file
    - if partition function is calculated then also the pairing probabilty matrix is generated for each sequence


@citation@

    </help>
</tool>
