<tool id="rnainverse" name="RNAinverse" version="2.1.6.0">
    <description>Calculate RNA sequence from secondary structure</description>
    <expand macro="requirements" />
    <expand macro="version_command" />
    <expand macro="stdio" />
    <macros>
        <token name="@EXECUTABLE@">RNAinverse</token>
        <import>macros.xml</import>
    </macros>
    <command>
<![CDATA[
        RNAinverse < $input > $outfile
        --function=#echo ''.join(str($algo).split(','))#
        -R$reps
        --final=$final

        #if $varExists('$advancedOptions.nogu')
            $advancedOptions.nogu
            $advancedOptions.noclosinggu
            $advancedOptions.notetra
        #end if

]]>
    </command>
    <inputs>
	    <param format="fasta" name="input" type="data" label="Clustal alignment file"/>
        <param name="temperature" size="6" type="float" value="37.0" label="Temperature [Â°C]" help="-T"/>

        <param name="reps" size="6" type="integer" value="1" min="1" label="Find so many sequences that fold close to that structure" help="-R: This parameter could be negative to search for exact solutions, but in that case the program might not terminate. If you need this functionality contact your admin or run the program locally."/>

        <param name="algo" type="select" multiple="true" display="checkboxes" label="Use these functions">
                <option value="m" selected="true">minimum energy</option>
                <option value="p">partition function</option>
        </param>
        <param name="final" size="6" type="float" value="0.0" label="If partition function is selected this value determines the convergence criterium." help="--final"/>

        <param name="dangling" type="select" label="how to treat dangling end energies" help="-d">
            <option value="2" selected="true">unpaired bases participate in all dangling ends (2)</option>
            <option value="0">ignore dangling ends (0)</option>
            <option value="1">unpaired bases participate in one dangling end only (1)</option>
            <option value="3">allow coaxial stacking (3)</option>
        </param>

        <conditional name="advancedOptions">
            <param name="advancedSelector" type="select"  label="advanced options">
                <option value="basic">basic Options</option>
                <option value="advanced">advanced Options</option>
            </param>
            <when value="advanced">
                <param name="nogu" type="boolean" checked="false" truevalue="-noGU" falsevalue="" label="No GU pairing" help="--noGU  don't allow pairing of G and U."/>
                <param name="noclosinggu" type="boolean" checked="false" truevalue="--noClosingGU" falsevalue="" label="No GU pairing at the ends" help="--noClosingGU  don't allow pairing of G and U at the ends of helices."/>
                <param name="notetra" type="boolean" checked="false" truevalue="--noTetra" falsevalue="" label="No stabilization for loops, hairpins etc." help="--noTetra"/>
            </when>
        </conditional>
    </inputs>
    <outputs>
        <data format="txt" name="outfile"/>
    </outputs>
    <tests>
    </tests>
    <help>
<![CDATA[
**RNAinverse**

The program searches for sequences folding into a predefined structure, thereby inverting the folding algorithm. For each search the best sequence found and its Hamming distance to the start sequence are printed. If the the search was unsuccessful, a structure distance to the target is appended.


-----

**Input format**

Input is similar to a Fasta file. First line should be the structure in dot-bracket notation, second line the starting sequence. Lines with '>' in the beginning are treated as comments. Characters in the start sequence other than "AUGC" will be treated as wild cards and replaced by a random character. Any lower case characters in the start sequence will be kept fixed during the search. If necessary, the sequence will be elongated to the length of the structure. Thus a string of "N"s as well as a blank line specify a random start sequence.

------

**Outputs**

- text output of each sequence with its Hamming distance and/or the energy if the partition function is selected

]]>
    </help>
    <expand macro="requirements" />
</tool>
