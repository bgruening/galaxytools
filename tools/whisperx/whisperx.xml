<tool id="whisperx" name="Speech to Text with Diarization" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="25.0" license="MIT">
    <description>
        Transcribe audio or video files to text using the OpenAI Whisper and speaker diarization (WhisperX)
    </description>
    <macros>
        <token name="@TOOL_VERSION@">3.4.2</token>
        <token name="@VERSION_SUFFIX@">1</token>
    </macros>
    <requirements>
        <container type="docker">quay.io/arash77/whisperx:3.4.2</container>
    </requirements>
    <command detect_errors="exit_code"><![CDATA[
export TORCH_HOME=\${WHISPERX_MODEL_DIR}/torch/ &&
export HF_HOME=\${WHISPERX_MODEL_DIR}/huggingface/ &&
export PYANNOTE_CACHE=\${WHISPERX_MODEL_DIR}/torch/pyannote/ &&
ln -s '$infile' ./input.${infile.ext} &&
whisperx ./input.${infile.ext}
--model $model
--model_cache_only True
--model_dir \${WHISPERX_MODEL_DIR}/faster-whisper
#if str($language):
    --language $language
#end if
--output_format $output_format
--output_dir ./outs
--device \${WHISPERX_DEVICE:-cpu}
--compute_type \${WHISPERX_COMPUTE_TYPE:-int8}
--verbose False
--diarize
    ]]></command>
    <inputs>
        <param name="infile" type="data" format="wav,mp3,mkv,flv,mpg,ogg,wma,mp4" label="Select audio or video file" help="Audio or video file to transcribe. Supported formats include wav, mp3, mkv, flv, mpg, ogg, wma, and mp4."/>
        <param argument="--model" type="select" label="Speech to Text Model" help="Select the Whisper model to use for transcription. The 'large' model is the most accurate, while smaller models are faster but less accurate.">
            <option value="tiny">Tiny (~10x faster than the large model)</option>
            <option value="base">Base (~7x faster than the large model)</option>
            <option value="small">Small (~4x faster than the large model)</option>
            <option value="medium">Medium (~2x faster than the large model)</option>
            <option value="large">Large</option>
            <option value="turbo" selected="true">Turbo (~8x faster than the large model)</option>
        </param>
        <param argument="--language" type="select" label="Language" help="Select the language of the audio file. If 'Auto (detect language)' is selected, the tool will attempt to automatically detect the language.">
            <option value="">Auto (detect language)</option>
            <option value="ar">Arabic</option>
            <option value="ca">Catalan</option>
            <option value="zh">Chinese</option>
            <option value="hr">Croatian</option>
            <option value="cs">Czech</option>
            <option value="da">Danish</option>
            <option value="nl">Dutch</option>
            <option value="en">English</option>
            <option value="eu">Basque</option>
            <option value="fa">Persian</option>
            <option value="fi">Finnish</option>
            <option value="fr">French</option>
            <option value="gl">Galician</option>
            <option value="de">German</option>
            <option value="el">Greek</option>
            <option value="he">Hebrew</option>
            <option value="hi">Hindi</option>
            <option value="hu">Hungarian</option>
            <option value="it">Italian</option>
            <option value="ja">Japanese</option>
            <option value="ka">Georgian</option>
            <option value="ko">Korean</option>
            <option value="lv">Latvian</option>
            <option value="ml">Malayalam</option>
            <option value="no">Norwegian</option>
            <option value="nn">Nynorsk</option>
            <option value="pl">Polish</option>
            <option value="pt">Portuguese</option>
            <option value="ro">Romanian</option>
            <option value="ru">Russian</option>
            <option value="sk">Slovak</option>
            <option value="sl">Slovenian</option>
            <option value="es">Spanish</option>
            <option value="sv">Swedish</option>
            <option value="tl">Tagalog</option>
            <option value="tr">Turkish</option>
            <option value="uk">Ukrainian</option>
            <option value="ur">Urdu</option>
            <option value="vi">Vietnamese</option>
        </param>
        <param argument="--output_format" type="select" label="Output Format" help="Select the format for the transcribed text. You can choose from text, JSON, SubRip (SRT), WebVTT (VTT), or tab-separated values (TSV).">
            <option value="all" selected="true">All</option>
            <option value="txt">Text</option>
            <option value="json">JSON</option>
            <option value="srt">SubRip</option>
            <option value="vtt">WebVTT</option>
            <option value="tsv">Tab-separated values</option>
        </param>
    </inputs>
    <outputs>
        <data name="output_txt" format="txt" from_work_dir="./outs/input.txt" label="${tool.name} on ${on_string}.txt">
            <filter>'txt' in output_format or 'all' in output_format</filter>
        </data>
        <data name="output_json" format="json" from_work_dir="./outs/input.json" label="${tool.name} on ${on_string}.json">
            <filter>'json' in output_format or 'all' in output_format</filter>
        </data>
        <data name="output_srt" format="txt" from_work_dir="./outs/input.srt" label="${tool.name} on ${on_string}.srt">
            <filter>'srt' in output_format or 'all' in output_format</filter>
        </data>
        <data name="output_vtt" format="txt" from_work_dir="./outs/input.vtt" label="${tool.name} on ${on_string}.vtt">
            <filter>'vtt' in output_format or 'all' in output_format</filter>
        </data>
        <data name="output_tsv" format="tabular" from_work_dir="./outs/input.tsv" label="${tool.name} on ${on_string}.tsv">
            <filter>'tsv' in output_format or 'all' in output_format</filter>
        </data>
    </outputs>
    <tests>
        <test expect_num_outputs="5">
            <param name="infile" value="english.wav" ftype="wav"/>
            <param name="model" value="tiny"/>
            <param name="language" value="en"/>
            <param name="output_format" value="all"/>
            <output name="output_txt" file="transcribe_english.txt"/>
            <output name="output_json" file="transcribe_english.json"/>
            <output name="output_srt" file="transcribe_english.srt"/>
            <output name="output_vtt" file="transcribe_english.vtt"/>
            <output name="output_tsv" file="transcribe_english.tsv"/>
        </test>
        <test expect_num_outputs="1">
            <param name="infile" value="german.wav" ftype="wav"/>
            <param name="model" value="small"/>
            <param name="language" value="de"/>
            <param name="output_format" value="txt"/>
            <output name="output_txt" file="transcribe_german.txt"/>
        </test>
        <test expect_num_outputs="1">
            <param name="infile" value="german_english.mp3" ftype="mp3"/>
            <param name="model" value="medium"/>
            <param name="output_format" value="txt"/>
            <output name="output_txt" file="transcribe_german_english.txt"/>
        </test>
        <test expect_num_outputs="1">
            <param name="infile" value="persian.wav" ftype="wav"/>
            <param name="model" value="turbo"/>
            <param name="language" value="fa"/>
            <param name="output_format" value="srt"/>
            <output name="output_txt" file="transcribe_persian.srt"/>
        </test>
    </tests>
    <help><![CDATA[

.. class:: infomark

**What it does**

Transcribe audio or video files to text and speaker diarization using the `WhisperX from Max Bain <https://github.com/m-bain/whisperX>`_.

Usage
.....


**Input**
Audio or video file to transcribe in one of wav, mp3, mkv, flv, mpg, ogg, wma, or mp4.


**Output**
Transcribed text in the selected format. The output can be in text, JSON, SubRip, WebVTT, or tab-separated values (tabular) format.
    ]]></help>
    <creator>
        <person givenName="Arash" familyName="Kadkhodaei" url="http://github.com/arash77"/>
    </creator>
    <citations>
        <citation type="doi">10.48550/arXiv.2303.00747</citation>
    </citations>
</tool>
