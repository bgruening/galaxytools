<?xml version='1.0' encoding='UTF-8'?>
<tool id="imagej2_bunwarpj_adapt_transform" name="Adapt an elastic transformation" version="@WRAPPER_VERSION@.0">
    <description>to a new image size with bUnwarpJ</description>
    <macros>
        <import>imagej2_macros.xml</import>
    </macros>
    <expand macro="fiji_requirements" />
    <command>
<![CDATA[
    python $__tool_directory__/imagej2_bunwarpj_adapt_transform.py
    --target_image "$target_image"
    --target_image_format $target_image.ext
    --source_image "$source_image"
    --source_image_format $source_image.ext
    --input_elastic_transformation "$input_elastic_transformation"
    --image_size_factor $image_size_factor
    --output "$output"
]]>
    </command>
    <inputs>
        <param format="bmp,eps,gif,jpg,pcx,pgm,png,psd,tiff" name="target_image" type="data" label="Target image"/>
        <param format="bmp,eps,gif,jpg,pcx,pgm,png,psd,tiff" name="source_image" type="data" label="Source image"/>
        <param format="txt" name="input_elastic_transformation" type="data" label="Target inverse transformation"/>
        <param name="image_size_factor" type="float" value="2.0" label="Image size factor" help="Must be a positive or negative power of 2 (0.25, 0.5, 2, 4, 8, etc)"/>
    </inputs>
    <outputs>
        <data name="output" format="txt" label="${tool.name} on ${on_string}: Image size factor ${image_size_factor}" />
    </outputs>
    <tests>
        <test>
            <param name="target_image" value="dotblot.jpg" />
            <param name="source_image" value="blobs.gif" />
            <param name="input_elastic_transformation" value="source_elastic_transformation.txt" />
            <param name="image_size_factor" value="2.0" />
            <output name="output" file="adapted_transformation.txt" ftype="txt" />
        </test>
    </tests>
    <help>
**What it does**

<![CDATA[
Transforms the coefficients of an elastic transformation according to a real image
factor.  This is useful, for example, for very large images, where sub-sampled versions
of the image (e.g., 4 times smaller) can be registered with the resulting transformations
adapted to the smaller image size (image factor = 4) so they can be applied to the high
resolution images.

]]>

    </help>
    <expand macro="bunwarpj_citations" />
</tool>
