<?xml version='1.0' encoding='UTF-8'?>
<tool id="imagej2_bunwarpj_elastic_transform" name="Apply elastic transformation" version="@WRAPPER_VERSION@.0">
    <description>with bUnwarpJ</description>
    <macros>
        <import>imagej2_macros.xml</import>
    </macros>
    <expand macro="fiji_requirements" />
    <command>
<![CDATA[
    python $__tool_directory__/imagej2_bunwarpj_elastic_transform.py
    --target_image "$target_image"
    --target_image_format $target_image.ext
    --source_image "$source_image"
    --source_image_format $source_image.ext
    --elastic_transformation $elastic_transformation
    --source_out "$source_out"
    --source_out_datatype $source_out_datatype
    --jython_script $__tool_directory__/imagej2_bunwarpj_elastic_transform_jython_script.py
]]>
    </command>
    <inputs>
        <param format="bmp,eps,gif,jpg,pcx,pgm,png,psd,tiff" name="target_image" type="data" label="Target image"/>
        <param format="bmp,eps,gif,jpg,pcx,pgm,png,psd,tiff" name="source_image" type="data" label="Source image"/>
        <!-- Support for a bUnwarpJ elastic transformation datatype should be added to Galaxy -->
        <param format="txt" name="elastic_transformation" type="data" label="Elastic transformation" help="As saved by bUnwarpJ in elastic format"/>
        <param name="source_out_datatype" type="select" label="Save registered source image as format">
            <expand macro="image_datatypes" />
        </param>
    </inputs>
    <outputs>
        <data name="source_out" format="png" label="${tool.name} on ${on_string}: Registered source image">
            <actions>
                <action type="format">
                    <option type="from_param" name="source_out_datatype" />
                </action>
            </actions>
        </data>
    </outputs>
    <tests>
        <test>
            <param name="target_image" value="dotblot.jpg" />
            <param name="source_image" value="blobs.gif" />
            <param name="elastic_transformation" value="blobs_direct_transf.txt" />
            <param name="source_out_datatype" value="png" />
            <output name="source_out" file="elastic_trans_registered_source1.png" compare="sim_size" />
        </test>
    </tests>
    <help>
**What it does**

<![CDATA[
Applies an elastic transformation to an image, producing another image which is elastically
deformed according to the transformation.  The transformation file must be in the same format
as the files created with the **Save Transformation** option in the **Align two images with bUnwarpJ**
tool.

]]>

    </help>
    <expand macro="bunwarpj_citations" />
</tool>
