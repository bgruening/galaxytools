<tool id="cellvoyager_to_ome_zarr_init" name="CellVoyager image to OME-Zarr Init" version="@VERSION@+galaxy0" profile="24.1">
    <description>Prepare OME-Zarr structure from Cellvoyager images</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements" />
    <command detect_errors="aggressive">
    <![CDATA[
	mkdir -p tmp/input_images tmp/zarr_output && 

        python3 $__tool_directory__/download_zenodo_images.py 
            --zenodo_doi '${zenodo_doi}' 
            --file_list '${file_list}' 
            --hash_dict '${hash_dict}' 
	    --image_folder 'tmp/input_images' 
	    --output_json 'parallelization_list.json' && 

          python3 $__tool_directory__/cellvoyager_to_ome_zarr_init.py 
	    --image_dirs "$(jq -r .download_path parallelization_list.json)"  
	    --zarr_dir 'tmp/zarr_output' 
            --allowed_channels '${allowed_channels}' 
            --num_levels ${num_levels} 
            --coarsening_xy ${coarsening_xy} 
            --image_extension '${image_extension}' 
            --output_json '${output_json}'
        ]]>
    </command>
    <inputs>
        <param name="zenodo_doi" type="text" label="Zenodo DOI or URL"/>
	<param name="file_list" type="data" format="txt" label="File list"/>
	<param name="hash_dict" type="data" format="txt" optional="true" label="Hash dictionary for files"/>
	<!--
		<param name="zarr_dir" type="text" label="Output Zarr path"  help="Path of the directory where the new OME-Zarrs will be created."/>
	-->
        <param name="allowed_channels" type="data" format="json" label="Allowed Channels in JSON format" />
        <param name="num_levels" type="integer" value="5" label="Number of pyramid levels" help="Number of resolution-pyramid levels. If set to 5, there will be the full-resolution level and 4 levels of downsampled images."/>
        <param name="coarsening_xy" type="integer" value="2" label="" help="Linear coarsening factor between subsequent levels. If set to `2`, level 1 is 2x downsampled, level 2 is 4x downsampled etc."/>
	<param name="image_extension" type="text" value="tif" label="Image extension" help="Filename extension of images (e.g. tif or png)"/>
	<param name="overwrite" type="boolean" value="false" label="Overwrite" help="If True, overwrite the output" />
      </inputs>
    <outputs>
        <data name="output_json" format="json" label="Parallelization list in JSON" />
    </outputs>
    <tests>
      <test>
        <param name="zenodo_doi" value="10.5281/zenodo.8287221" />
	<param name="file_list" value="file_list.txt"/>
	<!--
	<param name="image_dirs" value="10_5281_zenodo_8287221/"/>
	<param name="zarr_dir" value="/tmp/zarr_output"/>
	-->
        <param name="allowed_channels" value="allowed_channels.json"/>
        <param name="num_levels" value="2"/>
        <param name="coarsening_xy" value="2"/>
        <param name="image_extension" value="png"/>
        <output name="output_json" file="parallelization_list.json" compare="sim_size" delta_frac="0.1"/>
        </test>
    </tests>
    <help>
        <![CDATA[
        **What it does**
         This tool initializes the structure for an OME-Zarr plate based on CellVoyager images.
         It does not write the image data but only creates metadata and folder layout.
        ]]>
    </help>
    <expand macro="citations" />
</tool>
