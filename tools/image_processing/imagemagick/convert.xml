<tool id="imagemagick_image_convert" name="Convert image format" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="22.05">
    <description>with ImageMagick</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <command detect_errors="aggressive">
<![CDATA[
    ln -s '${input}' input.${input.ext} &&
    #if str($transformations) != 'None':
        #set $trans_options = str($transformations).replace(',', ' ')
    #else:
        #set $trans_options = ''
    #end if
    magick 
        'input.${input.ext}'
        -resize ${resize}%
        $trans_options
        #if $trimming.trimming_select == 'fuzz'
            -define trim:edges=$trimming.sides
            -fuzz ${trimming.fuzz_level}% 
            -trim
        #else if $trimming.trimming_select == "manual"
            -gravity $trimming.sides 
            #if $trimming.sides == "North" or $trimming.sides == "South":
                -chop 0x${trimming.pixels}
            #else if $trimming.sides == "East" or $trimming.sides == "West":
                -chop ${trimming.pixels}x0
            #end if
            +repage
        #end if
        #if $palette.palette_select == "automatic"
            -type Palette
        #else if $palette.palette_select == "manual"
            -colors '${palette.palette}'
        #end if
    #if $input.ext != 'pdf':
        ## single output file
        'temp.${output_format}'
        &&
        mv 'temp.${output_format}' '${output}'
    #else:
        ## create multiple output files for each PDF side
        +adjoin temp_%03d.${output_format}
        &&
        mkdir ./outputs &&
        mv temp_* ./outputs
    #end if
]]>
    </command>
    <inputs>
        <param format="jpg,png,bmp,gif,svg,eps,tiff,pdf" name="input" type="data" label="Image to convert"/>
        <param name="transformations" multiple="true" type="select" display="checkboxes" label="Transformations">
            <option value="-flip">flip vertically</option>
            <option value="-flop">flip horizontally</option>
            <option value="-rotate 90">rotate 90 degree to the right</option>
            <option value="-rotate 270">rotate 90 degree to the left</option>
            <option value="-rotate 180">rotate 180 degree</option>
        </param>
        <conditional name="trimming">
            <param name="trimming_select" type="select" label="Trim Image" help="Fuzz removes any edges that are exactly the same color as the corner pixels.">
                <option value="no" selected="true">No</option>
                <option value="fuzz">Fuzz</option>
                <option value="manual">Manual</option>
            </param>
            <when value="no"/>
            <when value="fuzz">
                <param name="fuzz_level" type="integer" min="0" label="Fuzz distance in percent." value="0" help="Colors within this distance are considered equal."/>
                <param name="sides" multiple="true" type="select" display="checkboxes" label="Which sides to trim?">
                    <option value="North">North</option>
                    <option value="East">East</option>
                    <option value="South">South</option>
                    <option value="West">West</option>
                </param>
            </when>
            <when value="manual">
                <param name="sides" type="select" label="Which sides to trim?">
                    <option value="North">North</option>
                    <option value="East">East</option>
                    <option value="South">South</option>
                    <option value="West">West</option>
                </param>
                <param name="pixels" type="integer" min="1" label="How many pixel to cut." value="50"/>
            </when>
        </conditional>
        <conditional name="palette">
            <param name="palette_select" type="select" label="Reduce Color Palette">
                <option value="no" selected="true">No</option>
                <option value="automatic">Automatic</option>
                <option value="manual">Manual</option>
            </param>
            <when value="automatic"/>
            <when value="manual">
                <param name="palette" type="integer" min="1" label="Color Palette Size" value="32" help="Number of colors to use, should be in powers of 2 (1, 2, 4, 8, 16, 32, 64, ...), otherwise space is wasted in the palette."/>
            </when>
            <when value="no"/>
        </conditional>
        <param name="resize" type="integer" value="100" label="Resize (%)" min="0"/>
        <param name="output_format" type="select" label="Output Format">
            <option value="jpg">jpg</option>
            <option value="png">png</option>
            <option value="bmp">bmp</option>
            <option value="gif">gif</option>
            <option value="svg">svg</option>
            <option value="eps">eps</option>
            <option value="pdf">pdf</option>
            <option value="tiff">tiff</option>
        </param>
    </inputs>
    <outputs>
        <data format="png" name="output">
            <change_format>
                <when input="output_format" value="jpg" format="jpg"/>
                <when input="output_format" value="png" format="png"/>
                <when input="output_format" value="bmp" format="bmp"/>
                <when input="output_format" value="gif" format="gif"/>
                <when input="output_format" value="svg" format="svg"/>
                <when input="output_format" value="eps" format="eps"/>
                <when input="output_format" value="pdf" format="pdf"/>
                <when input="output_format" value="tiff" format="tiff"/>
            </change_format>
            <filter>input.ext != "pdf"</filter>
        </data>
        <collection name="splitted_pdf" type="list" label="${tool.name} on ${on_string} collection">
            <discover_datasets pattern="__designation_and_ext__" directory="outputs"/>
            <filter>input.ext == "pdf"</filter>
        </collection>
    </outputs>
    <tests>
        <test expect_num_outputs="1">
            <param name="input" value="donald.jpg"/>
            <param name="output_format" value="png"/>
            <param name="transformations" value="-flip"/>
            <param name="resize" value="50"/>
            <conditional name="trimming">
                <param name="trimming_select" value="no"/>
            </conditional>
            <output name="output" file="result_image_convert_1.png" compare="sim_size" delta="20000"/>
        </test>
        <test expect_num_outputs="1">
            <param name="input" value="donald.jpg"/>
            <param name="output_format" value="jpg"/>
            <conditional name="trimming">
                <param name="trimming_select" value="no"/>
            </conditional>
            <conditional name="palette">
                <param name="palette_select" value="automatic"/>
            </conditional>
            <output name="output" file="donald-palette.jpg" compare="sim_size" delta="20000"/>
        </test>
        <test expect_num_outputs="1">
            <param name="input" value="donald.jpg"/>
            <param name="output_format" value="jpg"/>
            <conditional name="trimming">
                <param name="trimming_select" value="no"/>
            </conditional>
            <conditional name="palette">
                <param name="palette_select" value="manual"/>
                <param name="palette" value="2"/>
            </conditional>
            <output name="output" file="donald-colors-2.jpg" compare="sim_size" delta="20000"/>
        </test>
        <test expect_num_outputs="1">
            <param name="input" value="test.pdf"/>
            <param name="output_format" value="jpg"/>
                <conditional name="trimming">
                <param name="trimming_select" value="no"/>
            </conditional>
            <conditional name="palette">
                <param name="palette_select" value="no"/>
            </conditional>
            <output_collection name="splitted_pdf" count="12" type="list">
                <element name="temp_000" file="outputs/tmp_00.jpg" ftype="jpg" />
                <element name="temp_001" file="outputs/tmp_01.jpg" ftype="jpg" />
            </output_collection>
        <test expect_num_outputs="1">
            <param name="input" value="donald.jpg"/>
            <param name="output_format" value="jpg"/>
            <conditional name="trimming">
                <param name="trimming_select" value="manual"/>
                <param name="sides" value="North"/>
                <param name="pixels" value="100"/>
            </conditional>
            <output name="output" file="donald_chopped.jpg" compare="sim_size" delta="20000"/>
        </test> 
        <test expect_num_outputs="1">
            <param name="input" value="donald-colors-2.jpg"/>
            <param name="output_format" value="jpg"/>
            <conditional name="trimming">
                <param name="trimming_select" value="fuzz"/>
                <param name="sides" value="North"/>
                <param name="pixels" value="100"/>
            </conditional>
            <output name="fuzz_level" file="donald-colors-2-chopped.jpg" compare="sim_size" delta="20000"/>
        </test>     
        </test>
    </tests>
    <help>
<![CDATA[

**What it does**

This tool converts an image into another format. You can also do some transformations like flipping or rotating.
Here you can see, how -flip behaves:

Input:

.. image:: $PATH_TO_IMAGES/donald.jpg

Output:

.. image:: $PATH_TO_IMAGES/donald.png

]]>
    </help>
    <expand macro="citations"/>
</tool>
