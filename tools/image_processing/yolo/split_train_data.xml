<tool id="split_train_data" name="Split train data for YOLO training" version="@VERSION@+galaxy0" profile="24.2">
    <description>Split images into train,valid,test for YOLO training</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements" />
    <command detect_errors="aggressive">
    <![CDATA[
  
      mkdir -p ./input_images ./input_yolo ./split &&

      #for $i, $filename in enumerate($input_images):
          ln -s '$filename' './input_images/${filename.element_identifier}' &&
      #end for
	
      #for $s, $yolo in enumerate($input_yolo):
          ln -s '$yolo' './input_yolo/${yolo.element_identifier}' &&
      #end for

      python '$__tool_directory__/preprocessing.py' -i '$input_images' -y '$input_yolo' -o ./split -p '$num_train' -a '$input_json' &&

     

		
    ]]>
    </command>
    <configfiles>
        <inputs name="input_json"/>
    </configfiles>
    <inputs>
        <param name="input_images" type="data" format="jpg,png,tiff" multiple="true"  label="Input images"/>
        <param name="input_yolo" type="data" format="txt" multiple="true"  label="Input YOLO txt files" help="The YOLO text files, each text file must correspond to one input image(same name different extension)." />
	<param name="num_train" type="integer" default="70" label="How do you want to split your images for training?" help="Proportion of training images wrt valid and test images" />
	<param name="num_class" type="integer" default="1" label="Number of class names for images" />
	<param name="ds_name" type="string" lablel="Name of dataset" help="The name for your dataset"/>
    </inputs>
    <outputs>
	    <data format="csv" name="metrics" from_work_dir="metrics.csv" label="Model Metrics"/>
	    <data format="binary" name="model" from_work_dir="model.pt" label="Trained model" /> 
    </outputs>
    <tests>
        <test>
	    <param name="input_images" value="" />
	    <param name="input_yolo" value="" />
	    <param name="num_train" value="70" />
	    <param name="num_class" value="1" />
	    <param name="ds_name" value="tail" />
	    <output name="metrics" ftype='csv'>
		<assert_contents>
                    <has_size size="" />
                </assert_contents>
	    </output>
	    <output name="model" ftype="binary">
                <assert_contents>
                    <has_size size="" />
                </assert_contents>
	    </output>
        </test>
    </tests>
    <help>
<![CDATA[
        **What it does**
        This tool split the input images into train, valid, test then train a YOLO model.
]]>
    </help>
    <expand macro="citations" />
</tool>
