<tool id="yolo_predict" name="YOLO Prediction" version="@VERSION@+galaxy0" profile="24.2">
    <description>Prediction with YOLO models</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <requirements>
	<container type="docker" >quay.io/sunyi000/ultralytics-galaxy:latest</container>
    </requirements>
    <command detect_errors="aggressive">
    <![CDATA[
      export YOLO_CONFIG_DIR='\$HOME/.config/ultralytics' &&

      mkdir -p ./input_images ./runs ./models ./results && 

      #for $i, $filename in enumerate($input_images):
          ln -s '$filename' './input_images/${filename.element_identifier}' &&
      #end for

      cp '$model' './models/model.pt' &&

      python '$__tool_directory__/yolov8.py' 
		    --test_path='./input_images' 
		    --model_path='./models' 
		    --model_name='model' 
		    --run_dir='./runs' 
		    --save_dir='./results'
		    --image_size='$image_size'
		    --mode='$mode'
		    --foldername='overlaid_images'
		    --scale='$scale'
		    --degree='$degree'
		    --class_names_file='$class_name'
		    --confidence='$confidence'
		    --iou='$iou'
		    --max_det='$max_det'  

    ]]>
    </command>
    <inputs>
        <param name="input_images" type="data" format="jpg,png,tiff" multiple="true"  label="Input images"/>
        <param name="num_class" type="integer" label="Number of class names for images" />
	<param name="class_name" type="data" format="txt" label="YOLO class name file" />
	<param name="model" type="data" format="data" label="Model file" />
	<param name="mode" type="select" label="Prediction mode">
              <option value="segment">segment</option>
              <option value="detect">detect</option>
	</param>
	<param name="image_size" type="integer" value="1000" label="Image size" help="Size of input image to be used only as integer of w,h." />
	<param name="scale" type="float" value="0.5" label="Image scale" help="Image scale (+/- gain)" />
	<param name="degree" type="float" value="0.0" label="Image rotation" help="Image rotation (+/- deg)" />
 	<param name="confidence" type="float" value="0.5" label="Confidence" help="Confidence value (0-1) for each detected bounding box" />
	<param name="iou" type="float" value="0.7" label="IoU" help="Intersection over Union threshold for NMS" />
	<param name="max_det" type="integer" value="300" label="Max. of detections" help="Maximum number of detections allowed per image. Limits the total number of objects the model can detect in a single inference, preventing excessive outputs in dense scenes." />
    </inputs>
    <outputs>
	 <collection name="results" type="list" label="YOLO prediction results">
		 <discover_datasets pattern="__name_and_ext__" visible="true" directory="./results"/>
         </collection>
    </outputs>
    <tests>
        <test>
            <param name="input_images" value="pred-test01.jpg" />
	    <param name="num_class" value="1" />
	    <param name="model" value="best.pt" />
	    <param name="image_size" value="512" />
	    <param name="confidence" value="0.003" />
            <param name="iou" value="0.7" />
            <param name="max_det" value="1" />
	    <param name="mode" value="segment" />
	    <param name="class_name" value="class_name.txt" />
	    <output_collection name="results" type="list" count="2">
		<element name="pred-test01" ftype="txt">
                    <assert_contents>
                        <has_size value="9615" delta="100" />
                    </assert_contents>
                </element>
		<element name="pred-test01_mask" ftype="tif">
	            <assert_contents>
                        <has_size value="524624" delta="100"/>
                    </assert_contents>
                </element>
            </output_collection>
        </test>
    </tests>
    <help><![CDATA[
        **What it does**
        This tool performs predictions on input images using yolo compatible model. It supports two modes of operation: segment, detect.
        
	**Outputs:**

	 - **Coordinates TXT File** (`.txt`)
            - A plain text file containing predictions for each detected object.
         
	 OR
         - **Segmentation Mask** (`.tif`)
         - An image mask where each pixel value represents a class label.
         - overlaid images

    ]]>
    </help>
    <expand macro="citations" />
</tool>
