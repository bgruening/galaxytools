<tool id="methtools_plot" name="Plotting" version="0.1.1">
    <description>of methylated regions</description>
    <requirements>
        <requirement type="package" version="0.1_602edc990c6a36e2930f88f3ae5585430164d643">methtools</requirement>
        <requirement type="package">numpy</requirement>
        <requirement type="package">matplotlib</requirement>
    </requirements>
    <command>
<![CDATA[
        #import tempfile, os
        #set $temp_dir = os.path.abspath(tempfile.mkdtemp())
        cd $temp_dir;

        plot.py
        --processors "\${GALAXY_SLOTS:-12}"
        #if $regions.inputType == "bed":
            --coordinatefile $regions.coordinatefile
            $regions.no_dots
            --bed
        #else:
            --chromosome $regions.chromosome
            --position $regions.position
            --window-length $regions.window_length
            $regions.reverse
            #if str($regions.name) != '':
                --gene-name $regions.name
            #end if
            --image $png_outfile
            --text $bed_outfile
        #end if

        -i $infile_control $infile_affected
        $compressed

        #if $params.settingsType == "custom":
            $params.scale
            --y-max $params.y_max
            --min-coverage $params.min_cov
        #end if
        ;

        #if $regions.inputType == "bed":
            cp all_merged.txt $bed_outfile;
            cp all_merged.png $png_outfile;
            #if $compressed:
                tar -czf $compressed_outfile *;
            #end if
        #end if

        ##clean temporary directory
        #rm $temp_dir -rf
]]>
    </command>
    <inputs>
        <param name="infile_control" type="data" format="bed,interval" label="BED file from control sample" help="" />
        <param name="infile_affected" type="data" format="bed,interval" label="BED file from affected sample" help="" />

        <conditional name="regions">
            <param name="inputType" type="select" label="Specify genome coordinates through" help="">
              <option value="formular">Formular</option>
              <option value="bed">BED file</option>
            </param>
            <when value="formular">
                <param name="chromosome" type="text" value="" label="Chromosome name" help="chr1, chrX ... It needs to fit the chromosome labeling in your two input files" />
                <param name="position" type="integer" value="" label="Chromosome coordinate" help="">
                    <validator type="in_range" message="Chromosome coordinate must be positive" min="1" max="inf"/>
                </param>
                <param name="window_length" type="integer" value="1000" label="length of the plotted genomic region" help="">
                    <validator type="in_range" message="Plotting range must be positive" min="0" max="inf"/>
                </param>
                <param name="reverse" type="boolean" truevalue="--reverse" falsevalue="" checked="False" label="Invert the x-axis to reflect the reverse strand of the gene" help="" />
                <param name="name" type="text" value="" label="Coordinate description" help="If given these name is used as description in the plot" />
            </when>  <!-- formular -->
            <when value="bed">
                <param name="coordinatefile" type="data" format="bed,interval" label="BED file with methylated regions" help="" />
                <param name="no_dots" type="boolean" truevalue="--no-dots" falsevalue="" checked="False" label="Omit the dots in the overlay image" help="Onyl print the smoothed line in the overlay image" />
            </when>
        </conditional>  <!-- regions -->

        <conditional name="params">
            <param name="settingsType" type="select" label="Plotting - advanced settings" help="You can use the default settings or set custom values for any parameter">
              <option value="default">Use Defaults</option>
              <option value="custom">Full parameter list</option>
            </param>
            <when value="default" />
            <!-- Full/advanced params. -->
            <when value="custom">
                <param name="y_max" type="integer" value="110" label="Maximum value from the Y-axis" help="">
                    <validator type="in_range" message="Chromosome coordinate must be positive" min="1" max="inf"/>
                </param>
                <param name="scale" type="boolean" truevalue="--scale" falsevalue="" checked="False" label="Scale the scores to be between 0 and 100" help="If your scores are between 0 and 1 enable that option to mulitiply it with 100" />
                <param name="min_cov" type="integer" value="0" label="Minimal allowed coverage" help="0 means no filtering at all">
                    <validator type="in_range" message="Coverage must be positive" min="0" max="inf"/>
                </param>
            </when>  <!-- full -->
      </conditional>  <!-- params -->

      <param name="compressed" type="boolean" truevalue="" falsevalue="--overlay-only" checked="True" label="Create for every region a single images and compress them afterwards" help="If not only the overlay will be created" />

    </inputs>
    <outputs>
        <data format="interval" name="bed_outfile" label="${tool.name} on ${on_string}: all plotted regions" />
        <data format="png" name="png_outfile" label="${tool.name} on ${on_string}: overlay image" />
        <data format="tar.gz" name="compressed_outfile" label="${tool.name} on ${on_string}: archive">
            <filter>compressed is True</filter>
        </data>
    </outputs>
    <tests>
    </tests>

    <help>
<![CDATA[

**What it does**

Plots the methylation of the control and affected file for specific regions.


The regions needs to be in BED format and can be generated through the 'Find differentially methylated region (DMR)' tool.

]]>
  </help>
</tool>
