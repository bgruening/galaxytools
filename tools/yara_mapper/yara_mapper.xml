<tool name="yara_mapper" id="yara_mapper" version="1.17">
  <!--Source in git at: https://github.com/fubar2/galaxy_tf_overlay-->
  <!--Created by toolfactory@galaxy.org at 04/09/2023 10:40:17 using the Galaxy Tool Factory.-->
  <description>Yara: map fasta or fastq sequence to a small reference genome. Not recommended for human sized genomes.</description>
  <requirements>
    <requirement version="1.0.2" type="package">yara</requirement>
    <requirement version="1.17" type="package">samtools</requirement>
  </requirements>
  <stdio>
    <exit_code range="137" level="fatal_oom" description="Out of memory error."/>
    <exit_code range=":-1" level="fatal" description="Please check Tool Standard Error using the result i(information) link - the tool failed"/>
    <exit_code range="1:" level="fatal" description="Please check Tool Standard Error using the result i(information) link - the tool failed"/>
  </stdio>
  <version_command><![CDATA[echo "1.17"]]></version_command>
  <command><![CDATA[bash $runme]]></command>
  <configfiles>
    <configfile name="runme"><![CDATA[
#!/usr/bin/env bash
### simple choice of paired analysis
### yara=1.0.2,samtools=1.17

#set refext = $refseq.ext
#set fext = $mapme.ext
#if $mapme.ext.startswith("fastq")
  #set fext = "fastq"
#end if
ln -s $refseq yararef.$refext
ln -s $mapme yaramap.$fext
yara_indexer yararef.$refext -o refindx
#if $mapmerev
  #set rext = $mapmerev.ext
  #if $rext.startswith("fastq")
    #set rext = "fastq"
  #end if
    echo "paired"
    ln -s $mapmerev yaramaprev.$rext
    yara_mapper refindx yaramap.$fext  yaramaprev.$rext | samtools sort -T "\${TMPDIR:-.}" -O bam -o '$outbam'
#else
    echo "single"
    yara_mapper refindx yaramap.$fext | samtools sort -T "\${TMPDIR:-.}" -O bam -o '$outbam'
#end if

 ]]></configfile>
  </configfiles>
  <inputs>
    <param name="refseq" type="data" optional="false" label="Reference FASTA sequence to use for mapping against." help="" format="fasta" multiple="false"/>
    <param name="mapme" type="data" optional="false" label="Reads to map. If paired, select the first or forward reads." help="" format="fasta,fastq" multiple="false"/>
    <param name="mapmerev" type="data" optional="true" label="Reads to map. If paired, select the second or reverse reads." help="BOTH must be fastq if paired reads!" format="fastq" multiple="false"/>
  </inputs>
  <outputs>
    <data name="outbam" format="bam" label="yara - mapped $mapme.element_identifier on $refseq.element_identifier" hidden="false"/>
  </outputs>
  <tests>
    <test>
      <output name="outbam" value="outbam_sample" compare="sim_size" delta_frac="0.1"/>
      <param name="refseq" value="refseq_sample"/>
      <param name="mapme" value="mapme_sample"/>
      <param name="mapmerev" value="mapmerev_sample"/>
    </test>
  </tests>
  <help><![CDATA[
 
 `Yara`_  Yet another read aligner
 
 `Yara`_  is an exact tool for aligning DNA sequencing reads to reference genomes.
 
 *Main features*
 
 -   Exhaustive enumeration of sub-optimal end-to-end alignments under the edit distance.
 -   Excellent speed, memory footprint and accuracy.
 -   Accurate mapping quality computation.
 -   Support for reference genomes consisiting of million of contigs.
 -   Direct output in SAM/BAM format.
 
 *Supported data*
 
 Yara has been tested on DNA reads (i.e., Whole Genome, Exome, ChIP-seq, MeDIP-seq) produced by the following sequencing platforms:
 
 -    Illumina GA II, HiSeq and MiSeq (single-end and paired-end).
 -    Life Technologies Ion Torrent Proton and PGM.
 
 Quality trimming is necessary for Ion Torrent reads and recommended for Illumina reads.
 
 *Unsupported data*
 
 -    RNA-seq reads spanning splicing sites.
 -    Long noisy reads (e.g., Pacific Biosciences RSII, Oxford Nanopore MinION).
 
 .. _Yara: https://github.com/seqan/seqan/tree/main/apps/yara
 
 
 
 
  ]]></help>
  <citations>
    <citation type="doi">doi: 10.1093/nar/gkt005</citation>
    <citation type="doi">10.1093/bioinformatics/bts573</citation>
  </citations>
</tool>

