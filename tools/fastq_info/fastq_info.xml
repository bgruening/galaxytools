<tool id="fastq_info" name="FASTQ info" version="@TOOL_VERSION@+Galaxy@SUFFIX_VERSION@" profile="20.01">
    <description>validates single or paired fastq files</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="edam_ontology"/>
    <expand macro="requirements"/>
    <command detect_errors="exit_code"><![CDATA[
        fastq_info
        #if $input_option.input_type == 'single'
            $input_option.fastq_1
        #else
            $input_option.fastq_1
            $input_option.fastq_2
        #end if
        $r
        $q
        2>&1 | tee ./output.txt
    ]]>    </command>
    <inputs>
        <conditional name="input_option">
            <param name="input_type" type="select" label="Single reads or paired reads" help="Select between paired and single end data">
                <option value="single">Single</option>
                <option value="paired">Paired</option>
            </param>
            <when value="single">
                <param name="fastq_1"  type="data" format="fastq,fastqsanger,fastq.gz,fastqsanger.gz" label="FASTQ file" help="Input FASTQ file"/>
            </when>
            <when value="paired">
                <param name="fastq_1" type="data" format="fastq,fastqsanger,fastq.gz,fastqsanger.gz" label="FASTQ file: forward reads"/>
                <param name="fastq_2" type="data" format="fastq,fastqsanger,fastq.gz,fastqsanger.gz" label="FASTQ file: reverse reads"/>
            </when>
        </conditional>
        <param argument="-q" type="boolean" truevalue="" falsevalue="-q" checked="True" label="Determine quality scoring" help="If this option is disabled, it won't fail if the quality encoding cannot be determined" />
        <param argument="-r" type="boolean" truevalue="-r" falsevalue="" checked="False" label="Skip check for duplicated readnames" help="By using this option no checks are made to determine if the read names/identifiers are unique (it will run faster and use less memory)" />
    </inputs>
    <outputs>
        <data name="output" format="txt" from_work_dir="./output.txt" label="${tool.name} on ${on_string}: Validation result">
        </data>
    </outputs>
    <tests>
        <test expect_num_outputs="1">
            <conditional name="input_option">
                <param name="input_type" value="single"/>
                <param name="fastq_1" value="R1.fastq"/>
            </conditional>
            <output name="output" file="output.txt" ftype="txt" lines_diff="2">
                <assert_contents>
                    <has_text text="OK"/>
                    <has_size value="362" delta="100"/>
                </assert_contents>
            </output>
        </test>
        <!--Test gzip files-->
        <test expect_num_outputs="1">
            <conditional name="input_option">
                <param name="input_type" value="single"/>
                <param name="fastq_1" value="R1.fastq.gz"/>
            </conditional>
            <output name="output" ftype="txt">
                <assert_contents>
                    <has_text text="OK"/>
                    <has_size value="368" delta="100"/>
                </assert_contents>
            </output>
        </test>
        <!--Test paired reads-->
        <test expect_num_outputs="1">
            <conditional name="input_option">
                <param name="input_type" value="paired"/>
                <param name="fastq_1" value="R1.fastq"/>
                <param name="fastq_2" value="R2.fastq"/>
            </conditional>
            <output name="output">
                <assert_contents>
                    <has_text text="OK"/>
                    <has_size value="544" delta="100"/>
                </assert_contents>
            </output>
        </test>
        <!-- Test q option-->
        <test expect_num_outputs="1">
            <param name="q" value="False"/>
            <conditional name="input_option">
                <param name="input_type" value="single"/>
                <param name="fastq_1" value="R1.fastq"/>
            </conditional>
            <output name="output">
                <assert_contents>
                    <has_text text="OK"/>
                    <has_size value="362" delta="100"/>
                </assert_contents>
            </output>
        </test>
        <!-- Test duplicated id -->
        <test expect_num_outputs="1">
            <conditional name="input_option">
                <param name="input_type" value="single"/>
                <param name="fastq_1" value="R1_duplicated.fastq"/>
            </conditional>
            <output name="output">
                <assert_contents>
                    <has_text text="line 36: duplicated sequence SRR1294492.1207358/1"/>
                    <has_size value="311" delta="100"/>
                </assert_contents>
            </output>
        </test>
        <!-- Test r option-->
        <test expect_num_outputs="1">
            <param name="r" value="True"/>
            <conditional name="input_option">
                <param name="input_type" value="single"/>
                <param name="fastq_1" value="R1_duplicated.fastq"/>
            </conditional>
            <output name="output">
                <assert_contents>
                    <has_text text="OK"/>
                    <has_size value="193" delta="100"/>
                </assert_contents>
            </output>
        </test>
        <!-- Test truncated file 01 -->
        <test expect_num_outputs="1">
            <conditional name="input_option">
                <param name="input_type" value="paired"/>
                <param name="fastq_1" value="R1_truncated.fastq"/>
                <param name="fastq_2" value="R2.fastq"/>
            </conditional>
            <output name="output">
                <assert_contents>
                    <has_text text="line 32: file truncated"/>
                    <has_size value="285" delta="100"/>
                </assert_contents>
            </output>
        </test>
        <!-- Test truncated file 02 -->
        <test expect_num_outputs="1">
            <conditional name="input_option">
                <param name="input_type" value="paired"/>
                <param name="fastq_1" value="R1_truncated_entry.fastq"/>
                <param name="fastq_2" value="R2.fastq"/>
            </conditional>
            <output name="output">
                <assert_contents>
                    <has_text text="unpaired read - SRR1294492.2047212/"/>
                    <has_size value="557" delta="100"/>
                </assert_contents>
            </output>
        </test>
    </tests>
    <help><![CDATA[
.. class:: infomark

**Purpose**

FASTQ info is part of `FASTQ utils <https://github.com/nunofonseca/fastq_utils>`_, a set of Linux utilities to validate and manipulate fastq files. 

    ]]>    </help>
    <expand macro="citations"/>
</tool>
