<tool id="atactk_trim_adapters" name="Trim putative adapter sequence" version="0.1.6">
    <requirements>
        <requirement type="package" version="0.1.6">atactk</requirement>
    </requirements>
    <command detect_errors="exit_code"><![CDATA[
        ln -s '$input1' ./forward.${input1.ext} &&
        ln -s '$input2' ./reverse.${input2.ext} &&
        trim_adapters
            #if '$settings.advanced' == 'advanced'
                -d '$settings.edit_distance'
                -f '$settings.fudge'
                -s '$settings.trim_start'
                -r '$settings.rc_length'
            #end if
            ./forward.${input1.ext} ./reverse.${input2.ext}
    ]]></command>
    <inputs>
        <param type="data" name="input1" format="fastq,fastq.gz" />
        <param type="data" name="input2" format="fastq,fastq.gz" />
        <conditional name="settings">
            <param name="advanced" type="select" label="Specify advanced parameters">
                <option value="simple" selected="true">No, use program defaults.</option>
                <option value="advanced">Yes, see full parameter list.</option>
            </param>
            <when value="simple"></when>
            <when value="advanced">
                <param name="edit_distance" label="The maximum edit distance permitted when aligning the paired reads" type="integer" min="1" value="1" help="(-d)" />
                <param name="fudge" label="An arbitrary number of extra bases to trim from the ends of reads" type="integer" min="1" value="1" help="(-f)" />
                <param name="trim_start" label="Trim this number of bases from the start of each sequence" type="integer" min="0" value="0" help="(-s)"/>
                <param name="rc_length" label="Use the reverse complement of this number of from the beginning of the reverse read to align reads" type="integer" min="1" value="20" help="(-r)"/>
            </when>
        </conditional>
    </inputs>
    <outputs>
        <data name="output1" format="fastq.gz" from_work_dir="forward.trimmed.fastq.gz" />
        <data name="output2" format="fastq.gz" from_work_dir="reverse.trimmed.fastq.gz" />
    </outputs>
    <tests>
        <test>
            <param name="input1" value="SP1_f.fastq" ftype="fastq" />
            <param name="input2" value="SP1_r.fastq" ftype="fastq" />
            <output name="output1" file="SP1_f.trimmed.fastq.gz" decompress="True"/>
            <output name="output2" file="SP1_r.trimmed.fastq.gz" decompress="True"/>
        </test>
        <test>
            <param name="input1" value="SP1_f.fastq.gz" ftype="fastq.gz" />
            <param name="input2" value="SP1_r.fastq.gz" ftype="fastq.gz" />
            <output name="output1" file="SP1_f.trimmed.fastq.gz" decompress="True"/>
            <output name="output2" file="SP1_r.trimmed.fastq.gz" decompress="True"/>
        </test>
    </tests>
    <help>
<![CDATA[

**What it does**

The trim_adapters utility is based on a script by Jason Buenrostro.
Instead of looking for known adapter sequence, it aligns paired reads to each other
and trims off sequence outside the alignment. More precisely, it searches
the forward read for the reverse complement of a specified number of bases
(20 by default) at the beginning of the reverse read, then falls back to finding
the best alignment of the two reads, using the minimum Levenshtein distance between them.

**Input**

It requires 2 inputs: The (optionally gzipped) FASTQ file containing the
forward reads and the (optionally gzipped) FASTQ file containing the
reverse reads.

**Output**

Generates 2 gzipped fastq files with adapters trimmed.

    ]]></help>
    <citations>
        <citation type="bibtex">@unpublished{atactk: a toolkit for ATAC-seq data,
          title  = "atactk: a toolkit for ATAC-seq data",
          author = "The Parker Lab at the University of Michigan",
          url    = "https://github.com/ParkerLab/atactk/",
          year   = "2018"
}</citation>
    </citations>
</tool>
