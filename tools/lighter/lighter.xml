<tool id="lighter" name="lighter" version="1.0" profile="16.04">
    <description>can correct the reads containing sequence errors</description>
    <requirements>
        <requirement type="package" version="1.1.1">lighter</requirement>
    </requirements>
    <command><![CDATA[
       lighter
           #for $file in $r:
               -r $file
           #end for
           #if str($kmer.k_select) == "smallk":
               -k $kmer.k_parameter_string
           #elif str($kmer.k_select) == "bigK":
               -K $kmer.K_parameter_string 
           #end if
           -od ./
           -t \${GALAXY_SLOTS:-4}
           #if $maxcor:
               -maxcor $maxcor
           #end if
           $trim
           $discard
           $noQual
           #if $newQual:
               -newQual '$newQual'
           #end if
           $stable
            > $outfile
    ]]>
    </command>
    <inputs>
        <param argument="-r" multiple="True" type="data" label="Input file"/>
        <conditional name="kmer">
            <param name="k_select" type="select" label="Do you want k or K?">
                <option value="smallk">small k</option>
                <option value="bigK">big K</option>
            </param>
            <when value="smallk">
                <param name="k_parameter_string" size="30" type="text" value="13 20 0.2" label="type in 3 parameters"
                    help="(—k kmer_length genome_size alpha)" />
            </when>
            <when value="bigK">
                <param name="K_parameter_string" size="30" type="text" value="13 20" label="type in 2 parameters"
                    help="(—K kmer_length genome_size)" />
            </when>
        </conditional>
        <param argument="-maxcor" type="integer" value="4" optional="True" 
            label="Maximum number of correction for within a kmer length window" help=""/>
        <param argument="-trim" type="boolean" truevalue="-trim" falsevalue="" checked="False" 
            label="Whether or not to allow trimming"/>
        <param argument="-discard" type="boolean" truevalue="-discard" falsevalue="" checked="False" 
            label="Whether or not to discard unfixable reads. Will lose paired-end matching when discarding"/>
        <param argument="-noQual" type="boolean" truevalue="-noQual" falsevalue="" checked="False" 
            label="Whether or not to ignore the quality socre"/>
        <param argument="-newQual" size="30" type="text" value="" optional="True" 
            label="Quality for the bases corrected to the specified score" help="" />
        <param argument="-stable" type="boolean" truevalue="-stable" falsevalue="" checked="False"
            label="Sequentialize the sampling stage, output the same result with different runs"/>
    </inputs>
    <outputs>
        <data name="outfile" format_source="r"/>
    </outputs>
    <tests>
        <test>
            <param name="r" value="bwa-mem-fastq1.fq"/>
            <param name="k_select" value="smallk"/>
            <param name="newQual" value="12 12 0.1"/>
            <param name="noQual" value="True"/>
            <param name="stable" value="False"/>
            <output name="outfile" file="lighter_result1.fq"/>
        </test>
        <test>
            <param name="r" value="bwa-mem-fastq1.fq"/>
            <param name="k_select" value="bigK"/>
            <param name="newQual" value="20 14"/>
            <param name="noQual" value="False"/>
            <param name="stable" value="True"/>
            <output name="outfile" file="lighter_result2.fq"/>
        </test>
    </tests>
    <help>
**What it does**

Lighter is a kmer-based error correction method for whole genome sequencing data. Lighter uses sampling
(rather than counting) to obtain a set of kmers that are likely from the genome. Using this information,
Lighter can correct the reads containing sequence errors.
    </help>
    <citations>
        <citation type="doi">10.1186/s13059-014-0509-9</citation>
    </citations>
</tool> 
