<tool id="gfastats" name="gfastats" version="@TOOL_VERSION@+galaxy@SUFFIX_VERSION@" profile="20.01">
    <description>the swiss army knife for genome assembly</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements" />
    <expand macro="biotools"/>
    <version_command>gfastats --version</version_command>
    <command detect_errors="exit_code"><![CDATA[
        gfastats
        '$input_file'
        #if $report_condition.selector == 'true'
            #if $report_condition.mode_condition.selector == 'assembly'
                $report_condition.mode_condition.expected_genomesize
            #end if
        #end if
        #if $target_condition.target_option == 'true'
            $target_condition.target_sequence
            #if $target_condition.include_bed
                --include-bed $target_condition.include_bed
            #end if
            #if $target_condition.exclude_bed
                --exclude-bed $target_condition.exclude_bed
            #end if
        #end if
        #if $edit_condition.selector == 'true'
            #if $edit_condition.swiss_army_knife
                -k $edit_condition.swiss_army_knife
            #end if
            -o dataset.$edit_condition.output_condition.out_format
            #if $edit_condition.output_condition.out_format == 'fasta'
                #if $edit_condition.output_condition.line_length
                    --line-length $edit_condition.output_condition.line_length
                #end if
            #else if $edit_condition.output_condition.out_format == 'fasta.gz'
                #if $edit_condition.output_condition.line_length
                    --line-length $edit_condition.output_condition.line_length
                #end if
            #end if
        #end if
        #if $report_condition.selector == 'true'
            #if $report_condition.mode_condition.selector == 'size'
                --out-size $report_condition.mode_condition.out_size
            #else if $report_condition.mode_condition.selector == 'coordinate'
                --out-coord $report_condition.mode_condition.out_coord
            #else if $report_condition.mode_condition.selector == 'assembly'
                --nstar-report
            #else
                --seq-report
                $report_condition.mode_condition.out_sequence
            #end if
        #end if
        $tabular > $stats &&
        mv dataset* output_dataset &&
        ls -lah
    ]]></command>
    <inputs>
        <param name="input_file" argument="--fasta" type="data"
            format="fasta,fastq,fastqsanger,gfa1,fasta.gz,fastq.gz,fastqsanger.gz,gfa1.gz"
            label="Input file"/>
        <conditional name="target_condition">
            <param name="target_option" type="select" label="Specify target sequences">
                <option value="false">Disabled</option>
                <option value="true">Enabled</option>
            </param>
            <when value="false"/>
            <when value="true">
                <param name="target_sequence" type="text" value="" label="Target sequence" help="Target specific sequence by header, optionally with coordinates: header[:start-end]">
                    <sanitizer invalid_char="">
                        <valid initial="string.digits,string.letters">
                            <add value=":"/>
                            <add value="-"/>
                            <add value="_"/>
                            <add value="|"/>
                            <add value=" "/>
                        </valid>
                    </sanitizer>
                    <validator type="regex">[0-9A-Za-z:-_| ]+</validator>
                </param>
                <param argument="--include-bed" type="data" optional="true"
                    format="bed" label="Include specific intervals"
                    help="Generates output on a subset list of headers or coordinates   
                        in 0-based bed format. It can be combined with --exclude-bed. Optional"/>
                <param argument="--exclude-bed" type="data" format="bed" optional="true"
                    label="Exclude specific intervals"
                    help="Exclude a subset of headers or coordinates in 0-base bed format. It can be conmbined with --include-bed Optional"/>
            </when>
            <when value="false"/>
        </conditional>
        <conditional name="edit_condition">
            <param name="selector" type="select" label="Genome assembly manipulation">
                <option value="true">Enabled</option>
                <option value="false">Disabled</option>
            </param>
            <when value="true">
                <param argument="--swiss-army-knife" type="data"
                    format="txt" label="SAK input file" optional="true"
                    help="Set of instructions provided as an ordered list"/>
                <conditional name="output_condition">
                    <param argument="--out-format" type="select" 
                        label="Output format" help="Outputs selected sequences. If more than the extension is provided the output is written to the specified file (e.g. out.fasta.gz).">
                            <option value="fasta">FASTA</option>
                            <option value="fasta.gz">FASTA.gz</option>
                            <option value="fastq">FASTQ</option>
                            <option value="fastq.gz" selected="true">FASTQ.gz</option>
                            <option value="gfa">GFA</option>
                            <option value="gfa.gz">GFA.gz</option>
                    </param>
                    <when value="fasta">
                        <expand macro="length_macro"/>
                    </when>
                    <when value="fasta.gz">
                        <expand macro="length_macro"/>
                    </when>
                    <when value="fastq"/>
                    <when value="fastq.gz"/>
                    <when value="gfa"/>
                    <when value="gfa.gz"/>
                </conditional>
            </when>
            <when value="false"/>
        </conditional>
        <conditional name="report_condition">
            <param name="selector" type="select" label="Summary statistics generation">
                <option value="true">Enabled</option>
                <option value="false">Disabled</option>
            </param>
            <when value="true">
                <conditional name="mode_condition">
                    <param name="selector" type="select" label="Report mode">
                        <option value="size">Scaffold, contig or gap sizes (--out-size)</option>
                        <option value="coordinates">AGP, contig or gap coordinates (--out-coord)</option>
                        <option value="assembly">Genome assembly statistics (--nstar-report)</option>
                        <option value="sequence">Sequence statistics (--seq-report)</option>
                    </param>
                    <when value="size">
                        <param argument="--out-size" type="select" label="Feature for reporting sizes"
                            help="Generate a tabular file with the sequence sizes">
                            <option value="s">Scaffolds</option>
                            <option value="c">Contigs</option>
                            <option value="g">Gaps</option>
                        </param>
                    </when>
                    <when value="coordinates">
                        <param argument="--out_coord" type="select" label="BED coordinares feature"
                            help="Generates bed coordinates of given feature. Default: agp">
                            <option value="agp">AGP</option>
                            <option value="contigs">Contigs</option>
                            <option value="gaps">Gaps</option>
                        </param>
                    </when>
                    <when value="assembly">
                        <param name="expected_genomesize" type="integer" min="0" optional="true" 
                            label="Expected genome size" help="Estimated genome size. This parameter is optional, but required for NG* statistics."/>
                    </when>
                    <when value="sequence">
                        <param argument="--out-sequence" type="boolean" truevalue="--out-sequence" falsevalue="" checked="false" 
                            label="Report actual sequence" help="It reports also the actual sequence"/>
                    </when>
                </conditional>
            </when>
            <when value="false"/>
        </conditional>
        <param argument="--tabular" type="boolean" truevalue="--tabular" falsevalue="" checked="false"
            label="Tabular-format output" help="Generate output in tabular format"/>
    </inputs>
    <outputs>
        <data name="stats" format="tabular" label="${tool.name} on ${on_string}: stats">
            <filter>report_condition['selector'] == 'true'</filter>
        </data>
        <data name="output" format="fastq" from_work_dir="output_dataset" label="${tool.name} on ${on_string}: edited sequences">
            <change_format>
                <when input="edit_condition.output_condition.out_format" value="fasta" format="fasta"/>
                <when input="edit_condition.output_condition.out_format" value="fasta.gz" format="fasta.gz"/>
                <when input="edit_condition.output_condition.out_format" value="fastq" format="fastq"/>
                <when input="edit_condition.output_condition.out_format" value="fastq.gz" format="fastq.gz"/>
                <when input="edit_condition.output_condition.out_format" value="gfa" format="gfa1"/>
                <when input="edit_condition.output_condition.out_format" value="gfa.gz" format="gfa1.gz"/>
            </change_format>
            <filter>edit_condition['selector'] == 'true'</filter>
        </data>
    </outputs>
    <tests>
        <test expect_num_outputs="2">
            <param name="input_file" value="dataset_01.fastq.gz"/>
            <conditional name="target_condition">
                <param name="target_condition" value="true"/>
                <param name="target_sequence" value="S1_1"/>
            </conditional>
            <conditional name="edit_condition">
                <param name="selector" value="true"/>
                <param name="swiss_army_knife" value="swiss_army_01.sak"/>
                <conditional name="output_condition">
                    <param name="out_format" value="gfa"/>
                </conditional>
            </conditional>
            <conditional name="report_condition">
                <param name="selector" value="true"/>
                <conditional name="mode_condition">
                    <param name="selector" value="size"/>
                    <param name="out_size" value="c"/>
                </conditional>
            </conditional>
            <output name="output" value="test_01.gfa" ftype="gfa1"/>
            <output name="stats" value="test_01_stats.tabular" ftype="tabular"/>

        </test>
    </tests>
    <help><![CDATA[

.. class:: infomark

**Purpose**

gfastats is a single fast and exhaustive tool for summary statistics and simultaneous genome assembly file manipulation. gfastats also allows seamless format conversion.


  ]]></help>
    <expand macro="citations" />
</tool>
