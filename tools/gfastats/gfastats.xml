<tool id="gfastats" name="gfastats" version="@TOOL_VERSION@+galaxy@SUFFIX_VERSION@" profile="20.01">
    <description>the swiss army knife for genome assembly</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements" />
    <expand macro="biotools"/>
    <version_command>gfastats --version</version_command>
    <command detect_errors="exit_code"><![CDATA[
        gfstats
        $input_file
        #if $expected_genomesize
            $expected_genomesize
        #end if
        #if $target_sequence
            #if $coordinates
                $target_sequence:$coordinates
            #else
                $target_sequence
            #end if
        #end if
        -o $output_format
        -s $output_size
        -b $out_coord
        #if $include_bed
            -i $include_bed
        #end if
        #if $exclude_bed
            -e $exclude_bed
        #end if
        $tabular_output
        --stats 
        $seq_report
        #if $seq_report
            $out_sequence
        #end if
        $nstar_report
        #if $swiss_army
            -k $swiss_army
        #end if
        --verbose
        --cmd
        #if $output_format == 'FASTA'
            #if $line_length
                --line-length $line_length
            #end if
        #end if
        --
    ]]></command>
    <inputs>
        <param name="input_file" argument="--fasta" type="data" format="fasta,fastq,fastqsanger,gfa,fasta.gz,fastq.gz,fastqsanger.gz,gfa.gz" label="" help="TODO" />
     </inputs>
    <outputs>
    </outputs>
    <tests>
        <!--Test 01: pacbio-raw-->
        <test expect_num_outputs="5">
            <param name="inputs" ftype="fastq.gz" value="ecoli_01.fastq.gz,ecoli_02.fastq.gz,ecoli_03.fastq.gz,ecoli_04.fastq.gz,ecoli_05.fastq.gz,ecoli_06.fastq.gz,ecoli_07.fastq.gz"/>
            <param name="mode" value="--pacbio-raw"/>
            <param name="iterations" value="0"/>
            <param name="generate_log" value="true"/>
            <output name="assembly_info" file="result1_assembly_info.txt" ftype="tabular" compare="sim_size"/>
            <output name="assembly_graph" file="result1_assembly_graph.dot" ftype="graph_dot" compare="sim_size"/>
            <output name="assembly_gfa" file="result1_assembly_graph.gfa" ftype="txt" compare="sim_size"/>
            <output name="consensus" file="result1_assembly.fasta" ftype="fasta" compare="sim_size"/>
            <output name="flye_log" file="result1.log" ftype="txt" compare="sim_size"/>
        </test>
        <!--Test 02: nano raw-->
        <test expect_num_outputs="4">
            <param name="inputs" ftype="fasta.gz" value="nanopore.fasta.gz"/>
            <param name="mode" value="--nano-raw"/>
            <param name="iterations" value="0"/>
            <output name="assembly_info" ftype="tabular">
                <assert_contents>
                    <has_size value="95" delta="100"/>
               </assert_contents>
            </output>
            <output name="assembly_graph" ftype="graph_dot">
                <assert_contents>
                    <has_size value="803" delta="100"/>
               </assert_contents>
            </output>
            <output name="assembly_gfa" ftype="txt">
                <assert_contents>
                    <has_size value="35047" delta="100"/>
               </assert_contents>
            </output>
            <output name="consensus" ftype="fasta">
                <assert_contents>
                    <has_size value="35573" delta="100"/>
               </assert_contents>
            </output>
        </test>
        <!--Test 03: reduce coverage-->
        <test expect_num_outputs="4">
            <param name="inputs" ftype="fastq.gz" value="ecoli_hifi_01.fastq.gz,ecoli_hifi_02.fastq.gz,ecoli_hifi_03.fastq.gz,ecoli_hifi_04.fastq.gz,ecoli_hifi_05.fastq.gz,ecoli_hifi_06.fastq.gz,ecoli_hifi_07.fastq.gz,ecoli_hifi_08.fastq.gz,ecoli_hifi_09.fastq.gz"/>
            <conditional name="mode_conditional">
                <param name="mode" value="--nano-raw"/>
            </conditional>
            <conditional name="asm">
                <param name="asm_select" value="true" />
                <param name="asm" value="30"/>
                <param name="genome_size" value="3980000"/>
            </conditional>
            <output name="assembly_info" ftype="tabular">
                <assert_contents>
                    <has_size value="286" delta="100"/>
               </assert_contents>
            </output>
            <output name="assembly_graph" ftype="graph_dot">
                <assert_contents>
                    <has_size value="1840" delta="100"/>
               </assert_contents>
            </output>
            <output name="assembly_gfa" ftype="txt">
                <assert_contents>
                    <has_size value="420752" delta="100"/>
               </assert_contents>
            </output>
            <output name="consensus" ftype="fasta">
                <assert_contents>
                    <has_size value="427580" delta="100"/>
               </assert_contents>
            </output>
        </test>
        <!--Test 04: metagenomic mode-->
        <test expect_num_outputs="4">
            <param name="inputs" ftype="fastq.gz" value="ecoli_01.fastq.gz,ecoli_02.fastq.gz,ecoli_03.fastq.gz,ecoli_04.fastq.gz,ecoli_05.fastq.gz,ecoli_06.fastq.gz,ecoli_07.fastq.gz"/>
            <conditional name="mode_conditional">
                <param name="mode" value="--pacbio-raw"/>
            </conditional>
            <param name="meta" value="true"/>
            <output name="assembly_info" ftype="tabular">
                <assert_contents>
                    <has_size value="95" delta="100"/>
               </assert_contents>
            </output>
            <output name="assembly_graph" ftype="graph_dot">
                <assert_contents>
                    <has_size value="367" delta="100"/>
               </assert_contents>
            </output>
            <output name="assembly_gfa" ftype="txt">
                <assert_contents>
                    <has_size value="418729" delta="100"/>
               </assert_contents>
            </output>
            <output name="consensus" ftype="fasta">
                <assert_contents>
                    <has_size value="425667" delta="100"/>
               </assert_contents>
            </output>
        </test>
        <!--Test 05: nanopore HQ mode-->
        <test expect_num_outputs="4">
            <param name="inputs" ftype="fastq.gz" value="ecoli_hifi_01.fastq.gz,ecoli_hifi_02.fastq.gz,ecoli_hifi_03.fastq.gz,ecoli_hifi_04.fastq.gz,ecoli_hifi_05.fastq.gz,ecoli_hifi_06.fastq.gz,ecoli_hifi_07.fastq.gz,ecoli_hifi_08.fastq.gz,ecoli_hifi_09.fastq.gz"/>
            <conditional name="mode_conditional">
                <param name="mode" value="--nano-hq"/>
            </conditional>
            <param name="min_overlap" value="1000"/>
            <output name="assembly_info" ftype="tabular">
                <assert_contents>
                    <has_size value="286" delta="100"/>
               </assert_contents>
            </output>
            <output name="assembly_graph" ftype="graph_dot">
                <assert_contents>
                    <has_size value="1248" delta="100"/>
               </assert_contents>
            </output>
            <output name="assembly_gfa" ftype="txt">
                <assert_contents>
                    <has_size value="420252" delta="100"/>
               </assert_contents>
            </output>
            <output name="consensus" ftype="fasta">
                <assert_contents>
                    <has_size value="427129" delta="100"/>
               </assert_contents>
            </output>
        </test>
        <!--Test 06: hifi error option-->
        <test expect_num_outputs="4">
            <param name="inputs" ftype="fastq.gz" value="ecoli_hifi_01.fastq.gz,ecoli_hifi_02.fastq.gz,ecoli_hifi_03.fastq.gz,ecoli_hifi_04.fastq.gz,ecoli_hifi_05.fastq.gz,ecoli_hifi_06.fastq.gz,ecoli_hifi_07.fastq.gz,ecoli_hifi_08.fastq.gz,ecoli_hifi_09.fastq.gz"/>
            <conditional name="mode_conditional">
                <param name="mode" value="--pacbio-hifi"/>
                <param name="hifi_error" value="0.21"/> 
            </conditional>
            <param name="min_overlap" value="1000"/>
            <output name="assembly_info" ftype="tabular">
                <assert_contents>
                    <has_size value="286" delta="100"/>
               </assert_contents>
            </output>
            <output name="assembly_graph" ftype="graph_dot">
                <assert_contents>
                    <has_size value="1273" delta="100"/>
               </assert_contents>
            </output>
            <output name="assembly_gfa" ftype="txt">
                <assert_contents>
                    <has_size value="420252" delta="100"/>
               </assert_contents>
            </output>
            <output name="consensus" ftype="fasta">
                <assert_contents>
                    <has_size value="427129" delta="100"/>
               </assert_contents>
            </output>
        </test>
        <!--Test 07: keep haplotypes-->
        <test expect_num_outputs="4">
            <param name="inputs" ftype="fastq.gz" value="ecoli_hifi_01.fastq.gz,ecoli_hifi_02.fastq.gz,ecoli_hifi_03.fastq.gz,ecoli_hifi_04.fastq.gz,ecoli_hifi_05.fastq.gz,ecoli_hifi_06.fastq.gz,ecoli_hifi_07.fastq.gz,ecoli_hifi_08.fastq.gz,ecoli_hifi_09.fastq.gz"/>
            <conditional name="mode_conditional">
                <param name="mode" value="--pacbio-corr"/>
                <param name="hifi_error" value="0.21"/>
            </conditional>
            <param name="min_overlap" value="1000"/>
            <param name="keep-haplotypes" value="true"/>
            <output name="assembly_info" ftype="tabular">
                <assert_contents>
                    <has_size value="286" delta="100"/>
               </assert_contents>
            </output>
            <output name="assembly_graph" ftype="graph_dot">
                <assert_contents>
                    <has_size value="1273" delta="100"/>
               </assert_contents>
            </output>
            <output name="assembly_gfa" ftype="txt">
                <assert_contents>
                    <has_size value="420252" delta="100"/>
               </assert_contents>
            </output>
            <output name="consensus" ftype="fasta">
                <assert_contents>
                    <has_size value="427129" delta="100"/>
               </assert_contents>
            </output>
        </test>
        <!--Test 08: scaffolding mode-->
        <test expect_num_outputs="4">
            <param name="inputs" ftype="fastq.gz" value="ecoli_hifi_01.fastq.gz,ecoli_hifi_02.fastq.gz,ecoli_hifi_03.fastq.gz,ecoli_hifi_04.fastq.gz,ecoli_hifi_05.fastq.gz,ecoli_hifi_06.fastq.gz,ecoli_hifi_07.fastq.gz,ecoli_hifi_08.fastq.gz,ecoli_hifi_09.fastq.gz"/>
            <param name="mode" value="--nano-hq"/>
            <param name="min_overlap" value="1000"/>
            <param name="scaffolding" value="true"/>
            <output name="assembly_info" ftype="tabular">
                <assert_contents>
                    <has_size value="286" delta="100"/>
               </assert_contents>
            </output>
            <output name="assembly_graph" ftype="graph_dot">
                <assert_contents>
                    <has_size value="1248" delta="100"/>
               </assert_contents>
            </output>
            <output name="assembly_gfa" ftype="txt">
                <assert_contents>
                    <has_size value="420252" delta="100"/>
               </assert_contents>
            </output>
            <output name="consensus" ftype="fasta">
                <assert_contents>
                    <has_size value="427129" delta="100"/>
               </assert_contents>
            </output>
        </test>
    </tests>
    <help><![CDATA[

.. class:: infomark

**Purpose**

Hello, world!

  ]]></help>
    <expand macro="citations" />
</tool>
