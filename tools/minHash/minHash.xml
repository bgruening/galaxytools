<tool id="minHashTool" name="MinHash approx k-neighbors" version="0.1">
  <description>approximate k-neighbors computation for sparse datasets</description>
  <command>
    <![CDATA[
    python "$minHash_script" '$inputs'
    ]]>
  </command>
  <configfiles>
    <inputs name="inputs" />
    <configfile name="minHash_script">
      <![CDATA[
from bioinf_learn import MinHash
import sys
from numpy import savetxt
import json
from scipy.io import mmread

input_json_path = sys.argv[1]
input_json_raw = open(input_json_path, 'r')
params = json.load(input_json_raw)
print sys.argv
# options = params["inputs"]["algorithm_options"]
data_matrix = mmread("$input_file")
minHash = MinHash()
dist, indices = minHash.fit_kneighbors(data_matrix)
savetxt("$dist", dist, fmt='%f')
savetxt("$indices", indices, fmt='%i')
      ]]>
    </configfile>
  </configfiles>
  <inputs>
    <param name="input_file" type="data" label="Source file"/>
    <param name="n_neighbors" type="integer" value="5" label="Number of neighbors"/>
    <param name="radius" type="float" value="1.0" label="Range of parameter space to use by default for radius_neighbors queries."/>
    <param name="fast" type="boolean" label="Fast version of MinHash, less accurate"/>
    <param name="number_of_hash_functions" type="integer" value="400" label="Number of hash function that should be used for the approximation."/>
    <param name="max_bin_size" type="integer" value="50" label="The number of maximal collisions for one hash value of one hash function. "/>
    <param name="minimal_blocks_in_common" type="integer" value="1" label="The minimal number of hash collisions two instances have to be in common to be recognised."/>
    <param name="excess_factor" type="integer" value="5" label="Factor to return more neighbors internally as defined with n_neighbors."/>
    <param name="similarity" type="boolean" label="Use cosine similarity or euclidean distance as a measurement."/>
    <param name="number_of_cores" type="integer" value="4" label="Number of cores that are used by the parallelization."/>
    <param name="chunk_size" type="integer" value="0" label="Elements per core."/>
    <param name="prune_inverse_index" type="integer" value="-1" label="Remove every hash value with less occurence than: "/>
    <param name="prune_inverse_index_after_instance" type="float" value="-1.0" label="Prune inverse index after x% of the data"/>
    <param name="remove_hash_functions_with_less_entries_as" type="integer" value="-1" label="Remove every hash function with less hash values as: "/>
    <param name="shingle_size" type="integer" value="4" label="Reduction factor for the signature size."/>
    <param name="block_size" type="integer" value="5" label="How many "/>
    <param name="shingle" type="integer" value="0" label="sss"/>
    <param name="store_value_with_least_significant_bit" type="integer" value="0" label="asdasd"/>
    <param name="gpu_hashing" type="integer" value="0" label="ddd"/>
  </inputs>
  <outputs>
    <data format="txt" name="dist" />
    <data format="txt" name="indices" />
    
  </outputs>


  <help>
This tool computes the approximate k-nearest neighbors and works only on sparse datasets.
  </help>

</tool>