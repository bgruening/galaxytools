<tool id="hicup_hicup" name="Pipeline" version="0.1.0">
    <macros>
        <import>hicup_macros.xml</import>
    </macros>
    <expand macro="requirements_hicup" />
    <expand macro="stdio" />

    <command><![CDATA[
        BOWTIE_PATH_BASH="\$(which bowtie2)" &&
        #set index_path = ''
        #if str($reference_genome.source) == "history":
            bowtie2-build "$reference_genome.own_file" genome &&
            ln -s "$reference_genome.own_file" genome.fa &&
            #set index_path = 'genome'
        #else:
            #set index_path = $reference_genome.index.fields.path
        #end if
        hicup_digester --re1 '$re1' --genome '$genome'
        #if $advanced_options.re2:
            --re2 '$advanced_options.re2'
        #end if
        #for $file in $input_files_digest:
            $file
        #end for
        && mv *Digest_* digest_file.txt
        && hicup 
        --digest digest_file.txt
        --index '$index_path'
        --bowtie2 \$BOWTIE_PATH_BASH
        $advanced_options.nofill --keep
        
        #if $advanced_options.longest:
            --longest '$advanced_options.longest'
        #end if

        #if $advanced_options.shortest:
            --shortest '$advanced_options.shortest'
        #end if
        
        $input_first_sequence $input_second_sequence
       
        ## process truncater files
        && mv hicup_truncater_summary* hicup_truncater_summary.txt
        && trunc_result=\$(echo '$input_first_sequence' | rev | cut -d'/' -f1 | rev)
        && trunc_result+=".trunc.fastq"
        && echo \$trunc_result
        && echo '$input_first_sequence'
        && mv \$trunc_result dataset1.trunc.fastq
        && trunc_result=\$(echo '$input_second_sequence' | rev | cut -d'/' -f1 | rev)
        && trunc_result+=".trunc.fastq"
        && mv \$trunc_result dataset2.trunc.fastq

        ## process mapper
        && mv hicup_mapper_summary* hicup_mapper_summary.txt
        && mv *.pair.sam result.pair.sam

        ## process filter
        && mv hicup_filter_ditag_rejects* hicup_filter_ditag_rejects
        && mv *filt.sam dataset.filt.sam
        && mv hicup_filter_summary* hicup_filter_summary.txt
        && mv hicup_filter_ditag_rejects/*contiguous.filter.sam hicup_filter_ditag_rejects/dataset.contiguous.filter.sam
        && mv hicup_filter_ditag_rejects/*re_ligation.filter.sam  hicup_filter_ditag_rejects/dataset.re_ligation.filter.sam 
        && mv hicup_filter_ditag_rejects/*same_dangling_ends.filter.sam hicup_filter_ditag_rejects/dataset.same_dangling_ends.filter.sam
        && mv hicup_filter_ditag_rejects/*invalid.filter.sam hicup_filter_ditag_rejects/dataset.invalid.filter.sam 
        && mv hicup_filter_ditag_rejects/*same_circularised.filter.sam hicup_filter_ditag_rejects/dataset.same_circularised.filter.sam
        && mv hicup_filter_ditag_rejects/*same_internal.filter.sam hicup_filter_ditag_rejects/dataset.same_internal.filter.sam
        #if $advanced_options.longest or $advanced_options.shortest: 
        && mv hicup_filter_ditag_rejects/*wrong_size.filter.sam hicup_filter_ditag_rejects/dataset.wrong_size.filter.sam
        #end if
        ## process general output of hicup
        && mv *.hicup.* dataset.hicup
        && mv *html results.html
    ]]></command>
    <inputs>
        <expand macro="truncater_input" />
        <expand macro="digester_input" />
        <expand macro="re1" />
        <expand macro="reference_genome_macro" />
        <section name="advanced_options" title="Advanced options">
            <expand macro="re2" />
            <expand macro="filter_longest_shortest" />
            <expand macro="no_fill" />     
        </section>
    </inputs>
    <outputs>
        <!-- Regular output of hicup -->
        <data name="hicup_results" format="html" from_work_dir="results.html" label="HiCUP report"/>
        <data name="dataset_hicup" format="bam,sam" from_work_dir="dataset.hicup" label="HiCUP results"/>
        <collection name="intermediate_results" label="HiCUP intermediate results" type="list">
            <!-- Output of the truncater step -->
            <expand macro="truncater_output" />
            <!-- Output of the mapper step -->
            <expand macro="mapper_output" />
            <!-- Output of the filter step -->
            <expand macro="filter_output" />
        </collection>
    </outputs>
    <tests>
         <test>
            <param name="digest" value="digester_file.txt" ftype="txt"/>
            <param name="inputFiles" value="filter_input.sam" ftype="sam"/>
            <output name="dataset_filt" file="dataset.filt.sam"/>
            <output name="hicup_filter_summary" file="hicup_filter_summary.txt"/>
            <output name="contiguous_filter" file="dataset.contiguous.filter.sam"/>
            <output name="re_ligation_filter" file="dataset.re_ligation.filter.sam"/>
            <output name="same_dangling_ends_filter" file="dataset.same_dangling_ends.filter.sam"/>
            <output name="invalid_filter" file="dataset.invalid.filter.sam"/>
            <output name="same_circularised_filter" file="dataset.same_circularised.filter.sam"/>
            <output name="same_internal_filter" file="dataset.same_internal.filter.sam"/>
        </test>
    </tests>
    <help><![CDATA[

    For help please consult the documentation of HiCUP: http://www.bioinformatics.babraham.ac.uk/projects/hicup/overview/

    To get more information about the pipeline visit: http://www.bioinformatics.babraham.ac.uk/projects/hicup/scripts_description/#HiCUP
    ]]></help>
    <expand macro="citation_hicup" />
</tool>
