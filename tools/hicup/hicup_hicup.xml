<tool id="hicup_hicup" name="HiCUP pipeline" version="0.1.0">
    <requirements>
    </requirements>
    <stdio>
        <exit_code range="1:" />
    </stdio>
    <command><![CDATA[
        BOWTIE_PATH="$(whereis bowtie2 | awk '{split($0,a," "); print a[2]}')" &&
        hicup 
        --digest $digest 
        #set index_path = ''
        #if str($reference_genome.source) == "history":
            bowtie2-build "$reference_genome.own_file" genome &amp;&amp;
            ln -s "$reference_genome.own_file" genome.fa &amp;&amp;
            #set index_path = 'genome'
        #else:
            #set index_path = $reference_genome.index.fields.path
        #end if
        --index $index_path 
        $keep $temp $zip $nofill
        --bowtie2 $BOWTIE_PATH
        #end if:
        #if $format
            --format $format
        #end if    
        #if $threads:
            --threads $threads
        #end if
        #if $longest:
            --longest $longest
        #end if

        && unset BOWTIE_PATH
        && mv hicup_filter_ditag_rejects* hicup_filter_ditag_rejects
    ]]></command>
    <inputs>
            <param argument="--digest" type="data" format="txt" label="HiCUP digister file" help="The file which was created by HiCUP digister."/>
            <param argument="--format" type="select" label="Data format:" help="Specify FASTQ format
                Options: Sanger, Solexa Illumina 1.0, Illumina 1.3, Illumina 1.5">
                <option value="none" selected="true"></option>
                <option value="Sanger" selected="true">Sanger</option>
                <option value="Solexa_Illumina_1.0">Solexa Illumina 1.0</option>
                <option value="Illumina_1.3">Illumina 1.3</option>
                <option value="Illumina_1.5">Illumina 1.5</option>
            </param>
            <conditional name="reference_genome">
                <param name="source" type="select" label="Will you select a reference genome from your history or use a built-in index?" help="Built-ins were indexed using default options. See `Indexes` section of help below">
                    <option value="indexed">Use a built-in genome index</option>
                    <option value="history">Use a genome from the history and build index</option>
                </param>
                <when value="indexed">
                    <param name="index" type="select" label="Select reference genome" help="If your genome of interest is not listed, contact the Galaxy team">
                    <options from_data_table="bowtie2_indexes">
                        <filter type="sort_by" column="2"/>
                        <validator type="no_options" message="No indexes are available for the selected input dataset"/>
                    </options>
                    </param>
                </when>
                <when value="history">
                    <param name="own_file" type="data" format="fasta" metadata_name="dbkey" label="Select reference genome" />
                </when>
            </conditional>
            <param argument="--keep" type="boolean" value="false" truevalue="--keep" falsevalue="" label="Keep intermediate pipeline files" help="Keep intermediate pipeline files"/>
            <param argument="--longest" type="text" value="" label="Max insert size" help="Maximum allowable insert size (bps)"/>
            <param argument="--nofill" type="boolean" value="false" truevalue="--nofill" falsevalue="" label="No fill" help="Hi-C protocol did NOT include a fill-in of sticky ends prior to ligation step and therefore FASTQ reads shall be truncated at the Hi-C restriction enzyme cut site 
                (if present) sequence is encountered"/>
            <param argument="--quiet" type="boolean" value="false" truevalue="--quiet" falsevalue="" label="" help=""/>
            <param argument="--shortest" type="text" value="" label="Min insert size" help="Minimum allowable insert size (bps)"/>
            <param argument="--temp" type="boolean" value="false" truevalue="--temp" falsevalue="" label="Save all temporary files" help="Save intermediate files (i.e. all except 
                summaryfiles and files generated by HiCUP Deduplicator) to history"/>
            <param argument="--threads" type="integer" value="1" label="Threads" help="Specify the number of threads, allowing simultaneous processing of multiple files"/>
            <param argument="--zip" type="boolean" value="false" truevalue="--zip" falsevalue="" label="Compress output" help="Compress the output with zip"/>

    </inputs>
    <outputs>
    <data format="txt" name="HiCUP_summary_report">
        <discover_datasets pattern="HiCUP_summary_report" visible="true" />
    </data>
    <data format="txt" name="hicup_mapper_summary">
        <discover_datasets pattern="hicup_mapper" visible="true" />
    </data>
    <data format="txt" name="hicup_filter_summary">
        <discover_datasets pattern="hicup_filter_summary" visible="true" />
    </data>
    <data format="txt" name="hicup_truncater_summary">
        <discover_datasets pattern="hicup_truncater_summary" visible="true" />
    </data>
    <data format="txt" name="hicup_deduplicator_summary">
        <discover_datasets pattern="hicup_deduplicator_summary" visible="true" />
    </data>
    <data format="html" name="HiCUP_summary_report_html">
        <discover_datasets pattern="HiCUP_summary_report.html" visible="true" />
    </data>
    <data format="bam" name="hicup_result">
        <discover_datasets pattern="hicup.bam" visible="true" />
    </data>
    <data format="bam" name="hicup_filter_result">
        <discover_datasets pattern="filt.bam" visible="true" />
    </data>
    <data format="bam" name="hicup_pair_result">
        <discover_datasets pattern="pair.bam" visible="true" />
    </data>
    <data format="fastq" name="hicup_trunc_result">
        <discover_datasets pattern="trunc.fastq" visible="true" />
    </data>
    <!-- How to handle the case if the pattern  is needed for the directory but the files inside are using a different one?-->
    <data format="bam" name="hicup_filter_rejects">
        <discover_datasets pattern="filter_ditag_rejects" visible="true" />
    </data>

    <data format="bam" name="contiguous.filter">
        <discover_datasets pattern="contiguous.filter" directory="hicup_filter_ditag_rejects" visible="true" />
    </data>
    <data format="bam" name="circularised.filter">
        <discover_datasets pattern="circularised.filter" directory="hicup_filter_ditag_rejects" visible="true" />
    </data>
     <data format="bam" name="wrong_size.filter">
        <discover_datasets pattern="wrong_size.filter" directory="hicup_filter_ditag_rejects" visible="true" />
    </data>
     <data format="bam" name="invalid.filter">
        <discover_datasets pattern="invalid.filter" directory="hicup_filter_ditag_rejects" visible="true" />
    </data>
     <data format="bam" name="re_ligation.filter">
        <discover_datasets pattern="re_ligation.filter" directory="hicup_filter_ditag_rejects" visible="true" />
    </data>
     <data format="bam" name="same_dangling_ends.filter">
        <discover_datasets pattern="same_dangling_ends.filter" directory="hicup_filter_ditag_rejects" visible="true" />
    </data>
     <data format="bam" name="same_internal.filter">
        <discover_datasets pattern="same_internal.filter" directory="hicup_filter_ditag_rejects" visible="true" />
    </data>
    </outputs>
    <help><![CDATA[
        The HiCUP pipeline comprises the scripts ‘hicup_truncater’, ‘hicup_mapper’, ‘hicup_filter’ and ‘hicup_deduplicator’ (‘hicup_digester generates the genome_digest file used by hicup_filter). The pipeline takes FASTQ files and generates Hi-C di-tag paired reads, aligned to a specified reference genome. The HiCUP script regulates the pipeline, executing each script in turn and passing output from one stage of the program to the next. 
    ]]></help>
</tool>