<tool id="hicup_filter" name="HiCUP Filter" version="0.1.0">
    <requirements>
        <requirement type="package" version="0.5.9">hicup</requirement>
    </requirements>
    <stdio>
        <exit_code range="1:" />
    </stdio>
    <command><![CDATA[
        hicup_filter --digest $digest $advanced_options.zip 
        #if $advanced_options.longest:
            --longest $advanced_options.longest
        #end if
        #if $advanced_options.shortest:
            --shortest $advanced_options.shortest
        #end if
        --threads $advanced_options.threads
        $input
         && mv hicup_filter_ditag_rejects* hicup_filter_ditag_rejects
    ]]></command>
    <inputs>
        <param name="input" type="data" format="bam,sam" label="Input"/>
        <param argument="--digest" type="data" format="txt" label="Genome digest file" help="Specify the genome digest file (created by hicup_digester)"/>
        <section name="advanced_options" title="Advanced options">
            <param argument="--longest" type="text" value="" label="Max insert size" help="Maximum allowable insert size (bps)"/>
            <param argument="--shortest" type="text" value="" label="Min insert size" help="Minimum allowable insert size (bps)"/>
            <param argument="--threads" type="integer" value="1" label="Threads" help="Specify the number of threads, allowing simultaneous processing of multiple files"/>
            <param argument="--zip" type="boolean" value="false" truevalue="--zip" falsevalue="" label="Compress output" help="Compress the output with zip"/>
        </section>
    </inputs>
    <outputs>
        <data format="txt" name="digest_file">
            <discover_datasets pattern="__designation_and_ext__" visible="true" />
        </data>
         <data format="txt" name="digest_file_rejects">
            <discover_datasets pattern="__designation_and_ext__" directory="hicup_filter_ditag_rejects" visible="true" />
        </data>
    </outputs>

    
    <help><![CDATA[
The majority of reads generated by the HiCUP Mapper script are most likely valid Hi-C products, but a substantial minority are probably not and should be removed. The HiCUP Filter script processes paired reads together with the file created by HiCUP Digester to identify valid Hi-C pairs.

The names of the files to be processed and other parameters may be passed to the script using a configuration file or by command line arguments. As a minimum requirement the script requires: i) a list of HiCUP Mapper output file(s) and ii) a digested genome produced by HiCUP Digester. 
    ]]></help>
    <citations>
        <citation type="bibtex">
            @article{wingett2015hicup,
                title={HiCUP: pipeline for mapping and processing Hi-C data},
                author={Wingett, Steven and Ewels, Philip and Furlan-Magaril, Mayra and Nagano, Takashi and Schoenfelder, Stefan and Fraser, Peter and Andrews, Simon},
                journal={F1000Research},
                volume={4},
                year={2015},
                publisher={Faculty of 1000 Ltd}
                }
        </citation>
    </citations>
</tool>
