<tool id="viennarna_rnalfold" name="@EXECUTABLE@" version="@VERSION@.0">
    <description>calculates locally stable secondary structures of RNA</description>

    <macros>
        <token name="@EXECUTABLE@">RNALfold</token>
        <import>macros.xml</import>
    </macros>
        <expand macro="requirements" />
    <expand macro="stdio" />
    <expand macro="version_command" />
    <command>
<![CDATA[
    RNALfold -L $span -T $temperature -d$dangling < '$fasta_input' 
    #if $varExists('$advancedOptions.noconversion')
        $advancedOptions.noconversion
        $advancedOptions.gquad
        $advancedOptions.nolp
        $advancedOptions.nogu
        $advancedOptions.noclosinggu
        $advancedOptions.notetra
        #if $advancedOptions.activateZscore 
            #if str($advancedOptions.zscore) <> ""
                --zscore=$advancedOptions.zscore
            #else
                --zscore
            #end if
        #end if
    #end if
    | sed -r 's/(^[.()]*) +(\(.*\)) +(.*)/\1\t\2\t\3/' > '$out_file'
]]>
    </command>
    <inputs>
    <param format="fasta" name="fasta_input" type="data" label="FASTA file"/>
        <param name="span" type="integer" min="0" max="5000" value="150" label="base pair span" help="Maximal distance between two paired bases. (-L)"/>
        <param name="temperature" type="float" value="37.0" label="Temperature [°C]" help="-T"/>
        <param name="dangling" type="select" label="how to treat dangling end energies" help="-d">
            <option value="2" selected="true">unpaired bases participate in all dangling ends (2)</option>
            <option value="0">ignore dangling ends (0)</option>
            <option value="1">unpaired bases participate in one dangling end only (1)</option>
            <option value="3">allow coaxial stacking (3)</option>
        </param>
        <conditional name="advancedOptions">
            <param name="advancedSelector" type="select"  label="advanced options">
                <option value="basic">basic Options</option>
                <option value="advanced">advanced Options</option>
            </param>
            <when value="advanced">
                <param name="gquad" type="boolean" truevalue="--gquad" falsevalue="" checked="false" label="Take G Quadruplex formation into account" argument="-g"/>
                <param name="nolp" type="boolean" truevalue="" falsevalue="--noLP" checked="true" label="Allow lonely base-pairs" help="(--noLP)"/>
                <param name="nogu" type="boolean" truevalue="" falsevalue="--noGU" checked="true" label="Allow GU pairing" help="--noGU"/>
                <param name="noclosinggu" type="boolean" truevalue="" falsevalue="--noClosingGU" checked="true" label="Allow GU pairing at the ends" help="Allow pairing of G and U at the ends of helices. --noClosingGU"/>
                <param name="notetra" type="boolean" truevalue="" falsevalue="--noTetra" checked="true" label="Allow stabilization for loops, hairpins etc." help=" Include special tabulated stabilizing energies for tri-, tetra- and hexaloop hairpins. Mostly for testing. (--noTetra)"/>
                <param name="noconversion" type="boolean" truevalue="" falsevalue="--noconv" checked="true" label="Convert Thymine to Uracil (T -> U)" help="Avoids confusion with DNA sequences (--noconv)"/>                
                <param name="activateZscore" type="boolean" checked="false" label="Activate Z−score computation. An optional argument may be supplied to set the threshold" help="(--zscore)"/>
                <param name="zscore" type="float" value="-2" optional="true" label="Z-score" help="An optional argument may be supplied to set the threshold"/>
            </when>
            <when value="basic">
            </when>
        </conditional>
    </inputs>
    <outputs>
        <data format="txt" name="out_file"/>
    </outputs>
    <tests>
        <test>
            <param name="fasta_input" value="rnalfold_input1.fa"/>
            <output name="out_file" file="rnalfold_result1.txt"/>
        </test>
    </tests>
    <help>
<![CDATA[
**RNALfold**

Compute locally stable RNA secondary structure with a maximal base pair span.
For a sequence of length n and a base pair span of L the algorithm uses only
O(n+L*L) memory and O(n*L*L) CPU time. *Thus it is practical to "scan" very
large genomes for short RNA structures*.
Output consists of a list of secondary structure components of size <= L, one
entry per line. Each output line contains the predicted local structure its
energy in kcal/mol and the starting position of the local structure.

-----

**Input format**

- RNALfold requires one input file in FASTA format

------

**Outputs**

- text output with dot-bracket notation and free energies of the secondary structures

]]>
    </help>
    <expand macro="citations" />
</tool>
