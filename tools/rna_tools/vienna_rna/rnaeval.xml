<tool id="rnaeval" name="RNAeval" version="2.1.6.0">
    <description>Calculate energy of RNA sequences with given secondary structure</description>
    <expand macro="requirements" />
    <expand macro="version_command" />
    <expand macro="stdio" />
    <macros>
        <token name="@EXECUTABLE@">RNAeval</token>
        <import>macros.xml</import>
    </macros>
    <command>
<![CDATA[
        RNAeval < $input > $tabularFile
        -T$temperature -d$dangling
        #if $varExists('$advancedOptions.noconversion')
            $advancedOptions.noconversion
            $advancedOptions.verbose
            $advancedOptions.gquad
            $advancedOptions.circ
            $advancedOptions.logml
            $advancedOptions.notetra
        #end if
]]>
    </command>

    <inputs>
        <param format="txt,dbn" name="input" type="data" label="Input file"/>
        <param name="temperature" type="float" value="37.0" label="temperature [Â°C]" help="-T"/>
        <param name="dangling" type="select" label="how to treat dangling end energies" help="-d">
            <option value="0">0: ignore dangling ends</option>
            <option value="1">1: unpaired bases participate in one dangling end only</option>
            <option value="2" selected="True">2: unpaired bases participate in all dangling ends</option>
            <option value="3">3: allow coaxial stacking</option>
        </param>

        <conditional name="advancedOptions">
            <param name="advancedSelector" type="select" label="advanced options">
                <option value="basic">basic Options</option>
                <option value="advanced">advanced Options</option>
            </param>
            <when value="advanced">
                <param name="noconversion" type="boolean" truevalue="--noconv" falsevalue="" checked="false" label="No converstion from T->U" help="--noconv"/>
                <param name="verbose" type="boolean" truevalue="--verbose" falsevalue="" checked="false" label="Print out energy of each loop in the structure." help="--verbose"/>
                <param name="gquad" type="boolean" truevalue="--gquad" falsevalue="" checked="false" label="G-quadruplex formation prediction" help="--gquad"/>
                <param name="circ" type="boolean" truevalue="--circ" falsevalue="" checked="false" label="Assume circular RNA" help="--circ"/>
                <param name="logml" type="boolean" truevalue="--logML" falsevalue="" checked="false" label="Logarithmic energy functions for multi-loops" help="--logML"/>
                <param name="notetra" type="boolean" truevalue="--noTetra" falsevalue="" checked="false" label="No stabilization for loops, hairpins etc." help="--noTetra"/>
            </when>
        </conditional>
    </inputs>
    <outputs>
        <data format="txt" name="tabularFile"/>
    </outputs>
    <tests>
        <test>
            <param name="input" value="rnaeval_input1.dbn"/>
            <output name="out_file" file="rnaeval_result1.txt"/>
        </test>
    </tests>
    <help>
<![CDATA[
**RNAeval**
RNAeval evaluates the free energy of an RNA molecule in fixed secondary structure. Sequences and structures are read alternately from stdin. The energy in Kcal/Mol is written to stdout.

-----

**Input format**

RNAeval requires one input file in a format similar to the Fasta format. The secondary strucures should be added after the sequence in dot-bracket notation. Sequence and structure can be interupted by an '&' to calculate the co-folding of two RNA-strands.


------

**Outputs**

First line: the sequence, second line: the structure with its corresponding energy


]]>
    </help>
    <expand macro="requirements" />
</tool>
