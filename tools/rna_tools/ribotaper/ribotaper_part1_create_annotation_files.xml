<tool id="ribotaper_create_annotation" name="ribotaper part 1: creation of annotation files" version="0.1.0">
    <requirements>
            <requirement type="package" version="1.3.1a">ribotaper</requirement>
    </requirements>
    <stdio>
        <exit_code range="1:" />
    </stdio>

    <command><![CDATA[
        create_annotations_files.bash
            "$gtf"
            "$fa"
            "$ccdsid"
            "$appris"
            "annotation_path"

        &&

        tar
            "czvf"
            "$output2"
            "annotation_path"

    ]]></command>
    <inputs>
        <param name="gtf" type="data" format="GTF" label="GTF"
               help="GTF should contain:
               1) coding and non-coding genes, 2) a 'transcript_id' and a 'gene_id' field for each 'exon' and 'CDS' row.
               "/>
        <param name="fa" type="data" format="fasta" label="Genome fasta file" help="FASTA-format, indexed and not repeat masked."/>
        <param name="ccdsid" type="boolean" falsevalue="false" truevalue="true" checked="true" label="Use ccdsid? (valid for Human Gencode 19 and Mouse Gencode M3 )"
               help="If yes, only exons/transcripts with the CCDS tag will be used as CCDS exons/transcripts, otherwise all exons/transcripts with a CDS region are going to be annotated as CCDS.
                    "/>
        <param name="appris" type="boolean" falsevalue="false" truevalue="true" checked="true" label="Use appris? (valid for Human Gencode 19 and Mouse Gencode M3 )"
               help=" If yes, only exons/transcripts with the appris tag will be used, using only 1 transcript per appris gene (the appris_principal transcript or other appris transcript). If a               gene does not have appris transcript, all the annotated transcript structures are used.
               "/>
    </inputs>
    <outputs>
        <data name="output1" type="data" format="bed" from_work_dir="annotation_path/start_stops_FAR.bed" label="start_stops_FAR"/>
        <data name="output2" type="data" format="compressed_archive" label="annotation_path"/>
    </outputs>
    <tests>
        <test>
            <param name="gtf" value="test.gtf"/>
            <param name="fa" value="test.fa"/>
            <param name="ccdsid" value="true"/>
            <param name="appris" value="true"/>
            <output name="output1" file="annotation_path/start_stops_FAR.bed"/>
        </test>
    </tests>
    <help><![CDATA[
Overview
--------

RiboTaper is an analysis pipeline for Ribosome Profiling
(Ribo-seq) experiments,
which exploits the triplet periodicity of
ribosomal footprints to call translated regions.
See
https://ohlerlab.mdc-berlin.de/software/RiboTaper_126/ for details.


The Ribotaper Galaxy tool set consists of three tools:

  - ``ribotaper part 1``: creation of annotation files
  - ``ribotaper part 2``: metagene analysis for P-sites definition
  - ``ribotaper part 3``: ribosome profiling

The order of execution should follow:
``ribotaper part 1, part 2 and part 3``.

The current tool is ``ribotaper part 1``,
creation of annotation files.

Output
------

``Ribotaper part 1`` builds a list of exon coordinates,
exon sequences and transcript structures.

``Ribotaper part 1`` generates two files:

  - **start_stops_FAR** in BED format
  - **annotation_path**  in format of compressed archive

*Start_stops_FAR*
is used as an input for ``ribotaper part 2``.
*Annotation_path*
is used as an input for ``ribotaper part 3``.

Important notes
----------------

- To install the galaxy tool, please enable conda installation in **galaxy.ini**

- Please add the following line to **datatypes_conf.xml** to enable the data type, **compressed_archive**,

    <datatype extension="compressed_archive" type="galaxy.datatypes.binary:CompressedArchive" subclass="True" display_in_upload="True"/>

- At least 2 cores should be used for running ``ribotaper part 3: ribosome profiling``,  therefore please configure **job_conf.xml** accordingly.

- We ran the RiboTaper analysis on an SGE cluster, using 7 cores and h_vmem 8G. For each dataset, the complete RiboTaper workflow (from the bam files to final results) took ~ 1 day.

- The current RiboTaper framework is not designed to identify and quantify ORFs on different transcripts. This means the transcript annotation is crucial.

- Be careful about using scaffolds, both in the genome and GTF files, which may slow the whole pipeline.

]]></help>
    <citations>
        <citation type="doi">10.1038/nmeth.3688</citation>
    </citations>
</tool>
