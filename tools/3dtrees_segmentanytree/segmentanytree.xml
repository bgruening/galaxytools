<tool id="3dtrees_segmentanytree" name="3Dtrees: SegmentAnyTree" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="24.2">
    <description>
        Forest instance segmentation.
    </description>
    <macros>
        <token name="@TOOL_VERSION@">1.1.0</token>
        <token name="@VERSION_SUFFIX@">0</token>
    </macros>
    <requirements>
        <container type="docker">
            ghcr.io/3dtrees-earth/3dtrees_sat:@TOOL_VERSION@
        </container>
    </requirements>
    <command detect_errors="exit_code"><![CDATA[
        export NUMBA_CACHE_DIR=\$TMPDIR &&
        #if $input.ext == "zip":
            ln -s '$input' input.zip &&
            python3.8 -u /src/run.py 
            --dataset-path input.zip 
            --output-dir . 
            --log_file '$log_file'
        #else:
            ln -s '$input' input.laz &&
            python3.8 -u /src/run.py 
            --dataset-path input.laz 
            --output-dir . 
            --log_file '$log_file' &&
            mv segmented_pc.laz '$output'
        #end if
    ]]>
    </command>
    <inputs>
        <param argument="--input" type="data" format="zip,laz" label="Input Dataset" help="ZIP file containing point cloud data with required folder structure / single LAZ/LAS point cloud file."/>
        <param argument="--log_file" type="select" label="Resource log" help="If set to true, it returns a log file containing the CPU, RAM and GPU usage statistics">
            <option value="true" selected="true"/>
            <option value="false"/>
        </param>
    </inputs>
    <outputs>
        <data name="output_zip" format="zip" label="Processed Files" from_work_dir="processed_files.zip">
            <filter>input.ext == "zip"</filter>
        </data>
        <data name="output_laz" format="laz" label="Segmented Point Cloud" from_work_dir="segmented_pc.laz">
            <filter>input.ext == "laz"</filter>
        </data>
        <data name="resource_usage" format="txt" label="Resource Usage" from_work_dir="resource_usage.log">
            <filter>log_file == "true"</filter>
        </data>
    </outputs>
    <tests>
        <test expect_num_outputs="2">
            <param name="input" value="prepared_files_mikro.zip"/>
            <param name="log_file" value="true"/>
            <output name="output_zip" file="processed_files.zip"/>
            <output name="resource_usage" file="resource_usage.log"/>
            <assert_stdout>
                <has_text text="Loading checkpoint from /src/SegmentAnyTree/model_file/PointGroup-PAPER.pt"/>
                <has_text text="Segmentation complete"/>
            </assert_stdout>
        </test>
        <test expect_num_outputs="1">
            <param name="input" value="mikro.laz"/>
            <param name="log_file" value="false"/>
            <output name="output_laz" file="segmented_pc.laz"/>
            <assert_stdout>
                <has_text text="Loading checkpoint from /src/SegmentAnyTree/model_file/PointGroup-PAPER.pt"/>
                <has_text text="Segmentation complete"/>
            </assert_stdout>
        </test>
    </tests>
    <help format="markdown">
**What it does**

This tool performs deep learning-based tree segmentation on LiDAR point clouds using the **SegmentAnyTree** algorithm (Wielgosz et al., 2024). It is sensor- and platform-agnostic, working across airborne (ALS/ULS), terrestrial (TLS), and mobile (MLS) laser scanning data.

-----


**Input**
- A **ZIP file** containing the following directory structure:
    ```
    00_original/
        input.laz
    01_subsampled/
        input_subsampled.laz
    02_input_SAT/
        tile_1.laz
        tile_2.laz
        ...
    ```
- A single **LAZ/LAS file** containing a point cloud
-----

**Output**

The output depends on the input type:
- **ZIP input** → ZIP output containing the complete processed folder structure.
- **LAZ input** → Single LAZ output file `segmented_pc.laz` containing the segmented point cloud with tree instance IDs.

We recommend using the [3DTrees: Tile and Merge](https://usegalaxy.eu/?tool_id=toolshed.g2.bx.psu.edu%2Frepos%2Fbgruening%2F3dtrees_tile_merge%2F3dtrees_tile_merge%2F1.0.1%2Bgalaxy0&amp;version=latest) tool to preprocess and remap the segmented point cloud back to original resolution.

    </help>
    <creator>
        <person name="Marc Wielgosz" email="maciej.wielgosz@nibio.no" url="https://maciej.wielgosz.info/"/>
        <person name="Kilian Gerberding" email="kilian.gerberding@geosense.uni-freiburg.de" url="https://orcid.org/0009-0002-5001-2571"/>
        <organization name="3Dtrees-Team, University of Freiburg" url="https://github.com/3dTrees-earth"/>
    </creator>
    <citations>
        <citation type="doi">10.1016/j.rse.2024.114367</citation>
        <citation type="bibtex">
            @misc{3dtrees_segmentanytree, title = {3Dtrees: SegmentAnyTree}, author = {3Dtrees-Project}, year = {2025}}
        </citation>
    </citations>
</tool>
