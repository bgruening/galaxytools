<tool id="blockbuster" name="blockbuster" version="0.1.2">
    <description>detects blocks of overlapping reads using a gaussian-distribution approach</description>
    <requirements>
        <requirement type="package" version="0.0.1.1">blockbuster</requirement>
    </requirements>
    <command>
<![CDATA[
        blockbuster.x
            -distance $distance
            -minClusterHeight $minClusterHeight
            -minBlockHeight $minBlockHeight
            -scale $scale
            -merge $merge
            -tagFilter $tagFilter
            #if str($print).endswith( 'blocks' )
                -print 1
            #else 
                -print 2
            #end if
            $input
            > data.blockbuster
            &&
            #if str($print) == 'bed_blocks'
                awk '{if ($1 ~ /^>/) print $2"\t"$3"\t"$4"\t"$1"\t"$6"\t"$5"\t"$3"\t"$4; else print $2"\t"$3"\t"$4"\tblock_"$1"\t"$6"\t"$5"\t"$3"\t"$4}' data.blockbuster > $output
            #else if str($print) == 'bed_reads'
                awk '{if ($1 ~ /^>/) print $2"\t"$3"\t"$4"\t"$1"\t"$6"\t"$5"\t"$3"\t"$4; else print $1"\t"$2"\t"$3"\t"$3"\t"$4"\t"$5"\t"$6"\t"$2"\t"$3}' data.blockbuster > $output
            #else
                mv data.blockbuster $output
            #end if
]]>
    </command>
    <inputs>
        <param name="input" type="data" format="bed" label="BED file containing read expressions"/>
        <param name="distance" type="integer" value="40" label="minimum distance between two clusters"/>
        <param name="minClusterHeight" type="float" value="50" label="minimum height (readno) of a cluster"/>
        <param name="minBlockHeight" type="float" value="1" label="minimum height (readno) of a block"/>
        <param name="scale" type="float" value="0.5" label="scale stddev for a single read"/>
        <param name="merge" type="integer" value="0" label="merge reads with almost similar means"/>
        <param name="tagFilter" type="integer" value="0" label="skip tags with expression smaller than this value"/>
        <param name="print" type="select" label="Type of output" >
            <option value="bbf_blocks">blocks (blockbuster format)</option>
            <option value="bbf_reads" selected="True">reads (blockbuster format)</option>
            <option value="bed_blocks">blocks (bed format)</option>
            <option value="bed_reads" >reads (bed format)</option>
        </param>
    </inputs>
    <outputs>
        <data format="bed" name="output" label="blockbuster on ${on_string}">
            <change_format>
                <when input="print" value="bbf_blocks" format="tabular" />
                <when input="print" value="bbf_reads" format="tabular" />
            </change_format>
	</data>
    </outputs>
    <tests>
        <test>
            <param name="input" value="blockbuster_test_input.bed" ftype="bed" />
            <param name="print" value="bed_blocks" />
            <output name="output" file="blockbuster_test_result1.bed" ftype="bed" />
        </test>
        <test>
            <param name="input" value="blockbuster_test_input.bed" ftype="bed" />
            <param name="print" value="bbf_blocks" />
            <output name="output" file="blockbuster_test_result2.blockbuster" ftype="tabular" />
        </test>
    </tests>
    <help>
<![CDATA[

**What it does**

Blockbuster_ detects blocks of overlapping reads using a gaussian-distribution approach.


Once short read sequences are mapped to a reference genome, one will face the problem of dividing consecutive reads into blocks to detect specific expression patterns. Due to biological variability and sequencing inaccuracies, the read arrangement does not always show exact block boundaries. The blockbuster tool automatically assigns reads to blocks and gives a unique chance to actually see the different origins where the short reads come from.

.. _Blockbuster: http://hoffmann.bioinf.uni-leipzig.de/LIFE/blockbuster.html

**Input**

Input file can be a BED file or an Segemehl output file.

]]>
    </help>
    <citations>
        <citation type="doi">10.1093/bioinformatics/btp419</citation>
    </citations>
</tool>
