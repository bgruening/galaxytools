<tool id="sklearn_ensemble" name="Ensemble methods" version="@VERSION@">
    <description>for classification and regression</description>
    <macros>
        <import>main_macros.xml</import>
        <!--macro name="priors"-->
    </macros>
    <expand macro="python_requirements"/>
    <expand macro="macro_stdio"/>
    <version_command>echo "@VERSION@"</version_command>
    <command><![CDATA[
    python "$ensemble_script" '$inputs'
]]>
    </command>
    <configfiles>
        <inputs name="inputs"/>
        <configfile name="ensemble_script">
<![CDATA[
import sys
import json
import numpy as np
import sklearn.ensemble
import pandas
import pickle

input_json_path = sys.argv[1]
params = json.load(open(input_json_path, "r"))


#if $selected_tasks.selected_task == "load":

classifier_object = pickle.load(open("$infile_model", 'r'))

data = pandas.read_csv("$selected_tasks.infile_data", sep='\t', header=0, index_col=None, parse_dates=True, encoding=None, tupleize_cols=False )
prediction = classifier_object.predict(data)
prediction_df = pandas.DataFrame(prediction)
res = pandas.concat([data, prediction_df], axis=1)
res.to_csv(path_or_buf = "$outfile", sep="\t", index=False)

#else:

data_train = pandas.read_csv("$selected_tasks.infile_train", sep='\t', header=0, index_col=None, parse_dates=True, encoding=None, tupleize_cols=False )

data = data_train.ix[:,0:len(data_train.columns)-1]
labels = np.array(data_train[data_train.columns[len(data_train.columns)-1]])

options = params["selected_tasks"]["selected_algorithms"]["options"]
selected_algorithm = params["selected_tasks"]["selected_algorithms"]["selected_algorithm"]

my_class = getattr(sklearn.discriminant_analysis, selected_algorithm)
classifier_object = my_class(**options)
classifier_object.fit(data,labels)
pickle.dump(classifier_object,open("$outfile", 'w+'), pickle.HIGHEST_PROTOCOL)

#end if
]]>
        </configfile>
    </configfiles>
    <inputs>
        <expand macro="sl_Conditional" model="zip">
            <param name="selected_algorithm" type="select" label="Select an ensemble method:">
                <option value="RandomForestClassifier" selected="true">Random forest classifier</option>
                <option value="AdaBoostClassifier">Ada boost classifier</option>
                <!--option value="VotingClassifier">Voting classifier</option-->
                <!--option value="GradientBoostingClassifier">Gradient boosting classifier</option-->
                <!--option value="ExtraTreesClassifier">Extra trees classifier</option-->
                <!--option value="BaggingClassifier">Bagging classifier</option-->
                <!--option value="GradientBoostingRegressor">Gradient boosting regressor</option-->
                <option value="RandomForestRegressor">Random forest regressor</option>
                <option value="AdaBoostRegressor">Ada boost regressor</option>
                <!--option value="ExtraTreesRegressor">Extra trees regressor</option-->
                <!--option value="BaggingRegressor">Bagging regressor</option-->
            </param>
            <when value="RandomForestClassifier">
                <expand macro="sl_mixed_input"/>
                <section name="options" title="Advanced Options" expanded="False">
                    <expand macro="n_estimators"/>
                    <expand macro="criterion"/>
                    <expand macro="max_features"/>
                    <expand macro="max_depth"/>
                    <expand macro="min_samples_split"/>
                    <expand macro="min_samples_leaf"/>
                    <expand macro="min_weight_fraction_leaf"/>
                    <expand macro="max_leaf_nodes"/>
                    <expand macro="bootstrap"/>
                    <expand macro="warm_start" checked="false"/>
                    <expand macro="random_state"/>
                    <expand macro="oob_score"/>
                    <!--class_weight=None-->
                </section>
            </when>
            <when value="AdaBoostClassifier">
                <expand macro="sl_mixed_input"/>
                <section name="options" title="Advanced Options" expanded="False">
                    <expand macro="infile_model" label="Select a base estimator" help="The boosted ensemble is built from this model (supported format .zip)."/>
                    <expand macro="n_estimators" default_value="50"/>
                    <expand macro="learning_rate"/>
                    <param argument="algorithm" type="select" label="Boosting algorithm"  help=" ">
                        <option value="SAMME.R" selected="true">SAMME.R</option>
                        <option value="SAMME">SAMME</option>
                    </param>
                    <expand macro="random_state"/>
                </section>
            </when>
            <!--when value="VotingClassifier">
                <expand macro="sl_mixed_input"/>
                <section name="options" title="Advanced Options" expanded="False">
                    <estimators, voting='hard', weights=None>
                </section>
            </when-->
            <!--when value="GradientBoostingClassifier">
                <expand macro="sample_cols">
                <section name="options" title="Advanced Options" expanded="False">
                    <oss='deviance', learning_rate=0.1, n_estimators=100, subsample=1.0, min_samples_split=2, min_samples_leaf=1, min_weight_fraction_leaf=0.0, max_depth=3, init=None, random_state=None, max_features=None, verbose=0, max_leaf_nodes=None, warm_start=False, presort='auto'>
                </section>
            </when-->
            <!--when value="ExtraTreesClassifier">
                <expand macro="sl_mixed_input"/>
                <section name="options" title="Advanced Options" expanded="False">
                    <n_estimators=10, criterion='gini', max_depth=None, min_samples_split=2, min_samples_leaf=1, min_weight_fraction_leaf=0.0, max_features='auto', max_leaf_nodes=None, bootstrap=False, oob_score=False, n_jobs=1, random_state=None, warm_start=False, class_weight=None>
                </section>
            </when-->
            <!--when value="BaggingClassifier">
                <expand macro="sl_mixed_input"/>
                <section name="options" title="Advanced Options" expanded="False">
                    <base_estimator=None, n_estimators=10, max_samples=1.0, max_features=1.0, bootstrap=True, bootstrap_features=False, oob_score=False, warm_start=False, random_state=None>
                </section>
            </when-->
            <when value="RandomForestRegressor">
                <expand macro="sl_mixed_input"/>
                <section name="options" title="Advanced Options" expanded="False">
                    <expand macro="n_estimators"/>
                    <expand macro="max_features"/>
                    <expand macro="max_depth"/>
                    <expand macro="min_samples_split"/>
                    <expand macro="min_samples_leaf"/>
                    <expand macro="min_weight_fraction_leaf"/>
                    <expand macro="max_leaf_nodes"/>
                    <expand macro="bootstrap"/>
                    <expand macro="warm_start" checked="false"/>
                    <expand macro="random_state"/>
                    <expand macro="oob_score"/>
                </section>
            </when>
            <when value="AdaBoostRegressor">
                <expand macro="sl_mixed_input"/>
                <section name="options" title="Advanced Options" expanded="False">
                    <expand macro="infile_model" label="Select a base estimator" help="The boosted ensemble is built from this model (supported format .zip)."/>
                    <expand macro="n_estimators" default_value="50"/>
                    <expand macro="learning_rate"/>
                    <param argument="loss" type="select" label="Loss function"  optional="true" help="Used when updating the weights after each boosting iteration. ">
                        <option value="linear" selected="true">linear</option>
                        <option value="square">square</option>
                        <option value="exponential">exponential</option>
                    </param>
                    <expand macro="random_state"/>
                </section>
            </when>
            <!--when value="GradientBoostingRegressor">
                <expand macro="sample_cols">
                <section name="options" title="Advanced Options" expanded="False">
                    <loss='ls', learning_rate=0.1, n_estimators=100, subsample=1.0, min_samples_split=2, min_samples_leaf=1, min_weight_fraction_leaf=0.0, max_depth=3, init=None, random_state=None, max_features=None, alpha=0.9, verbose=0, max_leaf_nodes=None, warm_start=False, presort='auto'>
                </section>
            </when-->
            <!--when value="ExtraTreesRegressor">
                <expand macro="sl_mixed_input"/>
                <section name="options" title="Advanced Options" expanded="False">
                    <n_estimators=10, criterion='mse', max_depth=None, min_samples_split=2, min_samples_leaf=1, min_weight_fraction_leaf=0.0, max_features='auto', max_leaf_nodes=None, bootstrap=False, oob_score=False, random_state=None, warm_start=False>
                </section>
            </when-->
            <!--when value="BaggingRegressor">
                <expand macro="sl_mixed_input"/>
                <section name="options" title="Advanced Options" expanded="False">
                    <base_estimator=None, n_estimators=10, max_samples=1.0, max_features=1.0, bootstrap=True, bootstrap_features=False, oob_score=False, warm_start=False, random_state=None>
                </section>
            </when-->
        </expand>
    </inputs>
    <outputs>
        <data name="outfile"/>
    </outputs>
    <tests>
        <test>
            <param name="infile_train" value="train.tabular" ftype="tabular"/>
            <param name="selected_task" value="train"/>
            <param name="selected_algorithm" value="LinearDiscriminantAnalysis"/>
            <param name="solver" value="svd" />
            <param name="store_covariances" value="True"/>
            <output name="outfile" file="lda_model01" compare="sim_size" delta="500"/>
        </test>
        <test>
            <param name="infile_train" value="train.tabular" ftype="tabular"/>
            <param name="selected_task" value="train"/>
            <param name="selected_algorithm" value="LinearDiscriminantAnalysis"/>
            <param name="solver" value="lsqr"/>
            <output name="outfile" file="lda_model02" compare="sim_size" delta="500"/>
        </test>
        <test>
            <param name="infile_train" value="train.tabular" ftype="tabular"/>
            <param name="selected_task" value="train"/>
            <param name="selected_algorithm" value="QuadraticAnalysis"/>
            <output name="outfile" file="qda_model01" compare="sim_size" delta="500"/>
        </test>
        <test>
            <param name="infile_model" value="lda_model01" ftype="zip"/>
            <param name="infile_data" value="test.tabular" ftype="tabular"/>
            <param name="selected_task" value="load"/>
            <output name="outfile" file="lda_prediction_result01.tabular"/>
        </test>
        <test>
            <param name="infile_model" value="lda_model02" ftype="zip"/>
            <param name="infile_data" value="test.tabular" ftype="tabular"/>
            <param name="selected_task" value="load"/>
            <output name="outfile" file="lda_prediction_result02.tabular"/>
        </test>
        <test>
            <param name="infile_model" value="qda_model01" ftype="zip"/>
            <param name="infile_data" value="test.tabular" ftype="tabular"/>
            <param name="selected_task" value="load"/>
            <output name="outfile" file="qda_prediction_result01.tabular"/>
        </test>
    </tests>
    <help><![CDATA[
**What it does**

    ]]></help>
    <expand macro="sklearn_citation"/>
</tool>
