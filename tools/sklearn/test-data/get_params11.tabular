	Parameter	Value
*	memory	memory: None
*	steps	"steps: [('editednearestneighbours', EditedNearestNeighbours(kind_sel='all', n_jobs=1, n_neighbors=3,
            random_state=None, ratio=None, return_indices=False,
            sampling_strategy='auto')), ('randomforestclassifier', RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators='warn', n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False))]"
@	editednearestneighbours	"editednearestneighbours: EditedNearestNeighbours(kind_sel='all', n_jobs=1, n_neighbors=3,
            random_state=None, ratio=None, return_indices=False,
            sampling_strategy='auto')"
@	randomforestclassifier	"randomforestclassifier: RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
            max_depth=None, max_features='auto', max_leaf_nodes=None,
            min_impurity_decrease=0.0, min_impurity_split=None,
            min_samples_leaf=1, min_samples_split=2,
            min_weight_fraction_leaf=0.0, n_estimators='warn', n_jobs=1,
            oob_score=False, random_state=None, verbose=0,
            warm_start=False)"
@	editednearestneighbours__kind_sel	editednearestneighbours__kind_sel: 'all'
*	editednearestneighbours__n_jobs	editednearestneighbours__n_jobs: 1
@	editednearestneighbours__n_neighbors	editednearestneighbours__n_neighbors: 3
@	editednearestneighbours__random_state	editednearestneighbours__random_state: None
@	editednearestneighbours__ratio	editednearestneighbours__ratio: None
@	editednearestneighbours__return_indices	editednearestneighbours__return_indices: False
@	editednearestneighbours__sampling_strategy	editednearestneighbours__sampling_strategy: 'auto'
@	randomforestclassifier__bootstrap	randomforestclassifier__bootstrap: True
@	randomforestclassifier__class_weight	randomforestclassifier__class_weight: None
@	randomforestclassifier__criterion	randomforestclassifier__criterion: 'gini'
@	randomforestclassifier__max_depth	randomforestclassifier__max_depth: None
@	randomforestclassifier__max_features	randomforestclassifier__max_features: 'auto'
@	randomforestclassifier__max_leaf_nodes	randomforestclassifier__max_leaf_nodes: None
@	randomforestclassifier__min_impurity_decrease	randomforestclassifier__min_impurity_decrease: 0.0
@	randomforestclassifier__min_impurity_split	randomforestclassifier__min_impurity_split: None
@	randomforestclassifier__min_samples_leaf	randomforestclassifier__min_samples_leaf: 1
@	randomforestclassifier__min_samples_split	randomforestclassifier__min_samples_split: 2
@	randomforestclassifier__min_weight_fraction_leaf	randomforestclassifier__min_weight_fraction_leaf: 0.0
@	randomforestclassifier__n_estimators	randomforestclassifier__n_estimators: 'warn'
*	randomforestclassifier__n_jobs	randomforestclassifier__n_jobs: 1
@	randomforestclassifier__oob_score	randomforestclassifier__oob_score: False
@	randomforestclassifier__random_state	randomforestclassifier__random_state: None
*	randomforestclassifier__verbose	randomforestclassifier__verbose: 0
@	randomforestclassifier__warm_start	randomforestclassifier__warm_start: False
	Note:	@, searchable params in searchcv too.
