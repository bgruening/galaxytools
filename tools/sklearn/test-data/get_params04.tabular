	Parameter	Value
*	memory	memory: None
*	steps	"steps: [('selectfrommodel', SelectFromModel(estimator=AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None,
          learning_rate=1.0, n_estimators=50, random_state=None),
        max_features=None, norm_order=1, prefit=False, threshold=None)), ('linearsvc', LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=1000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0))]"
@	selectfrommodel	"selectfrommodel: SelectFromModel(estimator=AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None,
          learning_rate=1.0, n_estimators=50, random_state=None),
        max_features=None, norm_order=1, prefit=False, threshold=None)"
@	linearsvc	"linearsvc: LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=1000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0)"
@	selectfrommodel__estimator__algorithm	selectfrommodel__estimator__algorithm: 'SAMME.R'
@	selectfrommodel__estimator__base_estimator	selectfrommodel__estimator__base_estimator: None
@	selectfrommodel__estimator__learning_rate	selectfrommodel__estimator__learning_rate: 1.0
@	selectfrommodel__estimator__n_estimators	selectfrommodel__estimator__n_estimators: 50
@	selectfrommodel__estimator__random_state	selectfrommodel__estimator__random_state: None
@	selectfrommodel__estimator	"selectfrommodel__estimator: AdaBoostClassifier(algorithm='SAMME.R', base_estimator=None,
          learning_rate=1.0, n_estimators=50, random_state=None)"
@	selectfrommodel__max_features	selectfrommodel__max_features: None
@	selectfrommodel__norm_order	selectfrommodel__norm_order: 1
@	selectfrommodel__prefit	selectfrommodel__prefit: False
@	selectfrommodel__threshold	selectfrommodel__threshold: None
@	linearsvc__C	linearsvc__C: 1.0
@	linearsvc__class_weight	linearsvc__class_weight: None
@	linearsvc__dual	linearsvc__dual: True
@	linearsvc__fit_intercept	linearsvc__fit_intercept: True
@	linearsvc__intercept_scaling	linearsvc__intercept_scaling: 1
@	linearsvc__loss	linearsvc__loss: 'squared_hinge'
@	linearsvc__max_iter	linearsvc__max_iter: 1000
@	linearsvc__multi_class	linearsvc__multi_class: 'ovr'
@	linearsvc__penalty	linearsvc__penalty: 'l2'
@	linearsvc__random_state	linearsvc__random_state: None
@	linearsvc__tol	linearsvc__tol: 0.0001
*	linearsvc__verbose	linearsvc__verbose: 0
	Note:	@, searchable params in searchcv too.
