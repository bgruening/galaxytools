<tool id="sklearn_clf_metrics" name="Classification Metrics" version="@VERSION@">
    <description></description>
    <macros>
        <import>main_macros.xml</import>
    </macros>
    <expand macro="python_requirements"/>
    <expand macro="macro_stdio"/>
    <version_command>echo "@VERSION@"</version_command>
    <command>
        <![CDATA[
        python "$clf_metrics_script" '$inputs'
        ]]>
    </command>
    <configfiles>
        <inputs name="inputs" />
        <configfile name="clf_metrics_script">
            <![CDATA[
import sys
import json
import pandas
import numpy as np
from sklearn import metrics

input_json_path = sys.argv[1]
params = json.load(open(input_json_path, "r"))

my_function = getattr(datasets, params["sample_generators"]["selected_metric"])
options = params["sample_generators"]["options"]
my_points, my_targets = my_function(**options)

points_df = pandas.DataFrame(my_points)
targets_df = pandas.DataFrame(my_targets)
res = pandas.concat([points_df, targets_df], axis=1)
res.to_csv(path_or_buf = "$outfile", sep="\t", index=False)

            ]]>
        </configfile>
    </configfiles>
    <inputs>
        <conditional name="clf_metrics">
            <param name="selected_metric" type="select" label="Select a metric:">
                <option value="matthews_corrcoef" selected="true">Matthews correlation coefficient (MCC) for binary classes</option>
                <option value="precision_recall_curve">Precision-recall pairs for different probability thresholds</option>
                <option value="roc_curve">Receiver operating characteristic (ROC)</option>
                <option value="confusion_matrix">Confusion matrix (evaluate the accuracy of a classification)</option>
                <option value="hinge_loss">Average hinge loss (non-regularized)</option>
                <option value="accuracy_score">Accuracy classification score</option>
                <option value="classification_report">Text report of the main classification metrics</option>
                <option value="f1_score">F1 score (aka balanced F-score or F-measure)</option>
                <option value="fbeta_score">F-beta score</option>
                <option value="hamming_loss">Average Hamming loss</option>
                <option value="jaccard_similarity_score">Jaccard similarity coefficient score</option>
                <option value="log_loss">Log loss (aka logistic loss or cross-entropy loss)</option>
                <option value="precision_recall_fscore_support">Compute precision, recall, F-measure and support for each class</option>
                <option value="precision_score">Precision</option>
                <option value="recall_score">Recall</option>
                <option value="zero_one_loss">Zero-one classification loss</option>
                <option value="average_precision_score">Average precision (AP) from prediction scores</option>
                <option value="roc_auc_score">Area Under the Curve (AUC) from prediction scores</option>
            </param>
                <!--xml name="sample_cols" token_label1="File containing true class labels:" token_label2="File containing predicted class labels:" token_multiple1="False" token_multiple2="False" token_format1="tabular" token_format2="tabular" token_help1="" token_help2="">
                <param name="infile1" type="data" format="@FORMAT1@" label="@LABEL1@" help="@HELP1@"/>
                <param name="col1" multiple="@MULTIPLE1@" type="data_column" data_ref="infile1" label="Select target column(s):"/>
                <param name="infile2" type="data" format="@FORMAT2@" label="@LABEL2@" help="@HELP2@"/>
                <param name="col2" multiple="@MULTIPLE2@" type="data_column" data_ref="infile1" label="Select target column(s):"/>
                <yield/>
                </xml-->
            <when value="matthews_corrcoef">
                <section name="options" title="Advanced Options" expanded="False">
                    <expand macro="sample_cols"/>
                </section>
            </when>
            <when value="precision_recall_curve">
                <section name="options" title="Advanced Options" expanded="False">
                    <expand macro="sample_cols" label2="File containing estimated class probabilities:"/>
                    <expand macro="pos_label"/>
                    <!--sample_weight-->
                </section>
            </when>
            <when value="roc_curve">
                <section name="options" title="Advanced Options" expanded="False">
                    <expand macro="sample_cols" label2="File containing probability estimates of the positive class or confidence values:"/>
                    <!--sample_weight-->
                    <expand macro="pos_label"/>
                    <param argument="drop_intermediate" type="boolean" optional="true" truevalue="booltrue" falsevalue="boolflase" checked="true" label=" Drop suboptimal thresholds" help="This is useful in order to create lighter ROC curves. "/>
                </section>
            </when>
            <when value="confusion_matrix">
                <section name="options" title="Advanced Options" expanded="False">
                    <expand macro="sample_cols"/>
                    <!--labels-->
                </section>
            </when>
            <when value="hinge_loss">
                <section name="options" title="Advanced Options" expanded="False">
                    <expand macro="sample_cols" label2="File containing predicted decisions:" multiple2="True"/>
                    <!--labels-->
                    <!--sample_weight-->
                </section>
            </when>
            <when value="accuracy_score">
                <section name="options" title="Advanced Options" expanded="False" format1="tabular,txt" format2="tabular,txt">
                    <expand macro="sample_cols" help1="Note: This method applies to both tabular and sparse data." help2="Note: This method applies to both tabular and sparse data." format1="tabular,txt" format2="tabular,txt"/>
                    <!--sample_weight-->
                    <param argument="normalize" type="boolean" optional="true" truevalue="booltrue" falsevalue="boolflase" checked="true" label="Normalize" help="If false, returns the number of correctly classified samples. Otherwise, returns the fraction of correctly classified samples. "/>
                </section>
            </when>
            <when value="classification_report">
                <section name="options" title="Advanced Options" expanded="False">
                    <expand macro="sample_cols" help1="Note: This method applies to both tabular and sparse data." help2="Note: This method applies to both tabular and sparse data." format1="tabular,txt" format2="tabular,txt"/>
                    <!--labels-->
                    <!--target_names-->
                    <!--sample_weight-->
                    <param argument="digits" type="integer" value="2" label="Number of digits for formatting output floating point values" help=""/>
                </section>
            </when>
            <when value="f1_score">
                <section name="options" title="Advanced Options" expanded="False">
                    <expand macro="sample_cols" help1="Note: This method applies to both tabular and sparse data." help2="Note: This method applies to both tabular and sparse data." format1="tabular,txt" format2="tabular,txt"/>
                    <!--labels-->
                    <!--sample_weight-->
                    <expand macro="pos_label" default_value="1"/>
                    <expand macro="average"/>
                </section>
            </when>
            <when value="fbeta_score">
                <section name="options" title="Advanced Options" expanded="False">
                    <expand macro="sample_cols" help1="Note: This method applies to both tabular and sparse data." help2="Note: This method applies to both tabular and sparse data." format1="tabular,txt" format2="tabular,txt"/>
                    <expand macro="beta"/>
                    <!--labels-->
                    <!--sample_weight-->
                    <expand macro="pos_label" default_value="1"/>
                    <expand macro="average"/>
                </section>
            </when>
            <when value="hamming_loss">
                <section name="options" title="Advanced Options" expanded="False">
                    <expand macro="sample_cols" help1="Note: This method applies to both tabular and sparse data." help2="Note: This method applies to both tabular and sparse data." format1="tabular,txt" format2="tabular,txt"/>
                    <!--classes-->
                </section>
            </when>
            <when value="jaccard_similarity_score">
                <section name="options" title="Advanced Options" expanded="False">
                    <expand macro="sample_cols" help1="Note: This method applies to both tabular and sparse data." help2="Note: This method applies to both tabular and sparse data." format1="tabular,txt" format2="tabular,txt"/>
                    <param argument="normalize" type="boolean" optional="true" truevalue="booltrue" falsevalue="boolflase" checked="true" label="Normalize" help="If false, returns the sum of the Jaccard similarity coefficient over the sample set. Otherwise, returns the average of Jaccard similarity coefficient. "/>
                </section>
            </when>
            <when value="log_loss">
                <section name="options" title="Advanced Options" expanded="False">
                    <expand macro="sample_cols" label2="File containing predicted decisions:" multiple2="True"/>
                    <!--sample_weight-->
                    <param argument="eps" type="float" value="1e-15" label="Clipping factor" help="Log loss is undefined for p=0 or p=1, so probabilities are     clipped to max(eps, min(1 - eps, p)). "/>
                    <param argument="normalize" type="boolean" optional="true" truevalue="booltrue" falsevalue="boolflase" checked="true" label="Normalize" help="If true, returns the mean loss per sample. Otherwise, returns the sum of the per-sample losses. "/>
                </section>
            </when>
            <when value="precision_recall_fscore_support">
                <section name="options" title="Advanced Options" expanded="False">
                    <expand macro="sample_cols" help1="Note: This method applies to both tabular and sparse data." help2="Note: This method applies to both tabular and sparse data." format1="tabular,txt" format2="tabular,txt"/>
                    <expand macro="beta"/>
                    <!--labels-->
                    <!--sample_weight-->
                    <!--warn_for-->
                    <expand macro="pos_label" default_value="1"/>
                    <expand macro="average"/>
                </section>
            </when>
            <when value="precision_score">
                <section name="options" title="Advanced Options" expanded="False">
                    <expand macro="sample_cols" help1="Note: This method applies to both tabular and sparse data." help2="Note: This method applies to both tabular and sparse data." format1="tabular,txt" format2="tabular,txt"/>
                    <!--labels-->
                    <!--sample_weight-->
                    <expand macro="pos_label" default_value="1"/>
                    <expand macro="average"/>
                </section>
            </when>
            <when value="recall_score">
                <section name="options" title="Advanced Options" expanded="False">
                    <expand macro="sample_cols" help1="Note: This method applies to both tabular and sparse data." help2="Note: This method applies to both tabular and sparse data." format1="tabular,txt" format2="tabular,txt"/>
                    <!--labels-->
                    <!--sample_weight-->
                    <expand macro="pos_label" default_value="1"/>
                    <expand macro="average"/>
                </section>
            </when>
            <when value="zero_one_loss">
                <section name="options" title="Advanced Options" expanded="False">
                    <expand macro="sample_cols" help1="Note: This method applies to both tabular and sparse data." help2="Note: This method applies to both tabular and sparse data." format1="tabular,txt" format2="tabular,txt"/>
                    <!--sample_weight-->
                    <param argument="normalize" type="boolean" optional="true" truevalue="booltrue" falsevalue="boolflase" checked="true" label="Normalize" help="If false, returns the number of misclassifications. Otherwise, returns the fraction of misclassifications. "/>
                </section>
            </when>
            <!--when value="average_precision_score">
                <section name="options" title="Advanced Options" expanded="False">
                    <expand macro="sample_cols" label1="File containing true binary labels:" label2="File containing target scores (probability estimates of the positive class, confidence values, or binary decisions):" multiple2="True"/>
                    <average='macro', sample_weight=None>
                </section>
            </when-->
            <when value="roc_auc_score">
                <section name="options" title="Advanced Options" expanded="False">
                </section>
            </when>
        </conditional>
    </inputs>
    <outputs>
        <data format="tabular" name="outfile"/>
    </outputs>
    <tests>
        <test>
            <param name="selected_metric" value="make_blobs"/>
            <param name="random_state" value="100"/>
            <output name="outfile" file="blobs.txt"/>
        </test>
        <test>
            <param name="selected_metric" value="make_classification"/>
            <param name="random_state" value="100"/>
            <output name="outfile" file="class.txt"/>
        </test>
        <test>
            <param name="selected_metric" value="make_circles"/>
            <param name="random_state" value="100"/>
            <output name="outfile" file="circles.txt"/>
        </test>
        <test>
            <param name="selected_metric" value="make_friedman1"/>
            <param name="random_state" value="100"/>
            <output name="outfile" file="friedman1.txt"/>
        </test>
        <test>
            <param name="selected_metric" value="make_friedman2"/>
            <param name="random_state" value="100"/>
            <output name="outfile" file="friedman2.txt"/>
        </test>
        <test>
            <param name="selected_metric" value="make_friedman3"/>
            <param name="random_state" value="100"/>
            <output name="outfile" file="friedman3.txt"/>
        </test>
        <test>
            <param name="selected_metric" value="make_gaussian_quantiles"/>
            <param name="random_state" value="100"/>
            <output name="outfile" file="gaus.txt"/>
        </test>
        <test>
            <param name="selected_metric" value="make_hastie_10_2"/>
            <param name="random_state" value="100"/>
            <output name="outfile" file="hastie.txt" compare="contains"/>
        </test>
        <test>
            <param name="selected_metric" value="make_moons"/>
            <param name="random_state" value="100"/>
            <output name="outfile" file="moons.txt"/>
        </test>
        <test>
            <param name="selected_metric" value="make_regression"/>
            <param name="random_state" value="100"/>
            <output name="outfile" file="regression.txt"/>
        </test>
        <test>
            <param name="selected_metric" value="make_s_curve"/>
            <param name="random_state" value="100"/>
            <output name="outfile" file="scurve.txt"/>
        </test>
        <test>
            <param name="selected_metric" value="make_sparse_uncorrelated"/>
            <param name="random_state" value="100"/>
            <output name="outfile" file="sparse_u.txt"/>
        </test>
        <test>
            <param name="selected_metric" value="make_swiss_roll"/>
            <param name="random_state" value="100"/>
            <output name="outfile" file="swiss_r.txt"/>
        </test>
    </tests>
    <help>
        <![CDATA[
**What it does**
        ]]>
    </help>
    <expand macro="sklearn_citation"/>
</tool>
