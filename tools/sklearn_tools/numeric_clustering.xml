<tool id="sklear_numeric_clustering" name="Numeric Clustering" version="@VERSION@">
    <description></description>
    <expand macro="python_requirements"/>
    <expand macro="macro_stdio"/>
    <macros>
        <import>main_macros.xml</import>
        <macro name="n_init" token_default_value="10">
            <param argument="n_init" type="integer" optional="true" value="10" label="Number of runs with different centroid seeds" help="default value is @DEFAULT_VALUE@ "/>
        </macro>
        <macro name="max_iter" token_default_value="300">
            <param argument="max_iter" type="integer" optional="true" value="300" label="Maximum number of iterations per single run" help="default value is @DEFAULT_VALUE@"/>
        </macro>
        <macro name="random_state">
            <param argument="random_state" type="integer" optional="true" value="" label="Initialize centers" help="The generator used to initialize the centers. If an integer is given, it fixes the seed. Defaults to the global numpy random number generator."/>
        </macro>
        <macro name="affinity">
            <param argument="affinity" type="select" label="Affinity" help="Metric used to compute the linkage. If linkage is ''ward'', only ''euclidean'' is accepted.">
                <option value="euclidean">Euclidean</option>
                <option value="manhattan">Manhattan</option>
                <option value="l1">L1</option>
                <option value="l2">L2</option>
                <option value="cosine">cosine</option>
                <option value="precomputed">precomputed</option>
            </param>
        </macro>
        <macro name="init">
            <param argument="init" type="select" label="Centroid initialization method"  help="''k-means++'' selects initial cluster centers that speed up convergence. ''random'' chooses k observations (rows) at random from data as initial centroids.">
                <option value="k-means++">k-means++</option>
                <option value="random">random</option>
            </param>
        </macro>
    </macros>
    <version_command>echo "@VERSION@"</version_command>
    <command><![CDATA[
    python "$cluster_script" '$inputs'
]]>
    </command>
    <configfiles>
        <inputs name="inputs"/>
        <configfile name="cluster_script">
<![CDATA[
import sys
import json
import numpy as np
import sklearn.cluster
import pandas
from sklearn import metrics

input_json_path = sys.argv[1]
params = json.load(open(input_json_path, "r"))

print params

data = pandas.read_csv("$infile", sep='\t', header=0, index_col=None, parse_dates=True, encoding=None, tupleize_cols=False )
my_class = getattr(sklearn.cluster, params["algorithm_options"]["selected_algorithm"])
cluster_object = my_class()
options = params["algorithm_options"]["options"]
cluster_object.set_params(**options)

#if $end_column and $start_column:
if  $end_column >= $start_column:
    data_matrix = data.values[:, $start_column-1:$end_column]
else:
    data_matrix = data.values
#else:
data_matrix = data.values
#end if

prediction = cluster_object.fit_predict( data_matrix )

if len(np.unique(prediction)) > 1:
    silhouette_score = metrics.silhouette_score(data_matrix,prediction,metric='euclidean')
else:
    silhouette_score = -1
sys.stdout.write('silhouette score:' + '\t' + str(silhouette_score) + '\n')

prediction_df = pandas.DataFrame(prediction)
res = pandas.concat([data, prediction_df], axis=1)
res.to_csv(path_or_buf = "$outfile", sep="\t", index=False)
]]>
        </configfile>
    </configfiles>
    <inputs>
        <param name="infile" type="data" format="tabular" label="Data file with numeric values"/>
        <param name="start_column" type="data_column" data_ref="infile" optional="True" label="Select a subset of data. Start column:" />
        <param name="end_column" type="data_column" data_ref="infile" optional="True" label="End column:" />
        <conditional name="algorithm_options">
            <param name="selected_algorithm" type="select" label="Clustering Algorithm">
                <option value="AgglomerativeClustering">Hierarchical Agglomerative Clustering</option>
                <option value="AffinityPropagation">Affinity Propagation</option>
                <option value="SpectralClustering">Spectral Clustering</option>
                <option value="MiniBatchKMeans">Mini Batch KMeans</option>
                <option value="MeanShift">MeanShift</option>
                <option value="KMeans">KMeans</option>
                <option value="DBSCAN">DBSCAN</option>
                <option value="Birch">Birch</option>
            </param>
            <when value="KMeans">
                <section name="options" title="Advanced Options" expanded="False">
                    <expand macro="n_clusters"/>
                    <expand macro="init"/>
                    <expand macro="n_init"/>
                    <expand macro="max_iter"/>
                    <expand macro="tol" default_value="0.0001" help_text="Relative tolerance with regards to inertia to declare convergence."/>
                    <!--param argument="precompute_distances" type="text" optional="true" value="" label="Precompute distances" help=""/-->
                    <expand macro="random_state"/>
                    <param argument="copy_x" type="boolean" optional="true" truevalue="booltrue" falsevalue="boolflase" checked="true" label="Use a copy of data for precomputing distances" help="Mofifying the original data introduces small numerical differences caused by subtracting and then adding the data mean."/>
                </section>
            </when>
            <when value="DBSCAN">
                <section name="options" title="Advanced Options" expanded="False">
                    <param argument="eps" type="float" optional="true" value="0.5" label="Maximum neighborhood distance" help="The maximum distance between two samples for them to be considered as in the same neighborhood."/>
                    <param argument="min_samples" type="integer" optional="true" value="5" label="Minimal core point density" help="The number of samples (or total weight) in a neighborhood for a point (including the point itself) to be considered as a core point."/>
                    <param argument="metric" type="text" optional="true" value="euclidean" label="Metric" help="The metric to use when calculating distance between instances in a feature array."/>
                    <param argument="algorithm" type="select" optional="true" value="auto" label="Pointwise distance computation algorithm" help="The algorithm to be used by the NearestNeighbors module to compute pointwise distances and find nearest neighbors.">
                        <option value="auto">auto</option>
                        <option value="ball_tree">ball_tree</option>
                        <option value="kd_tree">kd_tree</option>
                        <option value="brute">brute</option>
                    </param>
                    <param argument="leaf_size" type="integer" optional="true" value="30" label="Leaf size" help="Leaf size passed to BallTree or cKDTree. Memory and time efficieny factor in tree constrution and querying."/>
                </section>
            </when>
            <when value="Birch">
                <section name="options" title="Advanced Options" expanded="False">
                    <param argument="threshold" type="float" optional="true" value="0.5" label="Subcluster radius threshold" help="The radius of the subcluster obtained by merging a new sample; the closest subcluster should be less than the threshold to avoid a new subcluster."/>
                    <param argument="branching_factor" type="integer" optional="true" value="50" label="Maximum number of subclusters per branch" help="Maximum number of CF subclusters in each node."/>
                    <expand macro="n_clusters" default_value="3"/>
                    <!--param argument="compute_labels" type="boolean" optional="true" truevalue="true" falsevale="false" label="Compute labels for each fit"/-->
                </section>
            </when>
            <when value="AffinityPropagation">
                <section name="options" title="Advanced Options" expanded="False">
                    <param argument="damping" type="float" optional="true" value="0.5" label="Damping factor" help="Damping factor between 0.5 and 1."/>
                    <expand macro="max_iter"/> <!--default to 200 -->
                    <param argument="convergence_iter" type="integer" optional="true" value="15" label="Number of iterations at each convergence step" help="Number of iterations with no change in the number of estimated clusters that stops the convergence."/>
                    <param argument="copy" type="boolean" optional="true" truevalue="booltrue" falsevalue="boolflase" checked="true" label="Copy" help="If False, the affinity matrix is modified inplace by the algorithm, for memory efficiency."/> 
                    <!--param argument="preference" type="text" optional="true" value="None" label="Array like shape (n_samples,)"/-->
                    <param argument="affinity" type="select" label="Affinity" help="Affinity to use; euclidean uses the negative squared euclidean distance between points.">
                        <option value="euclidean">Euclidean</option>
                        <option value="precomputed">precomputed</option>
                    </param>
                </section>
            </when>
            <when value="MeanShift">
                <section name="options" title="Advanced Options" expanded="False">
                    <param argument="bandwidth" type="float" optional="true" value="" label="Kernel bandwidth" help="Bandwidth used in the RBF kernel. If not given, it will be computed using a heuristic based on the median of all pairwise distances."/>
                    <!--param argument="seeds" type="list" optional="true" value="None" label=""/-->
                    <param argument="bin_seeding" type="boolean" optional="true" truevalue="booltrue" falsevalue="boolflase" checked="true" label="Discretize initial kernel locations" help="If true, initial kernel locations are the bins grid whose coarseness corresponds to the bandwidth, speeding up the algorithm."/>
                    <param argument="min_bin_freq" type="integer" optional="true" value="1" label="Minimum number of seeds per bin" help="To speed up the algorithm, accept only those bins with at least min_bin_freq points as seeds."/>
                    <param argument="cluster_all" type="boolean" optional="true" truevalue="booltrue" falsevalue="boolflase" checked="true" label="Cluster all" help="If true, all points (including orphans) are clustered. If false, orphans are given cluster label -1."/>
                </section>
            </when>
            <when value="AgglomerativeClustering">
                <section name="options" title="Advanced Options" expanded="False">
                    <expand macro="n_clusters" default_value="2" />
                    <expand macro="affinity"/> <!--default = euclidean-->
                    <!--param argument="memory" type="callable" optional="true" value="Memory(cachedir=None)" label="Caching path"/-->
                    <!--param argument="connectivity" type="list array-like or callable" optional="true" value="None" label="Connectivity matrix"/-->
                    <!--param argument="n_components" type="integer" optional="true" value="" label="Number of connected components" help=""/-->
                    <!--param argument="compute_full_tree" type="text or boolean" optional="true" value="auto" label=""/-->
                    <param argument="linkage" type="select" optional="true" label="Linkage" help="">
                        <option value="ward" selected="true">ward</option>
                        <option value="complete">complete</option>
                        <option value="average">average</option>
                    </param>
                    <!--param argument="pooling_func" type="callable" optional="np.mean" value="None" label=""/-->
                </section>
            </when>
            <when value="SpectralClustering">
                <section name="options" title="Advanced Options" expanded="False">
                    <expand macro="n_clusters"/>
                    <param argument="eigen_solver" type="select" value="arpack" label="Eigen solver" help="The eigenvalue decomposition strategy to use.">
                        <option value="arpack">arpack</option>
                        <option value="lobpcg">lobpcg</option>
                        <option value="amg">amg</option>
                        <!--None-->
                    </param>
                    <expand macro="random_state"/>
                    <!-- Todo: extend random_state type to int seed, RandomState instance, or None. -->
                    <expand macro="n_init"/> <!-- default to 10-->
                    <param argument="gamma" type="float" optional="true" value="1.0" label="Kernel scaling factor" help="Scaling factor of RBF, polynomial, exponential chi^2 and sigmoid affinity kernel. Ignored for affinity=''nearest_neighbors''."/>
                    <expand macro="affinity"/> <!--default =rbf-->
                    <param argument="n_neighbors" type="integer" optional="true" value="10" label="Number of neighbors" help="Number of neighbors to use when constructing the affinity matrix using the nearest neighbors method. Ignored for affinity=''rbf''"/>
                    <!--param argument="eigen_tol" type="float" optional="true" value="0.0" label="arpack eigendecomposition stopping threshold"/-->
                    <param argument="assign_labels" type="select" label="Assign labels" help="The strategy to use to assign labels in the embedding space.">
                        <option value="kmeans" selected="true">kmeans</option>
                        <option value="discretize">discretize</option>
                    </param>
                    <param argument="degree" type="integer" optional="true" value="3" label="Degree of the polynomial (polynomial kernel only)" help="Ignored by other kernels. dafault : 3 "/>
                    <param argument="coef0" type="integer" optional="true" value="1" label="Zero coefficient (polynomial and sigmoid kernels only)" help="Ignored by other kernels. dafault : 1 "/>
                    <!--param argument="kernel_params" type="dict" optional="true" value="None" label=""/-->
                </section>
            </when>
            <when value="MiniBatchKMeans">
                <section name="options" title="Advanced Options" expanded="False">
                    <expand macro="n_clusters"/>
                    <expand macro="init"/>
                    <expand macro="n_init"/> <!-- default to 3-->
                    <expand macro="max_iter"/> <!--default to 100-->
                    <expand macro="tol" help_text="Early stopping heuristics based on normalized center change. To disable set to 0.0 ."/> 
                    <expand macro="random_state"/>
                    <param argument="batch_size" type="integer" optional="true" value="100" label="Batch size" help="Size of the mini batches."/>
                    <!--param argument="compute_labels" type="boolean" optional="true" truevalue="true" falsevale="false" label="Compute labels for all data"/-->
                    <param argument="max_no_improvement" type="integer" optional="true" value="10" label="Maximum number of improvement attempts" help="
                    Convergence detection based on inertia (the consecutive number of mini batches that doe not yield an improvement on the smoothed inertia).
                    To disable, set max_no_improvement to None. "/>
                    <param argument="init_size" type="integer" optional="true" value="" label="Number of random initialization samples" help="Number of samples to randomly sample for speeding up the initialization . ( default: 3 * batch_size )"/>
                    <param argument="reassignment_ratio" type="float" optional="true" value="0.01" label="Re-assignment ratio" help="Controls the fraction of the maximum number of counts for a center to be reassigned. Higher values yield better clustering results."/>
                </section>
            </when>
        </conditional>
    </inputs>
    <outputs>
        <data format_source="infile" name="outfile"/>
    </outputs>
    <tests>
        <test>
            <param name="infile" value="numeric_values.tabular" ftype="tabular"/>
            <param name="selected_algorithm" value="KMeans"/>
            <param name="start_column" value="2" />
            <param name="end_column" value="4" />
            <param name="n_clusters" value="4" />
            <param name="init" value="k-means++" />
            <param name="random_state" value="100"/>
            <output name="outfile" file="cluster_result01.txt"/>
        </test>
        <test>
            <param name="infile" value="numeric_values.tabular" ftype="tabular"/>
            <param name="selected_algorithm" value="KMeans"/>
            <param name="start_column" value="2" />
            <param name="end_column" value="4" />
            <param name="n_clusters" value="4" />
            <param name="init" value="random" />
            <param name="random_state" value="100"/>
            <output name="outfile" file="cluster_result02.txt"/>
        </test>
        <test>
            <param name="infile" value="numeric_values.tabular" ftype="tabular"/>
            <param name="selected_algorithm" value="DBSCAN"/>
            <param name="start_column" value="2" />
            <param name="end_column" value="4" />
            <param name="algorithm" value="kd_tree"/>
            <param name="leaf_size" value="10"/>
            <param name="eps" value="1.0"/>
            <output name="outfile" file="cluster_result03.txt"/>
        </test>
        <test>
            <param name="infile" value="numeric_values.tabular" ftype="tabular"/>
            <param name="selected_algorithm" value="Birch"/>
            <param name="start_column" value="2" />
            <param name="end_column" value="4" />
            <param name="n_clusters" value="4"/>
            <param name="threshold" value="0.008"/>
            <output name="outfile" file="cluster_result04.txt"/>
        </test>
        <test>
            <param name="infile" value="numeric_values.tabular" ftype="tabular"/>
            <param name="selected_algorithm" value="Birch"/>
            <param name="start_column" value="2" />
            <param name="end_column" value="4" />
            <param name="branching_factor" value="20"/>
            <output name="outfile" file="cluster_result05.txt"/>
        </test>
        <test>
            <param name="infile" value="numeric_values.tabular" ftype="tabular"/>
            <param name="selected_algorithm" value="AffinityPropagation"/>
            <param name="start_column" value="2" />
            <param name="end_column" value="4" />
            <param name="affinity" value="euclidean"/>
            <param name="copy" value="false"/>
            <output name="outfile" file="cluster_result06.txt"/>
        </test>
        <test>
            <param name="infile" value="numeric_values.tabular" ftype="tabular"/>
            <param name="selected_algorithm" value="AffinityPropagation"/>
            <param name="start_column" value="2" />
            <param name="end_column" value="4" />
            <param name="damping" value="0.8"/>
            <output name="outfile" file="cluster_result07.txt"/>
        </test>
        <test>
            <param name="infile" value="numeric_values.tabular" ftype="tabular"/>
            <param name="selected_algorithm" value="MeanShift"/>
            <param name="start_column" value="2" />
            <param name="end_column" value="4" />
            <param name="min_bin_freq" value="3"/>
            <output name="outfile" file="cluster_result08.txt"/>
        </test>
        <test>
            <param name="infile" value="numeric_values.tabular" ftype="tabular"/>
            <param name="selected_algorithm" value="MeanShift"/>
            <param name="start_column" value="2" />
            <param name="end_column" value="4" />
            <param name="cluster_all" value="False"/>
            <output name="outfile" file="cluster_result09.txt"/>
        </test>
        <test>
            <param name="infile" value="numeric_values.tabular" ftype="tabular"/>
            <param name="selected_algorithm" value="AgglomerativeClustering"/>
            <param name="start_column" value="2" />
            <param name="end_column" value="4" />
            <param name="affinity" value="euclidean"/>
            <param name="linkage" value="average"/>
            <param name="n_clusters" value="4"/>
            <output name="outfile" file="cluster_result10.txt"/>
        </test>
        <test>
            <param name="infile" value="numeric_values.tabular" ftype="tabular"/>
            <param name="selected_algorithm" value="AgglomerativeClustering"/>
            <param name="start_column" value="2" />
            <param name="end_column" value="4" />
            <param name="linkage" value="complete"/>
            <param name="n_clusters" value="4"/>
            <output name="outfile" file="cluster_result11.txt"/>
        </test>
        <test>
            <param name="infile" value="numeric_values.tabular" ftype="tabular"/>
            <param name="selected_algorithm" value="SpectralClustering"/>
            <param name="start_column" value="2" />
            <param name="end_column" value="4" />
            <param name="eigen_solver" value="arpack"/>
            <param name="n_neighbors" value="12"/>
            <param name="n_clusters" value="4"/>
            <param name="assign_labels" value="discretize"/>
            <param name="random_state" value="100"/>
            <output name="outfile" file="cluster_result12.txt"/>
        </test>
        <test>
            <param name="infile" value="numeric_values.tabular" ftype="tabular"/>
            <param name="selected_algorithm" value="SpectralClustering"/>
            <param name="start_column" value="2" />
            <param name="end_column" value="4" />
            <param name="assign_labels" value="discretize"/>
            <param name="random_state" value="100"/>
            <param name="degree" value="2"/>
            <output name="outfile" file="cluster_result13.txt"/>
        </test>
        <test>
            <param name="infile" value="numeric_values.tabular" ftype="tabular"/>
            <param name="selected_algorithm" value="MiniBatchKMeans"/>
            <param name="start_column" value="2" />
            <param name="end_column" value="4" />
            <param name="tol" value="0.5"/>
            <param name="random_state" value="100"/>
            <output name="outfile" file="cluster_result14.txt"/>
        </test>
        <test>
            <param name="infile" value="numeric_values.tabular" ftype="tabular"/>
            <param name="selected_algorithm" value="MiniBatchKMeans"/>
            <param name="n_init" value="5"/>
            <param name="start_column" value="2" />
            <param name="end_column" value="4" />
            <param name="batch_size" value="10"/>
            <param name="n_clusters" value="4"/>
            <param name="random_state" value="100"/>
            <param name="reassignment_ratio" value="1.0"/>
            <output name="outfile" file="cluster_result15.txt"/>
        </test>
        <test>
            <param name="infile" value="numeric_values.tabular" ftype="tabular"/>
            <param name="selected_algorithm" value="KMeans"/>
            <param name="start_column" value="1" />
            <param name="end_column" value="1" />
            <param name="n_clusters" value="4" />
            <param name="random_state" value="100"/>
            <output name="outfile" file="cluster_result16.txt"/>
        </test>
    </tests>
    <help><![CDATA[
**What it does**
This tool offers different clustering algorithms which are provided by
scikit-learn to find similarities among samples and cluster the samples based on these similarities.
    ]]></help>
    <expand macro="sklearn_citation"/>
</tool>