<tool id="sklearn_discriminant_classifier" name="Discriminant Analysis" version="@VERSION@">
    <description></description>
    <macros>
        <import>main_macros.xml</import>
        <!--macro name="priors"-->
    </macros>
    <expand macro="python_requirements"/>
    <expand macro="macro_stdio"/>
    <version_command>echo "@VERSION@"</version_command>
    <command><![CDATA[
    python "$discriminant_script" '$inputs'
]]>
    </command>
    <configfiles>
        <inputs name="inputs"/>
        <configfile name="discriminant_script">
<![CDATA[
import sys
import json
import numpy as np
import sklearn.discriminant_analysis
import pandas
import pickle

input_json_path = sys.argv[1]
params = json.load(open(input_json_path, "r"))


#if $selected_tasks.selected_task == "load":

classifier_object = pickle.load(open("$infile_model", 'r'))

data = pandas.read_csv("$selected_tasks.infile_data", sep='\t', header=0, index_col=None, parse_dates=True, encoding=None, tupleize_cols=False )
prediction = classifier_object.predict(data)
prediction_df = pandas.DataFrame(prediction)
prediction_df.to_csv(path_or_buf = "$outfile", sep="\t", index=False)

#else:

data = pandas.read_csv("$selected_tasks.infile_train", sep='\t', header=0, index_col=None, parse_dates=True, encoding=None, tupleize_cols=False )

labels = pandas.read_csv("$selected_tasks.infile_target", sep='\t', header=0, index_col=None, parse_dates=True, encoding=None, tupleize_cols=False )

options = params["selected_tasks"]["selected_algorithms"]["options"]
selected_algorithm = params["selected_tasks"]["selected_algorithms"]["selected_algorithm"]

my_class = getattr(sklearn.discriminant_analysis, selected_algorithm)
classifier_object = my_class(**options)
classifier_object.fit(data,labels)
pickle.dump(classifier_object,open("$outfile", 'w+'))

#end if
]]>
        </configfile>
    </configfiles>
    <inputs>
        <expand macro="train_loadConditional">
            <param name="selected_algorithm" type="select" label="Classifier type">
                <option value="LinearDiscriminantAnalysis">Linear Discriminant Classifier</option>
                <option value="QuadraticDiscriminantAnalysis">Quadratic Discriminant Classifier</option>
            </param>
            <when value="LinearDiscriminantAnalysis">
                <section name="options" title="Advanced Options" expanded="False">
                    <param argument="solver" type="select" optional="true" label="Solver" help="">
                        <option value="svd" selected="true">Singular Value Decomposition</option>
                        <option value="lsqr">Least Squares Solution</option>
                        <option value="eigen">Eigenvalue Decomposition</option>
                    </param>
                    <!--param name="shrinkage"--> 
                    <!--expand macro="priors"/-->
                    <param argument="n_components" type="integer" optional="true" value="" label="Number of components" help="Number of components for dimensionality reduction. ( always less than  n_classes - 1 )"/>
                    <expand macro="tol" default_value="0.0001" help_text="Rank estimation threshold used in SVD solver."/>
                    <param argument="store_covariance" type="boolean" optional="true" truevalue="booltrue" falsevalue="boolflase" checked="false" label="Store covariance" help="Compute class covariance matrix."/>
                </section>
            </when>
            <when value="QuadraticDiscriminantAnalysis">
                <section name="options" title="Advanced Options" expanded="False">
                    <!--expand macro="priors"/-->
                    <param argument="reg_param" type="float" optional="true" value="0.0" label="Regularization coefficient" help="Covariance estimate regularizer."/>
                    <expand macro="tol" default_value="0.00001" help_text="Rank estimation threshold used in SVD solver."/>
                    <param argument="store_covariances" type="boolean" optional="true" truevalue="booltrue" falsevalue="boolflase" checked="false" label="Store covariances" help="Compute class covariance matrixes."/>
                </section>
            </when>
        </expand>
    </inputs>
    <outputs>
        <data format="txt" name="outfile"/>
    </outputs>
    <tests>
        <test>
            <param name="infile_train" value="train_set.tabular" ftype="tabular"/>
            <param name="selected_task" value="train"/>
            <param name="selected_algorithm" value="LinearDiscriminantAnalysis"/>
            <param name="solver" value="svd" />
            <param name="store_covariances" value="True" />
            <output name="outfile" file="linear_model01.txt"/>
        </test>
        <test>
            <param name="infile_train" value="train_set.tabular" ftype="tabular"/>
            <param name="selected_task" value="train"/>
            <param name="selected_algorithm" value="LinearDiscriminantAnalysis"/>
            <param name="solver" value="lsqr"/>
            <output name="outfile" file="linear_model02.txt"/>
        </test>
        <test>
            <param name="infile_train" value="train_set.tabular" ftype="tabular"/>
            <param name="selected_task" value="train"/>
            <param name="selected_algorithm" value="QuadraticAnalysis"/>
            <output name="outfile" file="quadratic_model01.txt"/>
        </test>
        <test>
            <param name="infile_model" value="linear_model01.txt" ftype="txt"/>
            <param name="infile_data" value="test_set.tabular" ftype="tabular"/>
            <param name="selected_task" value="load"/>
            <output name="outfile" file="linear_prediction_result01.tabular"/>
        </test>
        <test>
            <param name="infile_model" value="linear_model02.txt" ftype="txt"/>
            <param name="infile_data" value="test_set.tabular" ftype="tabular"/>
            <param name="selected_task" value="load"/>
            <output name="outfile" file="linear_prediction_result02.tabular"/>
        </test>
        <test>
            <param name="infile_model" value="quadratic_model01.txt" ftype="txt"/>
            <param name="infile_data" value="test_set.tabular" ftype="tabular"/>
            <param name="selected_task" value="load"/>
            <output name="outfile" file="quad_prediction_result01.tabular"/>
        </test>
    </tests>
    <help><![CDATA[
**What it does**
Linear Discriminant Analysis and Quadratic Discriminant Analysis are two classic classifiers, with, as their names suggest, a linear and a quadratic decision surface, respectively. This module uses sklearn.discriminant_analysis package to implement Discriminant Analysis classification.


    ]]></help>
    <expand macro="sklearn_citation"/>
</tool>