<tool id="eden_protease_prediction" name="Protease prediction" version="@VERSION@">
    <description>based on cleavage sites</description>
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <expand macro="stdio"/>
    <version_command>echo "@VERSION@"</version_command>
    <command><![CDATA[
    python $__tool_directory__/protease.py
    #if $selected_tasks.selected_task == 'fit':
        fit
        -i $selected_tasks.infile_train
        --negative-ratio $selected_tasks.options.negative_ratio
        --shuffle-order $selected_tasks.options.shuffle_order
        -r  $selected_tasks.options.random_state
        -e  $selected_tasks.options.n_iter
        --max-total-time $selected_tasks.options.max_total_time
    #else:
        predict
        -m $selected_tasks.infile_model
        -i $selected_tasks.infile_data
    #end if
]]>
    </command>
    <inputs>
        <expand macro="loadConditional">
            <section name="options" title="Advanced Options" expanded="False">
                <param name="negative_ratio" type="integer" optional="true" value="2" label="Negative to positive instance ratio"
                    help="Relative size ratio for the randomly permuted negative instances w.r.t. the positive instances." />
                <param name="shuffle_order" type="integer" optional="true" value="2" label="Order of k-mer shuffling"
                    help="Order of the k-mer for the random shuffling procedure." />
                <param name="random_state" type="integer" value="1" label="Random seed" help="Integer number. The seed of the pseudo random number generator. A fixed seed allows reproducible results." />
                <param name="n_iter" type="integer" value="1" label="Number of randomly generated hyper parameter configurations" help="Tried during the discriminative model optimization. A value of 1 implies using the estimator default values."/>
                <param name="max_total_time" type="integer" value="-1" label="Maximal number of seconds for the duration of the optimization phase" help="After max_total_time is elapsed, the procedure is forcefully stopped. A value of -1 means no time limit." />
            </section>
        </expand>
    </inputs>
    <outputs>
        <data format="tabular" name="outfile_predict" from_work_dir="out/predictions.txt">
            <filter>selected_tasks['selected_task'] == 'predict'</filter>
        </data>
        <data format="zip" name="outfile_fit" from_work_dir="out/model">
            <filter>selected_tasks['selected_task'] == 'fit'</filter>
        </data>
    </outputs>
    <tests>
        <test>
            <param name="infile_train" value="CTSL_train.fasta" ftype="fasta"/>
            <param name="selected_task" value="fit"/>
            <param name="shuffle_order" value="3"/>
            <param name="n_iter" value="5"/>
            <!--param name="max_total_time" value="60"/-->
            <output name="outfile_fit" file="model" ftype="zip" compare="sim_size" delta="500000"/>
        </test>
        <test>
            <param name="infile_model" value="model" ftype="zip"/>
            <param name="infile_data" value="CTSL_test.fasta" ftype="fasta"/>
            <param name="selected_task" value="predict"/>
            <output name="outfile_predict" file="predictions.txt" ftpye="tabular"/>
        </test>
    </tests>
    <help><![CDATA[
**What it does**

This tool can learn the cleavage specificity of a given class of protease. In a second step this can be used to predict proteases given a cleavage site.
The method assumes that the candidate cleavage point is between the two amino acids adjacent to the central position.
The method is based on an efficient string kernel implemented in the Explicit Decomposition with Neighbourhood (EDeN) library.
This approach uses the notion of k-mers with gaps to enumerate all possible substrings of increasing order which are used as features in an efficient linear binary classification estimator.

**Example Input**

::

  >CTSL1
  SSFVSNWD
  >CTSL1
  SSIQATTA
  >CTSL1
  SSLAGCQI
  >CTSL1
  SSLGGTVV

**Estimator optimization time parameters**
The time spent for optimization phase is controlled by two parameters:

 n_iter : defines the number of hyperparameter configurations used for optimization.

 max_total_time : defines the time in seconds spent in total for optimization.

If both parameters are set, the algorithm would stop at the time lapse which is shorter among these two. 

    ]]></help>
    <expand macro="eden_citation"/>
</tool>
