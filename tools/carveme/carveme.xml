<tool id="CarveMe" name="CarveMe" version="@TOOL_VERSION@+galaxy@VERSION_SUFFIX@" profile="21.05">
    <description>
    Tool to reconstruct genome-scale metabolic models
    </description>
    <macros>
        <token name="@TOOL_VERSION@">1.6.0</token>
        <token name="@VERSION_SUFFIX@">0</token>
        <xml name="biotools">
            <xrefs>
                <xref type="bio.tools">CarveMe</xref>
            </xrefs>
        </xml>
    </macros>
    <requirements>
        <requirement type='package' version="@TOOL_VERSION@">carveme</requirement>
    </requirements>
    <command detect_errors="exit_code"><![CDATA[
    
    carve '$annotation'
    #if $dna
        --dna
    #end if
    #if $egg
        --egg 
    #end if
    #if $fc2
        --fc2 
    #end if
    #if $cobra
        --cobra 
    #end if
    #if $diamond_args
        --diamond-args '$diamond_args'
    #end if
    #if $universe
        --universe '$universe'
    #end if 
    #if $universe_file
        --universe_file '$universe_file'
    #end if
    #if $mediadb
        --mediadb '$mediadb'
    #end if
    #if $soft
        --soft '$soft'
    #end if
    #if $hard
        --hard '$hard'
    #end if
    #if $reference
        --reference '$reference'
    #end if
    --solver scip
    --output "$model" 
    
    
    ]]></command>
    <inputs>
    <param name="annotation" label="Annotation file" type="data" format="data" optional="false" multiple="false"/>
    <param argument="--dna" label="Build from DNA FASTA file" type="boolean" truevalue="--dna" falsevalue="" optional="true"/>
    <param argument="--egg" label="Build from eggNOG-mapper output file"  type="boolean" truevalue="--egg" falsevalue="" optional="true"/>
    <param argument="--fc2" label="Output SBML in sbml-fbc2 format" type="boolean" truevalue="--fc2" falsevalue="" optional="true"/>
    <param argument="--cobra" label="Output SBML in old cobra format" type="boolean" truevalue="--cobra" falsevalue="" optional="true"/>
    <param argument="--diamond-args" label="Additional arguments for running diamond"  type="text" optional="true"/>
    <param argument="--universe" label="Pre-built universe model (default: bacteria)"  type="text" optional="true"/>
    <param argument="--universe_file" label="Reaction universe file (SBML format)"  type="data" format="sbml" optional="true"/>
    <param argument="--mediadb" label="Media database file"  type="data" format="data" optional="true"/>
    <param argument="--soft" label="Soft constraints file"  type="data" format="data" optional="true"/>
    <param argument="--hard" label="Hard constraints file"  type="data" format="data" optional="true"/>
    <param argument="--reference" label="Manually curated model of a close reference species"  type="file" optional="true"/>
    </inputs>
    <outputs>
        <data name="model" format="xml"/>
    </outputs>
    <tests>
        <test>
            <param name="annotation" value="protein.faa"/>
            <output name="model" value="modeltest.xml" ftype='xml' />
        </test>
    </tests>
    <help>

usage: carve [-h] [--dna | --egg ] [--diamond-args DIAMOND_ARGS]
        [-r] [-o OUTPUT] [-u UNIVERSE | --universe-file UNIVERSE_FILE]
        [--cobra | --fbc2] [-n ENSEMBLE] [-g GAPFILL] [-i INIT]
        [--mediadb MEDIADB] [-v] [-d] [--soft SOFT] [--hard HARD]
        [--reference REFERENCE] [--solver SOLVER]
        INPUT [INPUT ...]

Reconstruct a metabolic model using CarveMe

positional arguments:
  INPUT                 Input (protein fasta file by default, see other options for details).
                        When used with -r an input pattern with wildcards can also be used.
                        When used with --refseq an NCBI RefSeq assembly accession is expected.

options:
  -h, --help            show this help message and exit
  --dna                 Build from DNA fasta file
  --egg                 Build from eggNOG-mapper output file
  --diamond-args DIAMOND_ARGS
                        Additional arguments for running diamond
  -r, --recursive       Bulk reconstruction from folder with genome files
  -o OUTPUT, --output OUTPUT
                        SBML output file (or output folder if -r is used)
  -u UNIVERSE, --universe UNIVERSE
                        Pre-built universe model (default: bacteria)
  --universe-file UNIVERSE_FILE
                        Reaction universe file (SBML format)
  --cobra               Output SBML in old cobra format
  --fbc2                Output SBML in sbml-fbc2 format
  -n ENSEMBLE, --ensemble ENSEMBLE
                        Build model ensemble with N models
  -g GAPFILL, --gapfill GAPFILL
                        Gap fill model for given media
  -i INIT, --init INIT  Initialize model with given medium
  --mediadb MEDIADB     Media database file
  -v, --verbose         Switch to verbose mode
  -d, --debug           Debug mode: writes intermediate results into output files
  --soft SOFT           Soft constraints file
  --hard HARD           Hard constraints file
  --reference REFERENCE
                        Manually curated model of a close reference species.
  --solver SOLVER       Select MILP solver. Available options: scip

    </help>
    <citations>
        <citation type="bibtex">
            @article{machado2018fast,
            title={Fast automated reconstruction of genome-scale metabolic models for microbial species and communities},
            author={Machado, Daniel and Andrejev, Sergej and Tramontano, Melanie and Patil, Kiran Raosaheb},
            journal={Nucleic acids research},
            volume={46},
            number={15},
            pages={7542--7553},
            year={2018},
            publisher={Oxford University Press}}
        </citation>
    </citations>    
</tool>
