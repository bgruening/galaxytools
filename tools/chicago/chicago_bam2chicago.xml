<tool id="chicago_bam2chicago" name="Convert BAM2CHiCAGO" version="0.1.0">
    <requirements>
        <requirement type="package" version="1.2.0">Chicago</requirement>
        <requirement type="package" version="1.2.0">chicagotools</requirement>
        <requirement type="package" version="2.24">bedtools</requirement>
        <requirement type="package" version="2.3.1">cran</requirement>
    </requirements>
    <stdio>
        <exit_code range="1:" />
    </stdio>
    <command>
<![CDATA[
        mkdir input_dir
        &&
        ln -s $bamfile input_dir/bamfile
        &&
        ln -s $baitmapfile input_dir/baitmapfile
        &&
        ln -s $digestmapfile input_dir/digestmapfile
        &&
        bam2chicago.sh
          input_dir/bamfile
          input_dir/baitmapfile
          input_dir/digestmapfile
          Output
          #if $nodelete
              $nodelete
          #end if

        &&
        rm -rf input_dir
    ]]></command>
    <inputs>
        <param type="data" name="bamfile" label="Input BAM file" format="bam" />
        <param type="data" name="baitmapfile" label="Input .baitmap file" format="baitmap" />
        <param type="data" name="digestmapfile" label="Input .rmap file" format="rmap" />
        <param argument="-nodelete" type="boolean" value="" optional="True"
          label="Create paired-end bed file" />
    </inputs>
    <outputs>
       <data format="txt" name="chicago_design_files_result">
            <discover_datasets pattern="__designation_and_ext__" visible="true" />
        </data>
    </outputs>
    <tests>
        <test>
            <param name="bamfile" value="toydata.bam" ftype="bam" />
            <param name="baitmapfile" value="toydata.baitmap" ftype="baitmap" />
            <param name="digest_mapfile" value="toydata.rmap" ftype="rmap" />
            <output name="output" file="output.chinput" ftype="chinput" />
        </test>
    </tests>
    <help><![CDATA[
      The Unix shell script bam2chicago.sh takes as input a BAM file corresponding to aligned Capture HiC reads for a single experiment and the capture design files .rmap and .baitmap.
The output is an ASCII .chinput file used as input by the Chicago package.

The BAM file is a paired-end file produced by a HiC aligner; Chicago has only been tested with data produced by HiCUP (http://www.bioinformatics.babraham.ac.uk/projects/hicup/). However, it should theoretically be possible to use other HiC aligners for this purpose.

The formats of the design files (.baitmap and .rmap) are:
**- rmap** file (.rmap): a tab-separated file of the format **<chr> <start> <end> <numeric ID>**, describing the restriction digest (or "virtual digest" if pooled fragments are used). These numeric IDs are referred to as "otherEndID" in Chicago. All fragments mapping outside of the digest coordinates will be disregarded by both these scripts and Chicago.
**- baitmap** file (.baitmap): a tab-separated file of the format **<chr> <start> <end> <numeric ID> <annotation>**, listing the coordinates of the baited/captured restriction fragments (should be a subset of the fragments listed in rmapfile), their numeric ids (should match those listed in rmapfile for the corresponding fragments) and their annotations (such as, for example, the names of baited promoters). The numeric IDs are referred to as "baitID" in Chicago.

The output **.chinput** file has the format **<baitID> <otherEndID> <N> <otherEndLen> <distSign>**, where N is the number of reads detected for ligation products between the "bait" and "other end", otherEndLen is the length of the "other-end" restriction fragment and distSign is the linear distance between the bait and other-end fragments, respectively.

In addition, bam2chicago.sh produces a paired-end bed (**.bedpe**) file that lists all read pairs corresponding to bait-to-bait interactions. This file is not used for Chicago; the rationale for creating it is that bait-to-bait interactions are symmetric and may also be analysed by any HiC normalisation/interaction calling tool (in addition to Chicago) if desired.

The shell script requires a bash-compatible Unix shell, perl and bedtools. Bedtools can be obtained at `https://github.com/arq5x/bedtools2 <https://github.com/arq5x/bedtools2>`_
; they need to be installed and added to $PATH.
    ]]></help>
</tool>
