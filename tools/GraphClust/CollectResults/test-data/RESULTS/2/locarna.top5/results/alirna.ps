%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.2.10
%%CreationDate: Thu Jan 19 13:22:01 2017
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
GGUACUUGAAGGGAGGUUGGCCCUGGU_GCG_UUCGCUUUAUUUAUGACGAAUAUUA_CAGGGCCAAUCUCUUUUCAGUAUC\
) def
/coor [
[81.83493805 464.27673340]
[81.83493805 449.27673340]
[81.83493805 434.27673340]
[81.83493805 419.27673340]
[81.83493805 404.27673340]
[81.83493805 389.27673340]
[78.60521698 382.41769409]
[82.12953949 373.71179199]
[82.69716644 358.72253418]
[83.26478577 343.73327637]
[83.83240509 328.74401855]
[84.40003204 313.75476074]
[84.96765137 298.76550293]
[85.53527832 283.77624512]
[86.10289764 268.78698730]
[86.67051697 253.79774475]
[87.23814392 238.80848694]
[87.80576324 223.81922913]
[88.37338257 208.82997131]
[81.12324524 195.81903076]
[89.37722015 182.32153320]
[89.94484711 167.33227539]
[90.51246643 152.34301758]
[91.08009338 137.35375977]
[91.64771271 122.36450195]
[80.13307953 113.23771667]
[76.14385986 99.09660339]
[81.19113159 85.29768372]
[93.36302948 77.06787872]
[93.93065643 62.07862091]
[94.49827576 47.08936310]
[91.64246368 38.14186096]
[95.38166809 31.54672432]
[96.51610565 16.58968353]
[97.65053558 1.63264263]
[98.78496552 -13.32439804]
[99.63614655 -28.30022812]
[86.92419434 -37.04150009]
[80.97718811 -51.27655029]
[83.69279480 -66.46302795]
[94.20446777 -77.75497437]
[109.15798187 -81.54918671]
[123.78171539 -76.63492584]
[133.40930176 -64.58032990]
[134.96858215 -49.23197174]
[127.96203613 -35.48745346]
[114.62539673 -27.73260689]
[117.59324646 -20.75625992]
[113.74200439 -12.18996716]
[112.60757446 2.76707387]
[111.47314453 17.72411537]
[110.33871460 32.68115616]
[109.48753357 47.65698624]
[108.91990662 62.64624023]
[108.35228729 77.63549805]
[119.86692047 86.76228333]
[123.85614014 100.90339661]
[118.80886841 114.70231628]
[106.63697052 122.93212128]
[106.06934357 137.92138672]
[105.50172424 152.91062927]
[104.93410492 167.89988708]
[104.36647797 182.88914490]
[111.57601929 196.97222900]
[103.36264038 209.39759827]
[102.79502106 224.38685608]
[102.22739410 239.37609863]
[101.65977478 254.36535645]
[101.09215546 269.35461426]
[100.52452850 284.34387207]
[99.95690918 299.33312988]
[99.38928986 314.32238770]
[98.82166290 329.31164551]
[98.25404358 344.30090332]
[97.68642426 359.29016113]
[97.11879730 374.27941895]
[96.83493805 389.27673340]
[96.83493805 404.27673340]
[96.83493805 419.27673340]
[96.83493805 434.27673340]
[96.83493805 449.27673340]
[96.83493805 464.27673340]
] def
/pairs [
[1 82]
[2 81]
[3 80]
[4 79]
[5 78]
[6 77]
[8 76]
[9 75]
[10 74]
[11 73]
[12 72]
[13 71]
[14 70]
[15 69]
[16 68]
[17 67]
[18 66]
[19 65]
[21 63]
[22 62]
[23 61]
[24 60]
[25 59]
[29 55]
[30 54]
[31 53]
[33 52]
[34 51]
[35 50]
[36 49]
[37 47]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% Start Annotations
82 cmark
2 cmark
81 cmark
77 cmark
8 76 1 gmark
76 cmark
9 75 1 gmark
9 cmark
75 cmark
10 74 1 gmark
11 73 1 gmark
73 cmark
12 72 1 gmark
12 cmark
72 cmark
13 cmark
71 cmark
14 70 1 gmark
14 cmark
70 cmark
15 cmark
69 cmark
16 cmark
68 cmark
17 cmark
67 cmark
18 66 1 gmark
18 cmark
66 cmark
19 65 1 gmark
19 cmark
65 cmark
21 cmark
63 cmark
23 cmark
61 cmark
24 cmark
60 cmark
25 cmark
59 cmark
29 55 1 gmark
29 cmark
55 cmark
30 54 1 gmark
30 cmark
54 cmark
31 cmark
53 cmark
52 cmark
34 51 1 gmark
34 cmark
51 cmark
36 49 1 gmark
36 cmark
49 cmark
37 47 1 gmark
37 cmark

% End Annotations
% show it
showpage
end
%%EOF
