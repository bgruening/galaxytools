<tool id="peakachu" name="PEAKachu" version="0.1.0">
    <description>Calls Peaks in CLIP data</description>
    <requirements>
        <requirement type="package" version="0.1.0">peakachu</requirement>
    </requirements>
    <stdio>
        <exit_code range="1:" level="fatal" description="Error occurred. Please check Tool Standard Error" />
        <exit_code range=":-1" level="fatal" description="Error occurred. Please check Tool Standard Error" />
    </stdio>
    <version_command>
    <![CDATA[
        peakachu --version
    ]]>
    </version_command>
    <command>
    <![CDATA[
        #if len($gffs) > 0:
            mkdir gffs &&
            #for $file in $gffs:
                ln -s '$file' gffs/'$file'.gff &&
            #end for
        #end if
        mkdir output && 
        peakachu 
        --exp_libs #experimentLibs
        #if len(#controlLibs) > 0:
            --ctr_libs #controlLibs
        #endif
        $pairwise_replicates
        $paired_end
        --max_insert_size $max_insert_size
        #if len($gffs) > 0:
            --gff_folder gffs
        #end if
        --features '$features'
        --sub_features '$sub_features'
        --max_proc \${GALAXY_SLOTS:-1}
        --output_folder output
        #if str(mode.mode_selector) == 'adaptive':
            --min_cluster_expr_frac $mode.min_cluster_expre_frac
            --min_block_overlap $mode.min_block_overlap
            --min_max_block_expr $mode.min_max_block_expr
        #elif str(mode.mode_selector) == 'window':
            --window_size $mode.window_size
            --step_size $mode.step_size
            --stat_test $mode.stat_test
            --norm_method $mode.norm_method
            --het_p_val_threshold $mode.het_p_val_threshold
            --rep_pair_p_val_threshold $mode.rep_pair_p_val_threshold
        #end if
        --size_factors $size_factors
        --mad_multiplier $mad_multiplier
        --fc_cutoff $fc_cutoff
        --padj_threshold $padj_threshold

        &&
        #head -n 1 `ls output/peak_tables | head -n 1` > peaks.tsv
        #for file in ls `output/peak_tables`; do cat $file >> peaks.tsv


    ]]>
    </command>
    <inputs>
        <param name="experimentLibs" type="data" format="bam" label="Experiment Libraries"/>
        <param name="controlLibs" type="data" format="bam" label="Control Libraries"/>
        <param argument="--pairwise_replicates" type="boolean" truevalue="--pairwise_replicates" falsevalue="" checked="False" label="Pairwise Replicates" /> 
        <param argument="--paired_end" type="boolean" truevalue="--paired_end" falsevalue="" checked="False" label="Paired End" /> 
        <param argument="--max_insert_size" type="integer" value="50" label="Maximum Insert Size"/>
        <param name="gff" type="data" format="gff" label="Annotation"/>
        <param argument="--features" type="text" label="Features"
        
        />

        <conditional name="mode">
            <param name="mode_selector" type="select" label="Select Mode" help="These modes work differently."/>
                <option value="adaptive" selected="True">Adaptive</option>
                <option value="window">Window</option>
                <!-- The following options are not implemented because they are vastly different and should be implemented as their own tool, if need be.
                <option value="coverage">Coverage</option>
                <option value="consensus_peak">Consensus Peak</option-->
            </param>
            <when value="adaptive">
                <param argument="--min_cluster_expr_frac" label="Minimum cluster Expression Fraction" help="Minimum fraction of a block in a cluster for further consideration."/>
                <param argument="--min_block_overlap" label="Minimum Block Overlap" help="Minimum fraction of the width of blocks for merging."/>
                <param argument="--min_max_block_expr" label="Minimum Block Expression" help="Minimum fraction of expression of blocks for merging."/>
                <param name="norm_method" type="select" label="Normalisation Method.">
                    <option value="deseq" selected="True">DESeq2</option>
                    <option value="manual">Manual</option>
                    <option value="none">None</option>
                </param>
            </when>
            <when value="window">
                <param argument="--window_size" label="Window Size"/>
                <param argument="--step_size" label="Step Size"/>
                <param name="stat_test" type="select" label="Statistical Test">
                    <option value="gtest" selected="True">gtest</option>
                    <option value="deseq">DESeq2</option>
                </param>
                <param name="norm_method" type="select" label="Normalisation Method.">
                    <option value="tmm" selected="True">TMM</option>
                    <option value="deseq">DESeq2</option>
                    <option value="count">Count</option>
                    <option value="manual">Manual</option>
                    <option value="none">None</option>
                </param>
                <param argument="--het_p_val_threshold" label="Heterogeneous p-value Threshold"/>
                <param argument="--rep_pair_p_val_threshold" label="Paired p-value Threshold"/>
            </when>
        </conditional>
        <param argument="--mad_multiplier" label="Mad Multiplier" type="float"/>
        <param argument="--fc_cutoff" label="Fold Change Threshold" type="float" label="Fold-Change Threshold"/>
        <param argument="--padj" type="float" label="Adjusted p-value Threshold"/>
        
    </inputs>
    <outputs>
        <data format="tsv" name="peak_tables"/>
    </outputs>
    <tests>
        <test>
            <param name="exp_libs" value="239-Hfq_+XL.bam"/>
            <output name="peak_tables" ftype="tsv" file="out.tsv"/>
        </test>
    </tests>
    <help>
    <![CDATA[
**Peakachu**

calls peaks on CLIP data

    ]]>
    </help>
    <citations>
        <citation type="doi">10.1093/molbev/mst010</citation>
    </citations>
</tool>
