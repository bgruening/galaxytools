<tool id="NSPDK_candidateClust" name="NSPDK_candidateClusters" version="9.2">
   <!--parallelism method="multi" split_inputs="input1" split_mode="to_size" split_size="10" shared_inputs="" merge_outputs="output1, output2"></parallelism-->


   <requirements>
       <requirement type="package" version="0.5">perl-array-utils</requirement>
   </requirements>

    <stdio>
        <exit_code range="1:" />
    </stdio>

    <command>
<![CDATA[



        mkdir -p SVECTOR &&

        cp $data_svector SVECTOR/data.svector &&

        perl '$__tool_directory__/NSPDK_candidateClusters.pl'  '$data_fasta' '$data_names' $noCache $ensf $oc $usn $knn $nhf $nspdk_nhf_max $nspdk_nhf_step $GLOBAL_num_clusters '$__tool_directory__/'

        #if  $iteration_num.iteration_num_selector:
          $iteration_num.CI
          '$blacklist'
          '$final_partition_soft'
          '$fast_cluster_last_round'
          $iteration_num.GLOBAL_hit_blacklist_overlap

        #else:
          1


        #end if

]]>
	</command>
    <inputs>
        <param type="data" name="data_svector" format="txt"  />
        <param type="data" name="data_fasta" format="fasta" />
        <param type="data" name="data_names" format="txt" />


        <conditional name="iteration_num">
            <param name="iteration_num_selector" type="boolean"  checked="no" label="Multiple iterations"  help="for single iteration- NO, for multiple-YES"/>
            <when value="true">

                  <param name="CI" type="integer" value="2" size="5" label="Number of current iteration ">
                   <sanitizer>
                             <valid initial="string.printable">
                                <remove value="&apos;"/>
                             </valid>
                         </sanitizer>
                 </param>
                <param type="data" name="blacklist" format="txt" />
                <param type="data" name="final_partition_soft" format="txt" />

                <param type="data" name="fast_cluster_last_round" format="txt" />

                <param name="GLOBAL_hit_blacklist_overlap" type="float" value="0.2" size="5" label="Blacklist hit overlap" >
                  <sanitizer>
                    <valid initial="string.printable">
                           <remove value="&apos;"/>
                    </valid>
                  </sanitizer>
                 </param>

            </when>
            <when value="false" >
              <param name="CI" type="hidden" value="1" size="5" label="Number of current iteration ">
             </param>
           </when>
        </conditional>


        <param name="noCache" truevalue="-no-cache" falsevalue="" checked="True" type="boolean"
                label="Deactivate caching of kernel value computation  (-no-cache)" help="to minimize memory usage"/>



        <param name="ensf" type="integer" value="5" size="5" label="eccess neighbour size factor" help="-ensf">
			<sanitizer>
                <valid initial="string.printable">
                   <remove value="&apos;"/>
                </valid>
            </sanitizer>
		 </param>



         <param name="usn" truevalue="-usn" falsevalue="" checked="True" type="boolean"
                label="Use shared neighbourhood to weight center density (-usn)" help="by default true"/>
         <param name="oc" truevalue="-oc" falsevalue="" checked="True" type="boolean"
                label=" flag to output clusters (-oc)" help="by default true"/>




		 <param name="knn" type="integer" value="20" size="5" label="Number of nearest neighbors" help="-knn num">
			 <sanitizer>
                  <valid initial="string.printable">
                     <remove value="&apos;"/>
                  </valid>
             </sanitizer>
		 </param>


		 <param name="nhf" type="integer" value="500" size="5" label="Number of hash functions " help="-nhf num">
			 <sanitizer>
                <valid initial="string.printable">
                   <remove value="&apos;"/>
                </valid>
            </sanitizer>
		 </param>


     <param name="nspdk_nhf_max" type="integer" value="1000" size="5" label="Maximal number of hash functions " >
			 <sanitizer>
                <valid initial="string.printable">
                   <remove value="&apos;"/>
                </valid>
            </sanitizer>
		 </param>

     <param name="nspdk_nhf_step" type="integer" value="25" size="5" label="Size of step for increasing hash functions " help="The number of hash functions is increased by this value after each iteration.">
      <sanitizer>
                <valid initial="string.printable">
                   <remove value="&apos;"/>
                </valid>
            </sanitizer>
    </param>

     <param name="GLOBAL_num_clusters" type="integer" value="100" size="5" label="Maxinum number of clusters " >
			 <sanitizer>
                <valid initial="string.printable">
                   <remove value="&apos;"/>
                </valid>
            </sanitizer>
		 </param>




    </inputs>
    <outputs>
        <!--data name="data_svector" format="txt" from_work_dir="SVECTOR/data.svector.1" label="data_svector"  /-->
        <!--data name="$data_svector.$CI.fast_cluster" format="txt" label="fast_cluster.$CI"  />
        <data name="$data_svector.$CI.fast_cluster_sim" format="txt"  label="fast_cluster_sim.1"  /-->

        <data name="fast_cluster" format="txt" from_work_dir="SVECTOR/data.svector.1.fast_cluster" label="fast_cluster.1"  >
          <filter> iteration_num['iteration_num_selector'] is False</filter>
        </data>
        <data name="fast_cluster_sim" format="txt" from_work_dir="SVECTOR/data.svector.1.fast_cluster_sim" label="fast_cluster_sim.1" >
          <filter> iteration_num['iteration_num_selector'] is False </filter>
        </data>

        <data name="black_list" format="txt" from_work_dir="SVECTOR/data.svector.blacklist.1" label="blacklist.1" >
          <filter> iteration_num['iteration_num_selector'] is False </filter>
        </data>


        <data name="fast_cluster_m" format="txt" from_work_dir="SVECTOR/data.svector.*.fast_cluster" label="fast_cluster.$iteration_num.CI"  >
          <filter> iteration_num['iteration_num_selector'] is True</filter>
        </data>
        <data name="fast_cluster_sim_m" format="txt" from_work_dir="SVECTOR/data.svector.*.fast_cluster_sim" label="fast_cluster_sim.$iteration_num.CI" >
          <filter> iteration_num['iteration_num_selector'] is True</filter>
        </data>
        <data name="black_list_m" format="txt" from_work_dir="SVECTOR/data.svector.blacklist.*" label="blacklist.$iteration_num.CI" >
            <filter> iteration_num['iteration_num_selector'] is True</filter>
        </data>

    </outputs>

    <tests>
        <test>
            <param name="data_fasta" value="data.fasta"/>
            <param name="data_names" value="data.names"/>
            <param name="data_svector" value="data.svector"  />

            <conditional name="iteration_num">
               <param name="iteration_num_selector" value="false"/>

           </conditional>

            <param name="noCache" value="-no-cache"/>
            <param name="ensf" value="5"/>
            <param name="oc" value="-oc"/>
            <param name="usn" value="-usn"/>
            <param name="knn" value="20"/>
            <param name="nhf" value="500"/>
            <param name="nspdk_nhf_max" value="1000"/>
            <param name="nspdk_nhf_step" value="25"/>
            <param name="GLOBAL_num_clusters" value="100"/>

            <output name="fast_cluster" file="SVECTOR/data.svector.1.fast_cluster" />
            <output name="fast_cluster_sim" file="SVECTOR/data.svector.1.fast_cluster_sim" />
            <output name="black_list" file="SVECTOR/data.svector.blacklist.1" />


        </test>
        <!--test>
            <param name="data_svector" value="data.svector"  />
            <param name="data_fasta" value="data.fasta"/>
            <param name="data_names" value="data.names"/>

            <conditional name="iteration_num">
               <param name="iteration_num_selector" value="true"/>
               <param name="CI"  value="2"/>
               <param name="blacklist" value="data.svector.blacklist.1" />
               <param name="final_partition_soft" value="final_partition.soft" />
               <param name="round_partition_soft" value="final_partition.soft" />
               <param name="fast_cluster_last_round" value="data.svector.1.fast_cluster" />
           </conditional>


            <param name="noCache" value="-no-cache"/>
            <param name="ensf" value="5"/>
            <param name="oc" value="-oc"/>
            <param name="usn" value="-usn"/>
            <param name="knn" value="20"/>
            <param name="nhf" value="500"/>
            <param name="nspdk_nhf_max" value="1000"/>
            <param name="nspdk_nhf_step" value="25"/>
            <param name="GLOBAL_num_clusters" value="100"/>

            <output name="fast_cluster_m" file="SVECTOR/data.svector.2.fast_cluster" />
            <output name="fast_cluster_sim_m" file="SVECTOR/data.svector.2.fast_cluster_sim" />
            <output name="black_list_m" file="SVECTOR/data.svector.blacklist.2" />


        </test-->
    </tests>



    <help>
<![CDATA[

*	 **Name: Neighborhood Subgraph Paiwise Distance Kernel**
*	 **Version: 9.2**
*	 **Programmer: Fabrizio Costa**
*	 **Date: 3 July 2012**
*	 **Last build: Dec  2 2015**

**Parameters**

+ **-knn** : <num nearest neighbors> (default: 10)

+ **-otknn** : flag to output true (i.e. implies full kernel matrix evaluation) k-nearest neighburs (default: 0)

+ **-oc** : flag to output clusters (default: 0)

+ **-nhf** : <num hash functions> for the Locality Sensitive Hashing function (default: 250)

+ **-ensf** : <eccess neighbour size factor> (default: 10) (0 to avoid trimming)

+ **-usn** : use shared neighbourhood to weight center density (default: 0)


    ]]></help>
    <citations>

    </citations>
</tool>
