class Ribosum85_60: public LocARNA::RibosumFreq {
    static const double bm_init[];
    static const double am_init[];
    static const double base_probs_init[];
    static const double base_nonstruct_probs_init[];
    static const double basepair_probs_init[];
    static const double basematch_probs_init[];
    static const double arcmatch_probs_init[];
    static const std::string basename_alphabet_init[];
    static const std::string arcname_alphabet_init[];

  public:
    Ribosum85_60(): LocARNA::RibosumFreq() {
        bm = matrix_t(4,4,bm_init);
        am = matrix_t(16,16,am_init);
        base_probs_ = matrix_t(4,1,base_probs_init);
        base_nonstruct_probs_ = matrix_t(4,1,base_nonstruct_probs_init);
        basepair_probs_ = matrix_t(4,4,basepair_probs_init);
        basematch_probs_ = matrix_t(4,4,basematch_probs_init);
        arcmatch_probs_ = matrix_t(16,16,arcmatch_probs_init);
        set_basename_alphabet(basename_alphabet_init);
        set_arcname_alphabet(arcname_alphabet_init);
    }
};

const double Ribosum85_60::bm_init[] = {
    2.12, -1.58, -1.2, -1.08, 
    -1.58, 1.03, -2.24, -0.86, 
    -1.2, -2.24, 0.97, -1.52, 
    -1.08, -0.86, -1.52, 1.54 
};

const double Ribosum85_60::am_init[] = {
    -2.46, -7.8, -7.81, -4.25, -8.15, -11.96, -4.05, -10.53, -6.63, -4.71, -8.11, -5.54, -3.67, -9.57, -5.93, -8.3, 
    -7.8, -1.67, -10.2, -1.96, -9.9, -8.12, -5.08, -8.4, -10.13, -3.31, -9.94, -4.27, -4.96, -8.44, -6.7, -6.67, 
    -7.81, -10.2, -2.09, -5.44, -9.85, -12.22, -4.66, -9.94, -8.26, -4.85, -5.63, -6.46, -5.81, -9.31, -5.88, -9.68, 
    -4.25, -1.96, -5.44, 4.31, -4.97, -5.58, 1.86, -4.39, -5.31, 2.79, -5.04, 0.72, 1.62, -4.31, -0.58, -2.72, 
    -8.15, -9.9, -9.85, -4.97, -2.59, -9.86, -2.95, -7.32, -6.76, -5.09, -9.26, -6.75, -2.57, -8.36, -4.77, -7.63, 
    -11.96, -8.12, -12.22, -5.58, -9.86, -3.36, -4.53, -5.05, -12.3, -3.25, -12, -7.13, -5.91, -6.85, -7.71, -5.28, 
    -4.05, -5.08, -4.66, 1.86, -2.95, -4.53, 5.37, -4.38, -4.66, 2.43, -4.74, -0.14, 2.9, -5.02, 1.39, -3.42, 
    -10.53, -8.4, -9.94, -4.39, -7.32, -5.05, -4.38, -1.03, -8.91, -4.95, -11.37, -4.73, -4.67, -4.18, -6.8, -4.37, 
    -6.63, -10.13, -8.26, -5.31, -6.76, -12.3, -4.66, -8.91, -1.28, -3.96, -6.16, -6.04, -4.96, -7.77, -6.9, -9.34, 
    -4.71, -3.31, -4.85, 2.79, -5.09, -3.25, 2.43, -4.95, -3.96, 5.67, -3.46, 1.44, 1.78, -3.92, -0.03, -3.54, 
    -8.11, -9.94, -5.63, -5.04, -9.26, -12, -4.74, -11.37, -6.16, -3.46, -1.99, -5.87, -5.67, -10.42, -4.95, -9.83, 
    -5.54, -4.27, -6.46, 0.72, -6.75, -7.13, -0.14, -4.73, -6.04, 1.44, -5.87, 3.3, -0.6, -4.71, -2.11, -4.24, 
    -3.67, -4.96, -5.81, 1.62, -2.57, -5.91, 2.9, -4.67, -4.96, 1.78, -5.67, -0.6, 4.74, -3.65, 0.99, -3.31, 
    -9.57, -8.44, -9.31, -4.31, -8.36, -6.85, -5.02, -4.18, -7.77, -3.92, -10.42, -4.71, -3.65, -3, -5.7, -6.23, 
    -5.93, -6.7, -5.88, -0.58, -4.77, -7.71, 1.39, -6.8, -6.9, -0.03, -4.95, -2.11, 0.99, -5.7, 3.19, -3.55, 
    -8.3, -6.67, -9.68, -2.72, -7.63, -5.28, -3.42, -4.37, -9.34, -3.54, -9.83, -4.24, -3.31, -6.23, -3.55, -0.52 
};

const double Ribosum85_60::base_probs_init[] = {
    0.259898, 
    0.219573, 
    0.296215, 
    0.224314 
};

const double Ribosum85_60::base_nonstruct_probs_init[] = {
    0.358145, 
    0.164409, 
    0.246656, 
    0.23079 
};

const double Ribosum85_60::basepair_probs_init[] = {
    0.00224798, 0.00270567, 0.00274318, 0.132541, 
    0.00217808, 0.00105975, 0.256696, 0.00241352, 
    0.00389249, 0.283519, 0.00346465, 0.0706252, 
    0.15796, 0.00142332, 0.0725112, 0.00401887 
};

const double Ribosum85_60::basematch_probs_init[] = {
    0.29384, 0.0190832, 0.033547, 0.0275087, 
    0.0190832, 0.0983823, 0.0137746, 0.027117, 
    0.033547, 0.0137746, 0.172418, 0.0232439, 
    0.0275087, 0.027117, 0.0232439, 0.146811 
};

const double Ribosum85_60::arcmatch_probs_init[] = {
    0.000828452, 1.72698e-05, 2.31344e-05, 0.000206541, 1.36071e-05, 8.17826e-07, 0.000265337, 2.25058e-06, 5.24793e-05, 0.000167962, 2.14133e-05, 9.66531e-05, 0.000309502, 4.38901e-06, 7.36275e-05, 1.07912e-05, 
    1.72698e-05, 0.00102436, 3.74329e-06, 0.00085676, 3.3983e-06, 9.86144e-06, 0.000110038, 8.3259e-06, 3.92224e-06, 0.000374301, 5.10729e-06, 0.000197148, 0.000106573, 8.0922e-06, 3.65296e-05, 2.82581e-05, 
    2.31344e-05, 3.74329e-06, 0.00138757, 0.000103401, 4.76791e-06, 7.75319e-07, 0.000198672, 3.86614e-06, 1.93089e-05, 0.000173242, 0.000135952, 5.7943e-05, 7.97651e-05, 5.99183e-06, 8.65608e-05, 4.71867e-06, 
    0.000206541, 0.00085676, 0.000103401, 0.0673029, 0.000106016, 5.8872e-05, 0.0137362, 0.000136525, 0.000113522, 0.0262872, 0.000155667, 0.00636674, 0.0104348, 0.000144803, 0.00258871, 0.000443849, 
    1.36071e-05, 3.3983e-06, 4.76791e-06, 0.000106016, 0.000542621, 2.96839e-06, 0.000480419, 1.75762e-05, 4.05782e-05, 0.000108935, 8.18111e-06, 3.53295e-05, 0.000558584, 8.57738e-06, 0.000139089, 1.44534e-05, 
    8.17826e-07, 9.86144e-06, 7.75319e-07, 5.8872e-05, 2.96839e-06, 0.000226215, 0.000135708, 7.16091e-05, 7.35558e-07, 0.000330078, 1.03307e-06, 2.28952e-05, 4.6654e-05, 2.05333e-05, 1.52537e-05, 6.22347e-05, 
    0.000265337, 0.000110038, 0.000198672, 0.0137362, 0.000480419, 0.000135708, 0.175024, 0.000153845, 0.00019779, 0.0227541, 0.000213822, 0.00392711, 0.0282265, 9.87386e-05, 0.0112941, 0.00030514, 
    2.25058e-06, 8.3259e-06, 3.86614e-06, 0.000136525, 1.75762e-05, 7.16091e-05, 0.000153845, 0.00118925, 7.89712e-06, 0.000103961, 1.63601e-06, 0.000123597, 0.000112933, 0.000134108, 2.93985e-05, 0.000119699, 
    5.24793e-05, 3.92224e-06, 1.93089e-05, 0.000113522, 4.05782e-05, 7.35558e-07, 0.00019779, 7.89712e-06, 0.0024409, 0.0003216, 9.45721e-05, 7.78373e-05, 0.000144153, 1.74094e-05, 4.298e-05, 5.97695e-06, 
    0.000167962, 0.000374301, 0.000173242, 0.0262872, 0.000108935, 0.000330078, 0.0227541, 0.000103961, 0.0003216, 0.214924, 0.000517616, 0.0117471, 0.0130456, 0.0002111, 0.00424617, 0.000282092, 
    2.14133e-05, 5.10729e-06, 0.000135952, 0.000155667, 8.18111e-06, 1.03307e-06, 0.000213822, 1.63601e-06, 9.45721e-05, 0.000517616, 0.00193979, 9.94083e-05, 0.000100711, 3.15297e-06, 0.000189105, 4.83491e-06, 
    9.66531e-05, 0.000197148, 5.7943e-05, 0.00636674, 3.53295e-05, 2.28952e-05, 0.00392711, 0.000123597, 7.78373e-05, 0.0117471, 9.94083e-05, 0.0436194, 0.0025612, 0.00012486, 0.001026, 0.000176642, 
    0.000309502, 0.000106573, 7.97651e-05, 0.0104348, 0.000558584, 4.6654e-05, 0.0282265, 0.000112933, 0.000144153, 0.0130456, 0.000100711, 0.0025612, 0.0910662, 0.000228835, 0.00766873, 0.000296304, 
    4.38901e-06, 8.0922e-06, 5.99183e-06, 0.000144803, 8.57738e-06, 2.05333e-05, 9.87386e-05, 0.000134108, 1.74094e-05, 0.0002111, 3.15297e-06, 0.00012486, 0.000228835, 0.000302477, 6.30543e-05, 3.29754e-05, 
    7.36275e-05, 3.65296e-05, 8.65608e-05, 0.00258871, 0.000139089, 1.52537e-05, 0.0112941, 2.93985e-05, 4.298e-05, 0.00424617, 0.000189105, 0.001026, 0.00766873, 6.30543e-05, 0.0403965, 0.000284928, 
    1.07912e-05, 2.82581e-05, 4.71867e-06, 0.000443849, 1.44534e-05, 6.22347e-05, 0.00030514, 0.000119699, 5.97695e-06, 0.000282092, 4.83491e-06, 0.000176642, 0.000296304, 3.29754e-05, 0.000284928, 0.0017714 
};

const std::string Ribosum85_60::basename_alphabet_init[] = {"A","C","G","U"};

const std::string Ribosum85_60::arcname_alphabet_init[] = {"AA","AC","AG","AU","CA","CC","CG","CU","GA","GC","GG","GU","UA","UC","UG","UU"};

