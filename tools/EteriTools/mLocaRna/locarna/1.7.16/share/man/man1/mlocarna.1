.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.16)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "MLOCARNA 1"
.TH MLOCARNA 1 "2014-03-06" "perl v5.14.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
MLocarna \- multiple alignment of RNA (LocARNA 1.7.14)
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
mlocarna [options] <fasta file>
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\fBMLocarna\fR computes a multiple sequence-structure alignment of \s-1RNA\s0
sequences.
.SH "OPTIONS"
.IX Header "OPTIONS"
.SS "Controlling Output"
.IX Subsection "Controlling Output"
.IP "\fB\-\-tgtdir\fR" 4
.IX Item "--tgtdir"
Target directory. All output files are written to this directory.  Per
default the target directory is generated from the input filename by
replacing suffix fa by (or appending) out.
.IP "\fB\-v, \-\-verbose\fR" 4
.IX Item "-v, --verbose"
Turn on verbose ouput.
.IP "\fB\-\-moreverbose\fR" 4
.IX Item "--moreverbose"
Be even more verbose
.IP "\fB\-q, \-\-quiet\fR" 4
.IX Item "-q, --quiet"
Be quiet.
.IP "\fB\-\-keep\-sequence\-order\fR" 4
.IX Item "--keep-sequence-order"
Preserve sequence order of the input in the final alignment.  Affects
output to stdout and results/result.aln.
.SS "Controlling pairwise alignments"
.IX Subsection "Controlling pairwise alignments"
.IP "\fB\-\-noLP\fR / \fB\-\-LP\fR" 4
.IX Item "--noLP / --LP"
Disallow/Allow lonely pairs (default: Disallow).
.IP "\fB\-\-free\-endgaps\fR" 4
.IX Item "--free-endgaps"
Allow free endgaps. (Corresponds to pairwise locarna option \-\-free\-endgaps \*(L"++++\*(R".)
.IP "\fB\-\-free\-endgaps\-3\fR" 4
.IX Item "--free-endgaps-3"
Allow free endgaps 3'.
.IP "\fB\-\-free\-endgaps\-5\fR" 4
.IX Item "--free-endgaps-5"
Allow free endgaps 5'.
.IP "\fBOther locarna options\fR" 4
.IX Item "Other locarna options"
Many of the options of locarna, the program for pairwise alignment, will work as well.
This allows controlling scoring, locality, and speed/acccuracy trade off (heuristics).
\&\fBPlease see\fR \f(CW\*(C`locarna \-h\*(C'\fR or the manpage of locarna.
.IP "\fB\-\-pw\-aligner\fR" 4
.IX Item "--pw-aligner"
Utilize given binary for the pairwise alignment (overrides def=locarna).
.IP "\fB\-\-pw\-aligner\-p\fR" 4
.IX Item "--pw-aligner-p"
Utilize given binary for the probabilistic pairwise alignment
(overrides def=locarna_p).
.IP "\fB\-\-pw\-aligner\-options\fR" 4
.IX Item "--pw-aligner-options"
Additional option string for the pairwise alignment (def="").
.IP "\fB\-\-pw\-aligner\-p\-options\fR" 4
.IX Item "--pw-aligner-p-options"
Additional option string for the probabilistic pairwise alignment (def="").
.SS "Controlling guide tree construction"
.IX Subsection "Controlling guide tree construction"
.IP "\fB\-\-treefile\fR" 4
.IX Item "--treefile"
File with guide tree in \s-1NEWICK\s0 format. The given tree is used as guide
tree for the progressive alignment. This saves the calculation of
pairwise all-vs-all similarities and construction of the guide tree.
.IP "\fB\-\-similarity\-matrix\fR" 4
.IX Item "--similarity-matrix"
File with similarity matrix. The similarities in the matrix are used
to construct the guide tree for the progressive alignment. This saves
the calculation of pairwise all-vs-all similarities.
.IP "\fB\-\-graphkernel\fR" 4
.IX Item "--graphkernel"
Use the graphkernel for constructing the guide tree.
.IP "\fB\-\-svmsgdnspdk[=<program\fR]>" 4
.IX Item "--svmsgdnspdk[=<program]>"
Specify the svmsgdnspdk program (potentially including path). Default:
use \*(L"svmsgdnspdk\*(R" in path.
.IP "\fB\-\-fasta2shrep=<program\fR>" 4
.IX Item "--fasta2shrep=<program>"
Program \*(L"fasta2shrep\*(R" for generating graphs from the input sequences
for use with the graph kernel guide tree generation (potentially
including path). Default: use \*(L"fasta2shrep_gspan.pl\*(R" in path.
.IP "\fB\-\-fasta2shrep\-options=<args\fR>" 4
.IX Item "--fasta2shrep-options=<args>"
Command line arguments for fasta2shrep. Default: \*(L"\-wins 200 \-shift 50
\&\-stack \-t 3 \-M 3\*(R".
.IP "\fB\-P, \-\-tree\-min\-prob=<f\fR>" 4
.IX Item "-P, --tree-min-prob=<f>"
Minimal prob for constructing guide tree. This probability can be set
separately for the all\-2\-all comparison for constructing the guide
tree and the progressive/iterative alignment steps.
.SS "Controlling multiple alignment"
.IX Subsection "Controlling multiple alignment"
.IP "\fB\-\-alifold\-consensus\-dp\fR" 4
.IX Item "--alifold-consensus-dp"
Employs \fBRNAalifold \-p\fR for generating consensus dotplot after each
progressive alignment step. This replaces the default consensus
dotplot computation, which averages over the input dot plots.  This
method should be used with care in combination with structural
constraints, since it ignores them for all but the pairwise alignments
of single sequences. Furthermore, note that it does not support
\&\fB\-\-stacking\fR.
.IP "\fB\-\-local\-progressive\fR" 4
.IX Item "--local-progressive"
Align only the subalignment of locally aligned subsequences in
subsequent steps of the progressive multiple alignment. Note: this is
only effective if local alignment is turned on. (Default for
sequence local alignment; turn off by \fB\-\-global\-progressive\fR)
.IP "\fB\-\-global\-progressive\fR" 4
.IX Item "--global-progressive"
Use alignments including \*(L"locality gaps\*(R" in subsequent steps of the
progressive multiple alignment. Note: this is only effective if local
alignment is turned on. (Opposite of \fB\-\-local\-progressive\fR)
.IP "\fB\-\-max\-diff\-aln=<file\fR>" 4
.IX Item "--max-diff-aln=<file>"
Restrict maximal difference to the alignment in <file> in clustalw
format (difference given by \-\-max\-diff). Use this option for
constrained re-aligning.
.IP "\fB\-\-probabilistic\fR" 4
.IX Item "--probabilistic"
Score alignments using match probabilities that are computed by a
partition function approach. This makes possible to
consistency-transform the probabilities (option
\&\-\-consistency\-transform) and to compute reliabilities.  Reliabilities
can also be used for iterating the alignment with reliably aligned
base pairs as structural constraints (option \-\-it\-reliable\-structure).
.IP "\fB\-\-consistency\-transformation\fR" 4
.IX Item "--consistency-transformation"
Apply probabilistic consistency transformation (only possible in
probabilistic mode).
.IP "\fB\-\-iterate\fR" 4
.IX Item "--iterate"
Refine iteratively after progressive alignment. Currently, iterative
refinement optimizes the \s-1SCI\s0 or \s-1RELIABILITY\s0 (not the locarna score)! Iterative
refinement realigns all binary splits along the guide tree.
.IP "\fB\-\-iterations=<num\fR>" 4
.IX Item "--iterations=<num>"
Refine iteratively for given number of iterations (or stop at
convergence).
.IP "\fB\-\-extlib\fR" 4
.IX Item "--extlib"
Use library extension for base pair probabilities (experimental/not functional).
.IP "\fB\-\-it\-reliable\-structure=<num\fR>" 4
.IX Item "--it-reliable-structure=<num>"
Iterate alignment <num> times with reliable structure. This works only
in probabilistic mode, when reliabilities can be computed.
.SS "Options for probabilistic mode"
.IX Subsection "Options for probabilistic mode"
.IP "\fB\-\-pf\-only\-basematch\fR" 4
.IX Item "--pf-only-basematch"
Use only base match probabilities (no base pair match probabilities).
.IP "\fB\-\-pf\-scale=<scale\fR>" 4
.IX Item "--pf-scale=<scale>"
Scale of partition function; use for avoiding overflow in larger instances.
.IP "\fB\-\-fast\-mea\fR" 4
.IX Item "--fast-mea"
Compute base match probabilities using Gotoh PF-algorithm.
.IP "\fB\-\-mea\-alpha\fR" 4
.IX Item "--mea-alpha"
Weight of unpaired probabilities in fast mea mode.
.IP "\fB\-\-mea\-beta\fR" 4
.IX Item "--mea-beta"
Weight of base pair match contribution in probabilistic mode.
.IP "\fB\-\-mea\-gamma\fR" 4
.IX Item "--mea-gamma"
Reserved parameter for fast-mea mode.
.IP "\fB\-\-mea\-gapcost\fR" 4
.IX Item "--mea-gapcost"
Turn on gap penalties in probabilistic/mea mode (default: off).
.IP "\fB\-\-no\-write\-bm\-probs\fR" 4
.IX Item "--no-write-bm-probs"
Don't write base match probabilities to files in target dir.
.IP "\fB\-\-no\-write\-am\-probs\fR" 4
.IX Item "--no-write-am-probs"
Don't write arc match probabilities to files in target dir.
.SS "Special modes of operation"
.IX Subsection "Special modes of operation"
.IP "\fB\-\-dp\-cache=<dir\fR>" 4
.IX Item "--dp-cache=<dir>"
Use directory <dir> as cache for dp files.
.IP "\fB\-\-only\-dps\fR" 4
.IX Item "--only-dps"
Compute only the missing dp files, don't align.
.IP "\fB\-\-evaluate=<file\fR>" 4
.IX Item "--evaluate=<file>"
Evaluate the given multiple alignment (clustalw aln format, or use \-\-eval\-fasta)
.IP "\fB\-\-eval\-fasta\fR" 4
.IX Item "--eval-fasta"
Assume that alignment for evaluation is in fasta format
.SS "Constraints"
.IX Subsection "Constraints"
.IP "\fB\-\-ignore\-constraints\fR" 4
.IX Item "--ignore-constraints"
Ignore constraints even if given.
.SS "Rna folding (RNAfold/RNAplfold)"
.IX Subsection "Rna folding (RNAfold/RNAplfold)"
.IP "\fB\-\-plfold\-span=span\fR" 4
.IX Item "--plfold-span=span"
Use RNAplfold with span
.IP "\fB\-\-plfold\-winsize=ws\fR" 4
.IX Item "--plfold-winsize=ws"
Use RNAplfold with window of size ws (default=2*span)
.IP "\fB\-\-rnafold\-parameter=<file\fR>" 4
.IX Item "--rnafold-parameter=<file>"
Parameter file for RNAfold (RNAfold's \-P option)
.IP "\fB\-\-skip\-pp\fR" 4
.IX Item "--skip-pp"
Skip computation of pair probs if the probabilities are already
existing. Non-existing ones are still computed.
.IP "\fB\-\-no\-bpp\-precomputation\fR" 4
.IX Item "--no-bpp-precomputation"
Switch off precomputation of base pair probabilties. Overwrite
potentially existing input files.  (compare skip-pp). For use with
special pairwise aligners (e.g. locarna_n) that recompute the base
pair probabilities at each invokation.
.IP "\fB\-\-in\-loop\-probabilities\fR" 4
.IX Item "--in-loop-probabilities"
Turn on precomputation of in loop probabilties. For use with special
pairwise aligners (e.g. locarna_n) that use such probabilities.
.SS "Multithreading"
.IX Subsection "Multithreading"
.IP "\fB\-\-threads=<num\fR> or \fB\-\-cpus=<num\fR>" 4
.IX Item "--threads=<num> or --cpus=<num>"
Use <num> threads in parallel (support multicore/processor).
.SS "Getting Help"
.IX Subsection "Getting Help"
.IP "\fB\-\-help\fR" 4
.IX Item "--help"
Brief help message
.IP "\fB\-\-man\fR" 4
.IX Item "--man"
Full documentation
.PP
The sequences are given in input file <file> in mfasta
format.  All results are written to a target directory <dir>. If the
file tree is given, contained tree (in NEWICK-tree format) is used as
guide tree for the progressive alignment. The final results are
collected in <tgtdir>/results. The final multiple alignment is
<tgtdir>/results/result.aln.
.PP
Whenever parameters are not specified explicitly, we use the locarna defaults 
(please see \f(CW\*(C`locarna \-h\*(C'\fR or the manpage of locarna).
.SH "AUTHOR"
.IX Header "AUTHOR"
Sebastian Will
