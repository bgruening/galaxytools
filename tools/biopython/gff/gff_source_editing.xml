<tool id="gff_source_editing" name="GFF source editing" version="@VERSION@">
    
    <description>
    <![CDATA[
        Converts the source data of a gff file into a specified string.
    ]]>
    </description>
    
    <macros>
        <import>gff_sqlite_tool_macros.xml</import>
    </macros>
    <expand macro="requirements" />
    <expand macro="stdio" />
    
    <version_command>python gff_source_editing.py --version</version_command>
    
    <command interpreter="python">
    <![CDATA[
        
      gff_source_editing.py 
        #if $old_gff and $old_gff is not None:
            --old_gff "$old_gff"
        #end if
        
        #if $new_gff and $new_gff is not None:
            --new_gff "$new_gff"
        #end if
        
        #if $string and $string is not None:
            --string "$string"
        #end if
        
        $add
        
    ]]>
    </command>
    
    <inputs>
        <param name="old_gff" type="data" format="gff" label="Input GFF file" help="(--old_gff)" />
        <param name="string" type="text" label="Source string" help="(--string) This string will be added to or replace the source data. Can't contain any whitespace character or similar." >
            <expand macro="sanitize_query" />
        </param>
        <param name="add" type="boolean" checked="true" truevalue="--add" falsevalue="" label="Add source string" help="(--add) Replace or add source string." />
    </inputs>
    
    <outputs>
        <data name="new_gff" format="gff" label="GFF data of ${tool.name} on ${on_string}" />
    </outputs>
    
    <tests>
        <test>
            <param name="old_gff" value="FlyBase.gff" />
            <param name="string" value="_source-edit" />
            <param name="add" value="True" />
            <output name="new_gff" file="FlyBaseEdit.gff" />
        </test>
    </tests>
    
    <help>
<![CDATA[

**Overview**

Gff_source_editing is designed to manipulate the source data of a GFF file to prepare it for the gff_to_db tool.
The gff_to_db tool will use this new source as primary key. Therefore it has to be distinct from other source entries in the database.
You can use db_to_gff and check if a source string is already in use.
It can add a string to the source data or replace the whole source data with a new string.

------

**Input**

The input file has to be a GFF file.

------

**Output**

The output will be a GFF file.

------

**gff_source_editing parameter list**

The standalone, command-line version of gff_source_editing uses the following parameters::

        --old_gff   [input GFF file name {gff}]
        --new_gff   [output GFF file name {gff}]
        --string    source string
        --add       add the string to the source
        --version   version number

@CITATION@

]]>
    </help>
    
    <expand macro="citations"/>
    
</tool>

