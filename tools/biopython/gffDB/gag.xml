<tool id="GAG_wrapper" name="GFF to NCBI TBL" version="0.0.1">
    <description> Converter</description>
    <macros>
        <import>gff_sqlite_tool_macros.xml</import>
    </macros>
    <expand macro="requirements" />
    <expand macro="stdio" />
    <command interpreter="python">
    <![CDATA[
        GAG/gag.py
            #if $gff_in and $gff_in is not None:
                --gff "$gff_in"
            #end if

            #if $fasta_in and $fasta_in is not None:
                --fasta "$fasta_in"
            #end if

            #if $task_selector.selections == "show_advanced":
                #if $task_selector.anno_in and $task_selector.anno_in is not None:
                    --anno "$task_selector.anno_in"
                #end if

                --out "gag_output"

                $task_selector.fixStartStop
                $task_selector.fixTerminalNs
                
                #if $task_selector.rcs and $task_selector.rcs is not None:
                    -rcs "$task_selector.rcs"
                #end if

                #if $task_selector.rcl and $task_selector.rcl is not None:
                    -rcl "$task_selector.rcl"
                #end if

                #if $task_selector.res and $task_selector.res is not None:
                    -res "$task_selector.res"
                #end if
                
                #if $task_selector.rel and $task_selector.rel is not None:
                    -rel "$task_selector.rel"
                #end if
                
                #if $task_selector.ris and $task_selector.ris is not None:
                    -ris "$task_selector.ris"
                #end if
                
                #if $task_selector.ril and $task_selector.ril is not None:
                    -ril "$task_selector.ril"
                #end if
                
                #if $task_selector.rgs and $task_selector.rgs is not None:
                    -rgs "$task_selector.rgs"
                #end if
                
                #if $task_selector.rgl and $task_selector.rgl is not None:
                    -rgl "$task_selector.rgl"
                #end if
                
                #if $task_selector.fcs and $task_selector.fcs is not None:
                    -fcs "$task_selector.fcs"
                #end if
                
                #if $task_selector.fcl and $task_selector.fcl is not None:
                    -fcl "$task_selector.fcl"
                #end if
                
                #if $task_selector.fes and $task_selector.fes is not None:
                    -fes "$task_selector.fes"
                #end if
                
                #if $task_selector.fel and $task_selector.fel is not None:
                    -fel "$task_selector.fel"
                #end if
                
                #if $task_selector.fis and $task_selector.fis is not None:
                    -fis "$task_selector.fis"
                #end if
                
                #if $task_selector.fil and $task_selector.fil is not None:
                    -fil "$task_selector.fil"
                #end if
                
                #if $task_selector.fgs and $task_selector.fgs is not None:
                    -fgs "$task_selector.fgs"
                #end if
                
                #if $task_selector.fgl and $task_selector.fgl is not None:
                    -fgl "$task_selector.fgl"
                #end if
            #end if
    ]]>
    </command>
    <inputs>
        <param name="gff_in" type="data" format="gff" label="Input GFF file" help="(--gff)" />
        <param name="fasta_in" type="data" format="fasta" label="Input fasta file" help="(--fasta) Should be associated with the GFF file." />
        <conditional name="task_selector">
            <param name="selections" type="select" label="Advanced Options." >
                <option value="hide_advanced" selected="True" > Hide Advanced Options </option>
                <option value="show_advanced" > Show Advanced Options </option>
            </param>
            <when value="show_advanced">
                <param name="anno_in" type="data" format="tabular" optional="True" label="Input annotation file" help="(--anno) Annotation file for adding functional annotations." />
                <param name="fixStartStop" type="boolean" checked="false" truevalue="--fix_start_stop" falsevalue="" label="Fix CDS start and stop" help="(--fix_start_stop) Adds start and stop codons to CDS without annotated start and stop codons." />
                <param name="fixTerminalNs" type="boolean" checked="false" truevalue="--fix_terminal_ns" falsevalue="" label="Remove terminal 'N's" help="(--fix_terminal_ns) Removes 'N's at the beginning or end of a scaffold." />
                <param name="rcs" type="integer" value="" optional="True" label="Remove CDS shorter than" help="(-rcs) Removes CDS shorter than the provided value." />
                <param name="rcl" type="integer" value="" optional="True" label="Remove CDS longer than" help="(-rcl) Removes CDS longer than the provided value." />
                <param name="res" type="integer" value="" optional="True" label="Remove exons shorter than" help="(-res) Removes exons shorter than the provided value." />
                <param name="rel" type="integer" value="" optional="True" label="Remove exons longer than" help="(-rel) Removes exons longer than the provided value." />
                <param name="ris" type="integer" value="" optional="True" label="Remove introns shorter than" help="(-ris) Removes introns shorter than the provided value." />
                <param name="ril" type="integer" value="" optional="True" label="Remove introns longer than" help="(-ril) Removes introns longer than the provided value." />
                <param name="rgs" type="integer" value="" optional="True" label="Remove genes shorter than" help="(-rgs) Removes genes shorter than the provided value." />
                <param name="rgl" type="integer" value="" optional="True" label="Remove genes longer than" help="(-rgl) Removes genes longer than the provided value." />
                <param name="fcs" type="integer" value="" optional="True" label="Flag CDS shorter than" help="(-fcs) Flag CDS shorter than the provided value." />
                <param name="fcl" type="integer" value="" optional="True" label="Flag CDS longer than" help="(-fcl) Flag CDS longer than the provided value." />
                <param name="fes" type="integer" value="" optional="True" label="Flag exons shorter than" help="(-fes) Flag exons shorter than the provided value." />
                <param name="fel" type="integer" value="" optional="True" label="Flag exons longer than" help="(-fel) Flag exons longer than the provided value." />
                <param name="fis" type="integer" value="" optional="True" label="Flag introns shorter than" help="(-fis) Flag introns shorter than the provided value." />
                <param name="fil" type="integer" value="" optional="True" label="Flag introns longer than" help="(-fil) Flag introns longer than the provided value." />
                <param name="fgs" type="integer" value="" optional="True" label="Flag genes shorter than" help="(-fgs) Flag genes shorter than the provided value." />
                <param name="fgl" type="integer" value="" optional="True" label="Flag genes longer than" help="(-fgl) Flag genes longer than the provided value." />
            </when>
        </conditional>
        <param name="outputs" type="select" multiple="true" label="Output Selection.">
            <option value="tbl_out" selected="True"> NCBI TBL File </option>
            <option value="fasta_out" > Input Fasta File </option>
            <option value="gff_out" > Valid GFF Input Data </option>
            <option value="ignored_out" > Invalid GFF Input Data </option>
            <option value="stats_out" > Statistics File </option>
        </param>
    </inputs>
    <outputs>
        <data name="tbl_out" format="tabular" from_work_dir="./gag_output/genome.tbl" label="TBL data of ${tool.name} on ${on_string}" >
            <filter>'tbl_out' in outputs</filter>
        </data>
        <data name="fasta_out" format="fasta" from_work_dir="./gag_output/genome.fasta" label="fasta data of ${tool.name} on ${on_string}" >
            <filter>'fasta_out' in outputs</filter>
        </data>
        <data name="gff_out" format="gff" from_work_dir="./gag_output/genome.gff" label="GFF data of ${tool.name} on ${on_string}" >
            <filter>'gff_out' in outputs</filter>
        </data>
        <data name="ignored_out" format="gff" from_work_dir="./gag_output/genome.ignored.gff" label="ignored data of ${tool.name} on ${on_string}" >
            <filter>'ignored_out' in outputs</filter>
        </data>
        <data name="stats_out" format="tabular" from_work_dir="./gag_output/genome.stats" label="stats data of ${tool.name} on ${on_string}" >
            <filter>'stats_out' in outputs</filter>
        </data>
    </outputs>
    <tests>
        <test>
            <param name="gff_in" value="FlyBaseID.gff" />
            <param name="fasta_in" value="FlyBase.fna" />
            <param name="outputs" value="tbl_out,ignored_out" />
            <output name="tbl_out" file="FlyBase.tbl" />
            <output name="ignored_out" file="FlyBase.ignored.gff" />
        </test>
    </tests>
    <help>
<![CDATA[

**Overview**

GAG_ can read a genome and write it to the NCBI's .tbl format.

.. _GAG: http://genomeannotation.github.io/GAG/

------

**Input**

The first input file has to be a GFF file.
The second input file has to be a fasta file with sequences associated to the GFF file.
The third input can be a annotation file with functional annotations.

.. class:: warningmark

GAG is very specific with its input data.
Make sure every feature has a unique ID-tag. For this you can use gff_id_editing.
GAG only accepts GFF features, if the 'Seqname' of a feature is the same as name of a feature in the fasta file.
Important is the name between '>' and the first whitespace character in the fasta file.

------

**Output**

The output will be a NCBI .tbl file.

------

**gag parameter list**

The standalone, command-line version of gag uses the following parameters::

        --gff               [input GFF file name {gff}]
        --fasta             [input fasta file name {fna/ffn/faa}]
        --anno              [input annotation file name {annotations}]
        --out               [output tbl file name {tbl}]
        --fix_start_stop    fix CDS start and stop
        --fix_terminal_ns   remove terminal 'N's
        -rcs                remove cds shorter than
        -rcl                remove cds longer than
        -res                remove exons shorter than
        -rel                remove exons longer than
        -ris                remove introns shorter than
        -ril                remove introns longer than
        -rgs                remove genes shorter than
        -rgl                remove genes longer than
        -fcs                flag cds shorter than
        -fcl                flag cds longer than
        -fes                flag exons shorter than
        -fel                flag exons longer than
        -fis                flag introns shorter than
        -fil                flag introns longer than
        -fgs                flag genes shorter than
        -fgl                flag genes longer than

]]>
    </help>
    <expand macro="citations">
        <citation type="bibtex">
            @ARTICLE{B_Hall_GAG,
            Author = {B. Hall, T. DeRego, S. Geib},
            keywords = {bioinformatics, cheminformatics, rna, ncbi},
            title = {{GAG: the Genome Annotation Generator (Version 1.0)}},
            url = {http://genomeannotation.github.io/GAG/}
            }
        </citation>
    </expand>
</tool>

