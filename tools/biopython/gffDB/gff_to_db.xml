<tool id="gff_to_db" name="GFF to database" version="@VERSION@">
    <description>
        Create a database from a GFF file or add to an existing database
    </description>
    <macros>
        <import>gff_sqlite_tool_macros.xml</import>
    </macros>
    <expand macro="requirements" />
    <expand macro="stdio" />
    <version_command>python gff_to_db.py --version</version_command>
    <command>
    <![CDATA[

        #if $input_database and $input_database is not None:
            cp "$input_database" ./new.sqlite
            &&
        #end if

        python $__tool_directory__/gff_to_db.py
            #if $gff and $gff is not None:
                --gff "$gff"
            #end if

            #if $input_database and $input_database is not None:
                --input_database ./new.sqlite
            #else
                --new_database "$output_database"
            #end if

        #if $input_database and $input_database is not None:
            &&
            cp ./new.sqlite "$output_database";
        #end if

    ]]>
    </command>
    <inputs>
        <param name="gff" type="data" format="gff" label="Input GFF file" help="(--gff)" />
        <param name="input_database" optional="True" type="data" format="sqlite" label="Input database (optional)" help="(--input_db)" />
    </inputs>
    <outputs>
        <data name="output_database" format="sqlite" label="database of ${tool.name} on ${on_string}" />
    </outputs>
    <tests>
        <test>
            <param name="gff" value="FlyBase.gff" />
            <output name="output_database" file="FlyBase.sqlite" compare="sim_size" />
        </test>
    </tests>
    <help>
<![CDATA[

**Overview**

Gff_to_db is designed to construct uniform databases out of one or more GFF files.
For the construction of this databases it uses the python module gffutils_.

.. _gffutils: http://pythonhosted.org/gffutils/contents.html

------

**Input**

The input file has to be a GFF file.
If only given a GFF file, the tool will create a new database.
If additionally given a database, the tool will add the GFF data to this database.

.. class:: warningmark

Gff_to_db uses the source field of the GFF file as the primary key.
Therefore, when adding to an existing database, make sure that the source of the gff file isn't already in the database.
For this you can use db_to_gff and search for the source you want to add.
If you want do change the source of the GFF file use gff_source_editing.

------

**Output**

The output will be a sqlite database.

------

**gff_to_db parameter list**

The standalone, command-line version of gff_to_db uses the following parameters::

        --gff               [input GFF file name {gff}]
        --input_database    [existing database file name {sqlite}]
        --new_database      [new database file name]
        --version           version number


]]>
    </help>
    <expand macro="citations"/>
</tool>

