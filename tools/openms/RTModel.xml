<?xml version="1.0" encoding="UTF-8"?>
  <!--This is a configuration file for the integration of a tools into Galaxy (https://galaxyproject.org/). This file was automatically generated using CTD2Galaxy.-->
  <!--Proposed Tool Section: [Peptide property prediction]-->
  <tool id="RTModel" name="RTModel" version="2.0.0">
    <description>Trains a model for the retention time prediction of peptides from a training set.</description>
    <macros>
      <token name="@EXECUTABLE@">RTModel</token>
      <import>macros.xml</import>
    </macros>
    <expand macro="references"/>
    <expand macro="stdio"/>
    <expand macro="requirements"/>
    <command>RTModel

#if $param_in:
  -in $param_in
#end if
#if $param_in_positive:
  -in_positive $param_in_positive
#end if
#if $param_in_negative:
  -in_negative $param_in_negative
#end if
#if $param_out:
  -out $param_out
#end if
#if $param_svm_type:
  -svm_type
  #if &quot; &quot; in str($param_svm_type):
    &quot;$param_svm_type&quot;
  #else
    $param_svm_type
  #end if
#end if
#if $param_nu:
  -nu $param_nu
#end if
#if $param_p:
  -p $param_p
#end if
#if $param_c:
  -c $param_c
#end if
#if $param_kernel_type:
  -kernel_type
  #if &quot; &quot; in str($param_kernel_type):
    &quot;$param_kernel_type&quot;
  #else
    $param_kernel_type
  #end if
#end if
#if $param_degree:
  -degree $param_degree
#end if
#if $param_border_length:
  -border_length $param_border_length
#end if
#if $param_max_std:
  -max_std $param_max_std
#end if
#if $param_k_mer_length:
  -k_mer_length $param_k_mer_length
#end if
#if $param_sigma:
  -sigma $param_sigma
#end if
#if $param_total_gradient_time:
  -total_gradient_time $param_total_gradient_time
#end if
#if $param_first_dim_rt:
  -first_dim_rt
#end if
#if $param_additive_cv:
  -additive_cv
#end if
-threads \${GALAXY_SLOTS:-24}
#if $param_cv_skip_cv:
  -cv:skip_cv
#end if
#if $param_cv_number_of_runs:
  -cv:number_of_runs $param_cv_number_of_runs
#end if
#if $param_cv_number_of_partitions:
  -cv:number_of_partitions $param_cv_number_of_partitions
#end if
#if $param_cv_degree_start:
  -cv:degree_start $param_cv_degree_start
#end if
#if $param_cv_degree_step_size:
  -cv:degree_step_size $param_cv_degree_step_size
#end if
#if $param_cv_degree_stop:
  -cv:degree_stop $param_cv_degree_stop
#end if
#if $param_cv_p_start:
  -cv:p_start $param_cv_p_start
#end if
#if $param_cv_p_step_size:
  -cv:p_step_size $param_cv_p_step_size
#end if
#if $param_cv_p_stop:
  -cv:p_stop $param_cv_p_stop
#end if
#if $param_cv_c_start:
  -cv:c_start $param_cv_c_start
#end if
#if $param_cv_c_step_size:
  -cv:c_step_size $param_cv_c_step_size
#end if
#if $param_cv_c_stop:
  -cv:c_stop $param_cv_c_stop
#end if
#if $param_cv_nu_start:
  -cv:nu_start $param_cv_nu_start
#end if
#if $param_cv_nu_step_size:
  -cv:nu_step_size $param_cv_nu_step_size
#end if
#if $param_cv_nu_stop:
  -cv:nu_stop $param_cv_nu_stop
#end if
#if $param_cv_sigma_start:
  -cv:sigma_start $param_cv_sigma_start
#end if
#if $param_cv_sigma_step_size:
  -cv:sigma_step_size $param_cv_sigma_step_size
#end if
#if $param_cv_sigma_stop:
  -cv:sigma_stop $param_cv_sigma_stop
#end if
#if $adv_opts.adv_opts_selector=='advanced':
    #if $adv_opts.param_force:
  -force
#end if
#end if
</command>
    <inputs>
      <param format="xml,txt" help="(-in) It is assumed that the file type is idXML. Alternatively you can provide a .txt file having a sequence and the corresponding rt per line. &lt;br&gt;" label="This is the name of the input file (RT prediction)" name="param_in" optional="True" type="data"/>
      <param format="xml" help="(-in_positive) " label="input file with positive examples (peptide separation prediction)" name="param_in_positive" optional="True" type="data"/>
      <param format="xml" help="(-in_negative) " label="input file with negative examples (peptide separation prediction)" name="param_in_negative" optional="True" type="data"/>
      <param help="(-svm_type) " label="the type of the svm (NU_SVR or EPSILON_SVR for RT prediction, automatically set &lt;br&gt;to C_SVC for separation prediction)" name="param_svm_type" optional="True" type="select" value="NU_SVR">
        <option value="NU_SVR">NU_SVR</option>
        <option value="NU_SVC">NU_SVC</option>
        <option value="EPSILON_SVR">EPSILON_SVR</option>
        <option value="C_SVC">C_SVC</option>
      </param>
      <param help="(-nu) " label="the nu parameter [0..1] of the svm (for nu-SVR)" max="1.0" min="0.0" name="param_nu" optional="True" type="float" value="0.5"/>
      <param help="(-p) " label="the epsilon parameter of the svm (for epsilon-SVR)" name="param_p" type="float" value="0.1"/>
      <param help="(-c) " label="the penalty parameter of the svm" name="param_c" type="float" value="1.0"/>
      <param help="(-kernel_type) " label="the kernel type of the svm" name="param_kernel_type" optional="True" type="select" value="OLIGO">
        <option value="LINEAR">LINEAR</option>
        <option value="RBF">RBF</option>
        <option value="POLY">POLY</option>
        <option value="OLIGO">OLIGO</option>
      </param>
      <param help="(-degree) " label="the degree parameter of the kernel function of the svm (POLY kernel)" min="1" name="param_degree" optional="True" type="integer" value="1"/>
      <param help="(-border_length) " label="length of the POBK" min="1" name="param_border_length" optional="True" type="integer" value="22"/>
      <param help="(-max_std) " label="max standard deviation for a peptide to be included (if there are several ones for one peptide string)(median is taken)" min="0.0" name="param_max_std" optional="True" type="float" value="10.0"/>
      <param help="(-k_mer_length) " label="k_mer length of the POBK" min="1" name="param_k_mer_length" optional="True" type="integer" value="1"/>
      <param help="(-sigma) " label="sigma of the POBK" name="param_sigma" type="float" value="5.0"/>
      <param help="(-total_gradient_time) " label="the time (in seconds) of the gradient (only for RT prediction)" min="1e-05" name="param_total_gradient_time" optional="True" type="float" value="1.0"/>
      <param checked="false" falsevalue="" help="(-first_dim_rt) " label="if set the model will be built for first_dim_rt" name="param_first_dim_rt" optional="True" truevalue="-first_dim_rt" type="boolean"/>
      <param checked="false" falsevalue="" help="(-additive_cv) " label="if the step sizes should be interpreted additively (otherwise the actual value is multiplied &lt;br&gt;with the step size to get the new value" name="param_additive_cv" optional="True" truevalue="-additive_cv" type="boolean"/>
      <param checked="false" falsevalue="" help="(-skip_cv) " label="Set to enable Cross-Validation or set to true if the model should just be trained with 1 set of specified parameters" name="param_cv_skip_cv" optional="True" truevalue="-cv:skip_cv" type="boolean"/>
      <param help="(-number_of_runs) " label="number of runs for the CV (each run creates a new random partition of the data)" min="1" name="param_cv_number_of_runs" optional="True" type="integer" value="1"/>
      <param help="(-number_of_partitions) " label="number of CV partitions" min="2" name="param_cv_number_of_partitions" optional="True" type="integer" value="10"/>
      <param help="(-degree_start) " label="starting point of degree" min="1" name="param_cv_degree_start" optional="True" type="integer" value="1"/>
      <param help="(-degree_step_size) " label="step size point of degree" name="param_cv_degree_step_size" type="integer" value="2"/>
      <param help="(-degree_stop) " label="stopping point of degree" name="param_cv_degree_stop" type="integer" value="4"/>
      <param help="(-p_start) " label="starting point of p" name="param_cv_p_start" type="float" value="1.0"/>
      <param help="(-p_step_size) " label="step size point of p" name="param_cv_p_step_size" type="float" value="10.0"/>
      <param help="(-p_stop) " label="stopping point of p" name="param_cv_p_stop" type="float" value="1000.0"/>
      <param help="(-c_start) " label="starting point of c" name="param_cv_c_start" type="float" value="1.0"/>
      <param help="(-c_step_size) " label="step size of c" name="param_cv_c_step_size" type="float" value="10.0"/>
      <param help="(-c_stop) " label="stopping point of c" name="param_cv_c_stop" type="float" value="1000.0"/>
      <param help="(-nu_start) " label="starting point of nu" max="1.0" min="0.0" name="param_cv_nu_start" optional="True" type="float" value="0.3"/>
      <param help="(-nu_step_size) " label="step size of nu" name="param_cv_nu_step_size" type="float" value="1.2"/>
      <param help="(-nu_stop) " label="stopping point of nu" max="1.0" min="0.0" name="param_cv_nu_stop" optional="True" type="float" value="0.7"/>
      <param help="(-sigma_start) " label="starting point of sigma" name="param_cv_sigma_start" type="float" value="1.0"/>
      <param help="(-sigma_step_size) " label="step size of sigma" name="param_cv_sigma_step_size" type="float" value="1.3"/>
      <param help="(-sigma_stop) " label="stopping point of sigma" name="param_cv_sigma_stop" type="float" value="15.0"/>
      <expand macro="advanced_options">
        <param checked="false" falsevalue="" help="(-force) " label="Overwrite tool specific checks" name="param_force" optional="True" truevalue="-force" type="boolean"/>
      </expand>
    </inputs>
    <outputs>
      <data format="txt" name="param_out"/>
    </outputs>
    <help>Trains a model for the retention time prediction of peptides from a training set.


For more information, visit http://ftp.mi.fu-berlin.de/OpenMS/release-documentation/html/TOPP_RTModel.html</help>
  </tool>
