<?xml version="1.0" encoding="UTF-8"?>
  <!--This is a configuration file for the integration of a tools into Galaxy (https://galaxyproject.org/). This file was automatically generated using CTD2Galaxy.-->
  <!--Proposed Tool Section: [Signal processing and preprocessing]-->
  <tool id="TOFCalibration" name="TOFCalibration" version="2.0.0">
    <description>Applies time of flight calibration.</description>
    <macros>
      <token name="@EXECUTABLE@">TOFCalibration</token>
      <import>macros.xml</import>
    </macros>
    <expand macro="references"/>
    <expand macro="stdio"/>
    <expand macro="requirements"/>
    <command>TOFCalibration

#if $param_in:
  -in $param_in
#end if
#if $param_out:
  -out $param_out
#end if
#if $param_ext_calibrants:
  -ext_calibrants $param_ext_calibrants
#end if
#if $param_ref_masses:
  -ref_masses $param_ref_masses
#end if
#if $param_tof_const:
  -tof_const $param_tof_const
#end if
#if $param_peak_data:
  -peak_data
#end if
-threads \${GALAXY_SLOTS:-24}
#if $param_algorithm_PeakPicker_signal_to_noise:
  -algorithm:PeakPicker:signal_to_noise $param_algorithm_PeakPicker_signal_to_noise
#end if
#if $param_algorithm_PeakPicker_peak_width:
  -algorithm:PeakPicker:peak_width $param_algorithm_PeakPicker_peak_width
#end if
#if $param_algorithm_PeakPicker_estimate_peak_width:
  -algorithm:PeakPicker:estimate_peak_width
#end if
#if $adv_opts.adv_opts_selector=='advanced':
    #if $adv_opts.param_force:
  -force
#end if
    #if $adv_opts.param_algorithm_PeakPicker_centroid_percentage:
  -algorithm:PeakPicker:centroid_percentage $adv_opts.param_algorithm_PeakPicker_centroid_percentage
#end if
    #if $adv_opts.param_algorithm_PeakPicker_fwhm_lower_bound_factor:
  -algorithm:PeakPicker:fwhm_lower_bound_factor $adv_opts.param_algorithm_PeakPicker_fwhm_lower_bound_factor
#end if
    #if $adv_opts.param_algorithm_PeakPicker_fwhm_upper_bound_factor:
  -algorithm:PeakPicker:fwhm_upper_bound_factor $adv_opts.param_algorithm_PeakPicker_fwhm_upper_bound_factor
#end if
    #if $adv_opts.param_algorithm_PeakPicker_optimization_iterations:
  -algorithm:PeakPicker:optimization:iterations $adv_opts.param_algorithm_PeakPicker_optimization_iterations
#end if
    #if $adv_opts.param_algorithm_PeakPicker_optimization_penalties_position:
  -algorithm:PeakPicker:optimization:penalties:position $adv_opts.param_algorithm_PeakPicker_optimization_penalties_position
#end if
    #if $adv_opts.param_algorithm_PeakPicker_optimization_penalties_left_width:
  -algorithm:PeakPicker:optimization:penalties:left_width $adv_opts.param_algorithm_PeakPicker_optimization_penalties_left_width
#end if
    #if $adv_opts.param_algorithm_PeakPicker_optimization_penalties_right_width:
  -algorithm:PeakPicker:optimization:penalties:right_width $adv_opts.param_algorithm_PeakPicker_optimization_penalties_right_width
#end if
    #if $adv_opts.param_algorithm_PeakPicker_optimization_penalties_height:
  -algorithm:PeakPicker:optimization:penalties:height $adv_opts.param_algorithm_PeakPicker_optimization_penalties_height
#end if
    #if $adv_opts.param_algorithm_PeakPicker_optimization_2d_tolerance_mz:
  -algorithm:PeakPicker:optimization:2d:tolerance_mz $adv_opts.param_algorithm_PeakPicker_optimization_2d_tolerance_mz
#end if
    #if $adv_opts.param_algorithm_PeakPicker_optimization_2d_max_peak_distance:
  -algorithm:PeakPicker:optimization:2d:max_peak_distance $adv_opts.param_algorithm_PeakPicker_optimization_2d_max_peak_distance
#end if
    #if $adv_opts.param_algorithm_PeakPicker_thresholds_peak_bound:
  -algorithm:PeakPicker:thresholds:peak_bound $adv_opts.param_algorithm_PeakPicker_thresholds_peak_bound
#end if
    #if $adv_opts.param_algorithm_PeakPicker_thresholds_peak_bound_ms2_level:
  -algorithm:PeakPicker:thresholds:peak_bound_ms2_level $adv_opts.param_algorithm_PeakPicker_thresholds_peak_bound_ms2_level
#end if
    #if $adv_opts.param_algorithm_PeakPicker_thresholds_correlation:
  -algorithm:PeakPicker:thresholds:correlation $adv_opts.param_algorithm_PeakPicker_thresholds_correlation
#end if
    #if $adv_opts.param_algorithm_PeakPicker_thresholds_noise_level:
  -algorithm:PeakPicker:thresholds:noise_level $adv_opts.param_algorithm_PeakPicker_thresholds_noise_level
#end if
    #if $adv_opts.param_algorithm_PeakPicker_thresholds_search_radius:
  -algorithm:PeakPicker:thresholds:search_radius $adv_opts.param_algorithm_PeakPicker_thresholds_search_radius
#end if
    #if $adv_opts.param_algorithm_PeakPicker_wavelet_transform_spacing:
  -algorithm:PeakPicker:wavelet_transform:spacing $adv_opts.param_algorithm_PeakPicker_wavelet_transform_spacing
#end if
    #if $adv_opts.param_algorithm_PeakPicker_deconvolution_deconvolution:
  -algorithm:PeakPicker:deconvolution:deconvolution
#end if
    #if $adv_opts.param_algorithm_PeakPicker_deconvolution_asym_threshold:
  -algorithm:PeakPicker:deconvolution:asym_threshold $adv_opts.param_algorithm_PeakPicker_deconvolution_asym_threshold
#end if
    #if $adv_opts.param_algorithm_PeakPicker_deconvolution_left_width:
  -algorithm:PeakPicker:deconvolution:left_width $adv_opts.param_algorithm_PeakPicker_deconvolution_left_width
#end if
    #if $adv_opts.param_algorithm_PeakPicker_deconvolution_right_width:
  -algorithm:PeakPicker:deconvolution:right_width $adv_opts.param_algorithm_PeakPicker_deconvolution_right_width
#end if
    #if $adv_opts.param_algorithm_PeakPicker_deconvolution_scaling:
  -algorithm:PeakPicker:deconvolution:scaling $adv_opts.param_algorithm_PeakPicker_deconvolution_scaling
#end if
    #if $adv_opts.param_algorithm_PeakPicker_deconvolution_fitting_fwhm_threshold:
  -algorithm:PeakPicker:deconvolution:fitting:fwhm_threshold $adv_opts.param_algorithm_PeakPicker_deconvolution_fitting_fwhm_threshold
#end if
    #if $adv_opts.param_algorithm_PeakPicker_deconvolution_fitting_eps_abs:
  -algorithm:PeakPicker:deconvolution:fitting:eps_abs $adv_opts.param_algorithm_PeakPicker_deconvolution_fitting_eps_abs
#end if
    #if $adv_opts.param_algorithm_PeakPicker_deconvolution_fitting_eps_rel:
  -algorithm:PeakPicker:deconvolution:fitting:eps_rel $adv_opts.param_algorithm_PeakPicker_deconvolution_fitting_eps_rel
#end if
    #if $adv_opts.param_algorithm_PeakPicker_deconvolution_fitting_max_iteration:
  -algorithm:PeakPicker:deconvolution:fitting:max_iteration $adv_opts.param_algorithm_PeakPicker_deconvolution_fitting_max_iteration
#end if
    #if $adv_opts.param_algorithm_PeakPicker_deconvolution_fitting_penalties_position:
  -algorithm:PeakPicker:deconvolution:fitting:penalties:position $adv_opts.param_algorithm_PeakPicker_deconvolution_fitting_penalties_position
#end if
    #if $adv_opts.param_algorithm_PeakPicker_deconvolution_fitting_penalties_height:
  -algorithm:PeakPicker:deconvolution:fitting:penalties:height $adv_opts.param_algorithm_PeakPicker_deconvolution_fitting_penalties_height
#end if
    #if $adv_opts.param_algorithm_PeakPicker_deconvolution_fitting_penalties_left_width:
  -algorithm:PeakPicker:deconvolution:fitting:penalties:left_width $adv_opts.param_algorithm_PeakPicker_deconvolution_fitting_penalties_left_width
#end if
    #if $adv_opts.param_algorithm_PeakPicker_deconvolution_fitting_penalties_right_width:
  -algorithm:PeakPicker:deconvolution:fitting:penalties:right_width $adv_opts.param_algorithm_PeakPicker_deconvolution_fitting_penalties_right_width
#end if
    #if $adv_opts.param_algorithm_PeakPicker_SignalToNoiseEstimationParameter_max_intensity:
  -algorithm:PeakPicker:SignalToNoiseEstimationParameter:max_intensity $adv_opts.param_algorithm_PeakPicker_SignalToNoiseEstimationParameter_max_intensity
#end if
    #if $adv_opts.param_algorithm_PeakPicker_SignalToNoiseEstimationParameter_auto_max_stdev_factor:
  -algorithm:PeakPicker:SignalToNoiseEstimationParameter:auto_max_stdev_factor $adv_opts.param_algorithm_PeakPicker_SignalToNoiseEstimationParameter_auto_max_stdev_factor
#end if
    #if $adv_opts.param_algorithm_PeakPicker_SignalToNoiseEstimationParameter_auto_max_percentile:
  -algorithm:PeakPicker:SignalToNoiseEstimationParameter:auto_max_percentile $adv_opts.param_algorithm_PeakPicker_SignalToNoiseEstimationParameter_auto_max_percentile
#end if
    #if $adv_opts.param_algorithm_PeakPicker_SignalToNoiseEstimationParameter_auto_mode:
  -algorithm:PeakPicker:SignalToNoiseEstimationParameter:auto_mode $adv_opts.param_algorithm_PeakPicker_SignalToNoiseEstimationParameter_auto_mode
#end if
    #if $adv_opts.param_algorithm_PeakPicker_SignalToNoiseEstimationParameter_win_len:
  -algorithm:PeakPicker:SignalToNoiseEstimationParameter:win_len $adv_opts.param_algorithm_PeakPicker_SignalToNoiseEstimationParameter_win_len
#end if
    #if $adv_opts.param_algorithm_PeakPicker_SignalToNoiseEstimationParameter_bin_count:
  -algorithm:PeakPicker:SignalToNoiseEstimationParameter:bin_count $adv_opts.param_algorithm_PeakPicker_SignalToNoiseEstimationParameter_bin_count
#end if
    #if $adv_opts.param_algorithm_PeakPicker_SignalToNoiseEstimationParameter_stdev_mp:
  -algorithm:PeakPicker:SignalToNoiseEstimationParameter:stdev_mp $adv_opts.param_algorithm_PeakPicker_SignalToNoiseEstimationParameter_stdev_mp
#end if
    #if $adv_opts.param_algorithm_PeakPicker_SignalToNoiseEstimationParameter_min_required_elements:
  -algorithm:PeakPicker:SignalToNoiseEstimationParameter:min_required_elements $adv_opts.param_algorithm_PeakPicker_SignalToNoiseEstimationParameter_min_required_elements
#end if
    #if $adv_opts.param_algorithm_PeakPicker_SignalToNoiseEstimationParameter_noise_for_empty_window:
  -algorithm:PeakPicker:SignalToNoiseEstimationParameter:noise_for_empty_window $adv_opts.param_algorithm_PeakPicker_SignalToNoiseEstimationParameter_noise_for_empty_window
#end if
#end if
</command>
    <inputs>
      <param format="mzml" help="(-in) " label="input peak or raw data file" name="param_in" optional="False" type="data"/>
      <param format="mzml" help="(-ext_calibrants) " label="input file containing the external calibrant spectra (peak or raw data)" name="param_ext_calibrants" optional="False" type="data"/>
      <param format="txt" help="(-ref_masses) " label="input file containing reference masses of the external calibrant spectra (one per line)" name="param_ref_masses" optional="False" type="data"/>
      <param format="tabular" help="(-tof_const) These can be either two or three constants &lt;br&gt;per set, depending on the conversion type. Either one set for all calibrant spectra  &lt;br&gt;(tab separated), or one for each spectrum. &lt;br&gt;For a detailed description, please have a look at the doxygen documentation.(one set, tab separated, per line)" label="File containing TOF conversion constants" name="param_tof_const" optional="False" type="data"/>
      <param checked="false" falsevalue="" help="(-peak_data) " label="set this flag, if you have peak data, not raw data (the picking parameters are accessible only from the INI file)" name="param_peak_data" optional="True" truevalue="-peak_data" type="boolean"/>
      <param help="(-signal_to_noise) " label="Minimal signal to noise ratio for a peak to be picked" min="0.0" name="param_algorithm_PeakPicker_signal_to_noise" optional="True" type="float" value="1.0"/>
      <param help="(-peak_width) " label="Approximate fwhm of the peaks" min="0.0" name="param_algorithm_PeakPicker_peak_width" optional="True" type="float" value="0.15"/>
      <param checked="false" falsevalue="" help="(-estimate_peak_width) Attention: when this flag is set, the peak_width is ignored" label="Flag if the average peak width shall be estimated" name="param_algorithm_PeakPicker_estimate_peak_width" optional="True" truevalue="-algorithm:PeakPicker:estimate_peak_width" type="boolean"/>
      <expand macro="advanced_options">
        <param checked="false" falsevalue="" help="(-force) " label="Overwrite tool specific checks" name="param_force" optional="True" truevalue="-force" type="boolean"/>
        <param help="(-centroid_percentage) If it is 1 the centroid position corresponds to the position of the highest intensity" label="Percentage of the maximum height that the raw data points must exceed to be taken into account for the calculation of the centroid" max="1.0" min="0.0" name="param_algorithm_PeakPicker_centroid_percentage" optional="True" type="float" value="0.8"/>
        <param help="(-fwhm_lower_bound_factor) All peaks with width smaller than fwhm_bound_factor * peak_width are discarded" label="Factor that calculates the minimal fwhm value from the peak_width" min="0.0" name="param_algorithm_PeakPicker_fwhm_lower_bound_factor" optional="True" type="float" value="0.7"/>
        <param help="(-fwhm_upper_bound_factor) All peaks with width greater than fwhm_upper_bound_factor * peak_width are discarded" label="Factor that calculates the maximal fwhm value from the peak_width" min="0.0" name="param_algorithm_PeakPicker_fwhm_upper_bound_factor" optional="True" type="float" value="20.0"/>
        <param help="(-iterations) " label="maximal number of iterations for the fitting step" min="1" name="param_algorithm_PeakPicker_optimization_iterations" optional="True" type="integer" value="400"/>
        <param help="(-position) " label="penalty term for the fitting of the position:If it differs too much from the initial one it can be penalized" min="0.0" name="param_algorithm_PeakPicker_optimization_penalties_position" optional="True" type="float" value="0.0"/>
        <param help="(-left_width) " label="penalty term for the fitting of the left width:If the left width differs too much from the initial one during the fitting it can be penalized" min="0.0" name="param_algorithm_PeakPicker_optimization_penalties_left_width" optional="True" type="float" value="1.0"/>
        <param help="(-right_width) " label="penalty term for the fitting of the right width:If the right width differs too much from the initial one during the fitting it can be penalized" min="0.0" name="param_algorithm_PeakPicker_optimization_penalties_right_width" optional="True" type="float" value="1.0"/>
        <param help="(-height) " label="penalty term for the fitting of the intensity (only used in 2D Optimization):If it gets negative during the fitting it can be penalized" min="0.0" name="param_algorithm_PeakPicker_optimization_penalties_height" optional="True" type="float" value="1.0"/>
        <param help="(-tolerance_mz) " label="mz tolerance for cluster construction" min="0.0" name="param_algorithm_PeakPicker_optimization_2d_tolerance_mz" optional="True" type="float" value="2.2"/>
        <param help="(-max_peak_distance) " label="maximal peak distance in mz in a cluste" min="0.0" name="param_algorithm_PeakPicker_optimization_2d_max_peak_distance" optional="True" type="float" value="1.2"/>
        <param help="(-peak_bound) " label="Minimal peak intensity" min="0.0" name="param_algorithm_PeakPicker_thresholds_peak_bound" optional="True" type="float" value="10.0"/>
        <param help="(-peak_bound_ms2_level) " label="Minimal peak intensity for MS/MS peaks" min="0.0" name="param_algorithm_PeakPicker_thresholds_peak_bound_ms2_level" optional="True" type="float" value="10.0"/>
        <param help="(-correlation) If a peak has a lower correlation it is skipped" label="minimal correlation of a peak and the raw signal" max="1.0" min="0.0" name="param_algorithm_PeakPicker_thresholds_correlation" optional="True" type="float" value="0.5"/>
        <param help="(-noise_level) " label="noise level for the search of the peak endpoints" min="0.0" name="param_algorithm_PeakPicker_thresholds_noise_level" optional="True" type="float" value="0.1"/>
        <param help="(-search_radius) " label="search radius for the search of the maximum in the signal after a maximum in the cwt was found" min="0" name="param_algorithm_PeakPicker_thresholds_search_radius" optional="True" type="integer" value="3"/>
        <param help="(-spacing) Note that the accuracy of the picked peak's centroid position depends in the Raw data spacing, i.e., 50% of raw peak distance at most" label="Spacing of the CWT" min="0.0" name="param_algorithm_PeakPicker_wavelet_transform_spacing" optional="True" type="float" value="0.001"/>
        <param checked="false" falsevalue="" help="(-deconvolution) " label="If you want heavily overlapping peaks to be separated set this value to &quot;true&quot;" name="param_algorithm_PeakPicker_deconvolution_deconvolution" optional="True" truevalue="-algorithm:PeakPicker:deconvolution:deconvolution" type="boolean"/>
        <param help="(-asym_threshold) " label="If the symmetry of a peak is smaller than asym_thresholds it is assumed that it consists of more than one peak and the deconvolution procedure is started" min="0.0" name="param_algorithm_PeakPicker_deconvolution_asym_threshold" optional="True" type="float" value="0.3"/>
        <param help="(-left_width) " label="1/left_width is the initial value for the left width of the peaks found in the deconvolution step" min="0.0" name="param_algorithm_PeakPicker_deconvolution_left_width" optional="True" type="float" value="2.0"/>
        <param help="(-right_width) " label="1/right_width is the initial value for the right width of the peaks found in the deconvolution step" min="0.0" name="param_algorithm_PeakPicker_deconvolution_right_width" optional="True" type="float" value="2.0"/>
        <param help="(-scaling) The initial value is used for charge 1, for higher charges it is adapted to scaling/charge" label="Initial scaling of the cwt used in the separation of heavily overlapping peaks" min="0.0" name="param_algorithm_PeakPicker_deconvolution_scaling" optional="True" type="float" value="0.12"/>
        <param help="(-fwhm_threshold) " label="If the FWHM of a peak is higher than 'fwhm_thresholds' it is assumed that it consists of more than one peak and the deconvolution procedure is started" min="0.0" name="param_algorithm_PeakPicker_deconvolution_fitting_fwhm_threshold" optional="True" type="float" value="0.7"/>
        <param help="(-eps_abs) " label="if the absolute error gets smaller than this value the fitting is stopped" min="0.0" name="param_algorithm_PeakPicker_deconvolution_fitting_eps_abs" optional="True" type="float" value="9.99999974738e-06"/>
        <param help="(-eps_rel) " label="if the relative error gets smaller than this value the fitting is stopped" min="0.0" name="param_algorithm_PeakPicker_deconvolution_fitting_eps_rel" optional="True" type="float" value="9.99999974738e-06"/>
        <param help="(-max_iteration) " label="maximal number of iterations for the fitting step" min="1" name="param_algorithm_PeakPicker_deconvolution_fitting_max_iteration" optional="True" type="integer" value="10"/>
        <param help="(-position) " label="penalty term for the fitting of the peak position:If the position changes more than 0.5Da during the fitting it can be penalized as well as discrepancies of the peptide mass rule" min="0.0" name="param_algorithm_PeakPicker_deconvolution_fitting_penalties_position" optional="True" type="float" value="0.0"/>
        <param help="(-height) " label="penalty term for the fitting of the intensity:If it gets negative during the fitting it can be penalized" min="0.0" name="param_algorithm_PeakPicker_deconvolution_fitting_penalties_height" optional="True" type="float" value="1.0"/>
        <param help="(-left_width) " label="penalty term for the fitting of the left width:If the left width gets too broad or negative during the fitting it can be penalized" min="0.0" name="param_algorithm_PeakPicker_deconvolution_fitting_penalties_left_width" optional="True" type="float" value="0.0"/>
        <param help="(-right_width) " label="penalty term for the fitting of the right width:If the right width gets too broad or negative during the fitting it can be penalized" min="0.0" name="param_algorithm_PeakPicker_deconvolution_fitting_penalties_right_width" optional="True" type="float" value="0.0"/>
        <param help="(-max_intensity) By default, it will be calculated automatically (see auto_mode). Only provide this parameter if you know what you are doing (and change 'auto_mode' to '-1')! All intensities EQUAL/ABOVE 'max_intensity' will not be added to the histogram. If you choose 'max_intensity' too small, the noise estimate might be too small as well. If chosen too big, the bins become quite large (which you could counter by increasing 'bin_count', which increases runtime)" label="maximal intensity considered for histogram construction" min="-1" name="param_algorithm_PeakPicker_SignalToNoiseEstimationParameter_max_intensity" optional="True" type="integer" value="-1"/>
        <param help="(-auto_max_stdev_factor) " label="parameter for 'max_intensity' estimation (if 'auto_mode' == 0): mean + 'auto_max_stdev_factor' * stdev" max="999.0" min="0.0" name="param_algorithm_PeakPicker_SignalToNoiseEstimationParameter_auto_max_stdev_factor" optional="True" type="float" value="3.0"/>
        <param help="(-auto_max_percentile) " label="parameter for 'max_intensity' estimation (if 'auto_mode' == 1): auto_max_percentile th percentile" max="100" min="0" name="param_algorithm_PeakPicker_SignalToNoiseEstimationParameter_auto_max_percentile" optional="True" type="integer" value="95"/>
        <param help="(-auto_mode) " label="method to use to determine maximal intensity: -1 --&gt; use 'max_intensity'; 0 --&gt; 'auto_max_stdev_factor' method (default); 1 --&gt; 'auto_max_percentile' method" max="1" min="-1" name="param_algorithm_PeakPicker_SignalToNoiseEstimationParameter_auto_mode" optional="True" type="integer" value="0"/>
        <param help="(-win_len) " label="window length in Thomson" min="1.0" name="param_algorithm_PeakPicker_SignalToNoiseEstimationParameter_win_len" optional="True" type="float" value="200.0"/>
        <param help="(-bin_count) " label="number of bins for intensity values" min="3" name="param_algorithm_PeakPicker_SignalToNoiseEstimationParameter_bin_count" optional="True" type="integer" value="30"/>
        <param help="(-stdev_mp) " label="multiplier for stdev" max="999.0" min="0.01" name="param_algorithm_PeakPicker_SignalToNoiseEstimationParameter_stdev_mp" optional="True" type="float" value="3.0"/>
        <param help="(-min_required_elements) " label="minimum number of elements required in a window (otherwise it is considered sparse)" min="1" name="param_algorithm_PeakPicker_SignalToNoiseEstimationParameter_min_required_elements" optional="True" type="integer" value="10"/>
        <param help="(-noise_for_empty_window) " label="noise value used for sparse windows" name="param_algorithm_PeakPicker_SignalToNoiseEstimationParameter_noise_for_empty_window" type="float" value="1e+20"/>
      </expand>
    </inputs>
    <outputs>
      <data format="mzml" name="param_out"/>
    </outputs>
    <help>Applies time of flight calibration.


For more information, visit http://ftp.mi.fu-berlin.de/OpenMS/release-documentation/html/TOPP_TOFCalibration.html</help>
  </tool>
