<?xml version='1.0' encoding='UTF-8'?>
<!--This is a configuration file for the integration of a tools into Galaxy (https://galaxyproject.org/). This file was automatically generated using CTD2Galaxy.-->
<!--Proposed Tool Section: [Utilities]-->
<tool id="SvmTheoreticalSpectrumGeneratorTrainer" name="SvmTheoreticalSpectrumGeneratorTrainer" version="2.1.0">
  <description>Trainer for SVM models as input for SvmTheoreticalSpectrumGenerator</description>
  <macros>
    <token name="@EXECUTABLE@">SvmTheoreticalSpectrumGeneratorTrainer</token>
    <import>macros.xml</import>
  </macros>
  <expand macro="references"/>
  <expand macro="stdio"/>
  <expand macro="requirements"/>
  <command>SvmTheoreticalSpectrumGeneratorTrainer

#if $param_in_spectra:
  -in_spectra $param_in_spectra
#end if
#if $param_in_identifications:
  -in_identifications $param_in_identifications
#end if
#if $param_model_output_file:
  -model_output_file $param_model_output_file
#end if
#if $param_precursor_charge:
  -precursor_charge $param_precursor_charge
#end if
#if $param_write_training_files:
  -write_training_files
#end if
#if $param_algorithm_number_intensity_levels:
  -algorithm:number_intensity_levels $param_algorithm_number_intensity_levels
#end if
#if $param_algorithm_number_regions:
  -algorithm:number_regions $param_algorithm_number_regions
#end if
#if $param_algorithm_parent_tolerance:
  -algorithm:parent_tolerance $param_algorithm_parent_tolerance
#end if
#if $param_algorithm_peak_tolerance:
  -algorithm:peak_tolerance $param_algorithm_peak_tolerance
#end if
#if $param_algorithm_add_b_ions:
  -algorithm:add_b_ions $param_algorithm_add_b_ions
#end if
#if $param_algorithm_add_y_ions:
  -algorithm:add_y_ions $param_algorithm_add_y_ions
#end if
#if $param_algorithm_add_a_ions:
  -algorithm:add_a_ions
#end if
#if $param_algorithm_add_c_ions:
  -algorithm:add_c_ions
#end if
#if $param_algorithm_add_x_ions:
  -algorithm:add_x_ions
#end if
#if $param_algorithm_add_z_ions:
  -algorithm:add_z_ions
#end if
#if $param_algorithm_add_losses:
  -algorithm:add_losses
#end if
#if $param_algorithm_add_b2_ions:
  -algorithm:add_b2_ions
#end if
#if $param_algorithm_add_y2_ions:
  -algorithm:add_y2_ions
#end if
#if $param_algorithm_svm_svc_type:
  -algorithm:svm:svc_type $param_algorithm_svm_svc_type
#end if
#if $param_algorithm_svm_svr_type:
  -algorithm:svm:svr_type $param_algorithm_svm_svr_type
#end if
#if $param_algorithm_svm_scaling:
  -algorithm:svm:scaling $param_algorithm_svm_scaling
#end if
#if $param_algorithm_svm_scaling_lower:
  -algorithm:svm:scaling_lower $param_algorithm_svm_scaling_lower
#end if
#if $param_algorithm_svm_scaling_upper:
  -algorithm:svm:scaling_upper $param_algorithm_svm_scaling_upper
#end if
#if $param_algorithm_svm_n_fold:
  -algorithm:svm:n_fold $param_algorithm_svm_n_fold
#end if
#if $param_algorithm_svm_grid:
  -algorithm:svm:grid
#end if
#if $param_algorithm_svm_additive_cv:
  -algorithm:svm:additive_cv
#end if
#if $param_algorithm_svm_svc_kernel_type:
  -algorithm:svm:svc:kernel_type $param_algorithm_svm_svc_kernel_type
#end if
#if $param_algorithm_svm_svc_degree:
  -algorithm:svm:svc:degree $param_algorithm_svm_svc_degree
#end if
#if $param_algorithm_svm_svc_gamma:
  -algorithm:svm:svc:gamma $param_algorithm_svm_svc_gamma
#end if
#if $param_algorithm_svm_svc_C:
  -algorithm:svm:svc:C $param_algorithm_svm_svc_C
#end if
#if $param_algorithm_svm_svc_nu:
  -algorithm:svm:svc:nu $param_algorithm_svm_svc_nu
#end if
#if $param_algorithm_svm_svc_balancing:
  -algorithm:svm:svc:balancing $param_algorithm_svm_svc_balancing
#end if
#if $param_algorithm_svm_svc_degree_start:
  -algorithm:svm:svc:degree_start $param_algorithm_svm_svc_degree_start
#end if
#if $param_algorithm_svm_svc_degree_step_size:
  -algorithm:svm:svc:degree_step_size $param_algorithm_svm_svc_degree_step_size
#end if
#if $param_algorithm_svm_svc_degree_stop:
  -algorithm:svm:svc:degree_stop $param_algorithm_svm_svc_degree_stop
#end if
#if $param_algorithm_svm_svc_gamma_start:
  -algorithm:svm:svc:gamma_start $param_algorithm_svm_svc_gamma_start
#end if
#if $param_algorithm_svm_svc_gamma_step_size:
  -algorithm:svm:svc:gamma_step_size $param_algorithm_svm_svc_gamma_step_size
#end if
#if $param_algorithm_svm_svc_gamma_stop:
  -algorithm:svm:svc:gamma_stop $param_algorithm_svm_svc_gamma_stop
#end if
#if $param_algorithm_svm_svc_c_start:
  -algorithm:svm:svc:c_start $param_algorithm_svm_svc_c_start
#end if
#if $param_algorithm_svm_svc_c_step_size:
  -algorithm:svm:svc:c_step_size $param_algorithm_svm_svc_c_step_size
#end if
#if $param_algorithm_svm_svc_c_stop:
  -algorithm:svm:svc:c_stop $param_algorithm_svm_svc_c_stop
#end if
#if $param_algorithm_svm_svc_nu_start:
  -algorithm:svm:svc:nu_start $param_algorithm_svm_svc_nu_start
#end if
#if $param_algorithm_svm_svc_nu_step_size:
  -algorithm:svm:svc:nu_step_size $param_algorithm_svm_svc_nu_step_size
#end if
#if $param_algorithm_svm_svc_nu_stop:
  -algorithm:svm:svc:nu_stop $param_algorithm_svm_svc_nu_stop
#end if
#if $param_algorithm_svm_svr_kernel_type:
  -algorithm:svm:svr:kernel_type $param_algorithm_svm_svr_kernel_type
#end if
#if $param_algorithm_svm_svr_degree:
  -algorithm:svm:svr:degree $param_algorithm_svm_svr_degree
#end if
#if $param_algorithm_svm_svr_gamma:
  -algorithm:svm:svr:gamma $param_algorithm_svm_svr_gamma
#end if
#if $param_algorithm_svm_svr_C:
  -algorithm:svm:svr:C $param_algorithm_svm_svr_C
#end if
#if $param_algorithm_svm_svr_p:
  -algorithm:svm:svr:p $param_algorithm_svm_svr_p
#end if
#if $param_algorithm_svm_svr_nu:
  -algorithm:svm:svr:nu $param_algorithm_svm_svr_nu
#end if
#if $param_algorithm_svm_svr_degree_start:
  -algorithm:svm:svr:degree_start $param_algorithm_svm_svr_degree_start
#end if
#if $param_algorithm_svm_svr_degree_step_size:
  -algorithm:svm:svr:degree_step_size $param_algorithm_svm_svr_degree_step_size
#end if
#if $param_algorithm_svm_svr_degree_stop:
  -algorithm:svm:svr:degree_stop $param_algorithm_svm_svr_degree_stop
#end if
#if $param_algorithm_svm_svr_gamma_start:
  -algorithm:svm:svr:gamma_start $param_algorithm_svm_svr_gamma_start
#end if
#if $param_algorithm_svm_svr_gamma_step_size:
  -algorithm:svm:svr:gamma_step_size $param_algorithm_svm_svr_gamma_step_size
#end if
#if $param_algorithm_svm_svr_gamma_stop:
  -algorithm:svm:svr:gamma_stop $param_algorithm_svm_svr_gamma_stop
#end if
#if $param_algorithm_svm_svr_p_start:
  -algorithm:svm:svr:p_start $param_algorithm_svm_svr_p_start
#end if
#if $param_algorithm_svm_svr_p_step_size:
  -algorithm:svm:svr:p_step_size $param_algorithm_svm_svr_p_step_size
#end if
#if $param_algorithm_svm_svr_p_stop:
  -algorithm:svm:svr:p_stop $param_algorithm_svm_svr_p_stop
#end if
#if $param_algorithm_svm_svr_c_start:
  -algorithm:svm:svr:c_start $param_algorithm_svm_svr_c_start
#end if
#if $param_algorithm_svm_svr_c_step_size:
  -algorithm:svm:svr:c_step_size $param_algorithm_svm_svr_c_step_size
#end if
#if $param_algorithm_svm_svr_c_stop:
  -algorithm:svm:svr:c_stop $param_algorithm_svm_svr_c_stop
#end if
#if $param_algorithm_svm_svr_nu_start:
  -algorithm:svm:svr:nu_start $param_algorithm_svm_svr_nu_start
#end if
#if $param_algorithm_svm_svr_nu_step_size:
  -algorithm:svm:svr:nu_step_size $param_algorithm_svm_svr_nu_step_size
#end if
#if $param_algorithm_svm_svr_nu_stop:
  -algorithm:svm:svr:nu_stop $param_algorithm_svm_svr_nu_stop
#end if
#if $adv_opts.adv_opts_selector=='advanced':
    #if $adv_opts.param_force:
  -force
#end if
#end if
</command>
  <inputs>
    <param name="param_in_spectra" type="data" format="mzml" optional="False" label="Input Training Spectra in mzML" help="(-in_spectra) "/>
    <param name="param_in_identifications" type="data" format="idxml" optional="False" label="Input file with corresponding sequences in idXML" help="(-in_identifications) "/>
    <param name="param_precursor_charge" type="integer" min="1" max="3" optional="True" value="2" label="Precursor charge state used for model training" help="(-precursor_charge) "/>
    <param name="param_write_training_files" display="radio" type="boolean" truevalue="-write_training_files" falsevalue="" checked="false" optional="True" label="No models are trained but input training files for libSVM command line tools are produced" help="(-write_training_files) "/>
    <param name="param_algorithm_number_intensity_levels" type="integer" value="7" label="The number of intensity bins (for secondary type models)" help="(-number_intensity_levels) "/>
    <param name="param_algorithm_number_regions" type="integer" value="3" label="The number of regions each spectrum is split to (for secondary type models)" help="(-number_regions) "/>
    <param name="param_algorithm_parent_tolerance" type="float" value="2.5" label="The maximum difference between theoretical and experimental parent mass to accept training spectrum" help="(-parent_tolerance) "/>
    <param name="param_algorithm_peak_tolerance" type="float" value="0.5" label="The maximum mass error for a peak to the expected mass of some ion type" help="(-peak_tolerance) "/>
    <param name="param_algorithm_add_b_ions" display="radio" type="select" optional="False" value="true" label="Train simulator for b-ions" help="(-add_b_ions) ">
      <option value="true" selected="true">true</option>
      <option value="false">false</option>
    </param>
    <param name="param_algorithm_add_y_ions" display="radio" type="select" optional="False" value="true" label="Train simulator for y-ions" help="(-add_y_ions) ">
      <option value="true" selected="true">true</option>
      <option value="false">false</option>
    </param>
    <param name="param_algorithm_add_a_ions" display="radio" type="boolean" truevalue="-algorithm:add_a_ions" falsevalue="" checked="false" optional="True" label="Train simulator for a-ions" help="(-add_a_ions) "/>
    <param name="param_algorithm_add_c_ions" display="radio" type="boolean" truevalue="-algorithm:add_c_ions" falsevalue="" checked="false" optional="True" label="Train simulator for c-ions" help="(-add_c_ions) "/>
    <param name="param_algorithm_add_x_ions" display="radio" type="boolean" truevalue="-algorithm:add_x_ions" falsevalue="" checked="false" optional="True" label="Train simulator for x-ions" help="(-add_x_ions) "/>
    <param name="param_algorithm_add_z_ions" display="radio" type="boolean" truevalue="-algorithm:add_z_ions" falsevalue="" checked="false" optional="True" label="Train simulator for z-ions" help="(-add_z_ions) "/>
    <param name="param_algorithm_add_losses" display="radio" type="boolean" truevalue="-algorithm:add_losses" falsevalue="" checked="false" optional="True" label="Train simulator for neutral losses of H2O and NH3 for b-ions and y-ions" help="(-add_losses) "/>
    <param name="param_algorithm_add_b2_ions" display="radio" type="boolean" truevalue="-algorithm:add_b2_ions" falsevalue="" checked="false" optional="True" label="Train simulator for doubly charged b-ions" help="(-add_b2_ions) "/>
    <param name="param_algorithm_add_y2_ions" display="radio" type="boolean" truevalue="-algorithm:add_y2_ions" falsevalue="" checked="false" optional="True" label="Train simulator for double charged y-ions" help="(-add_y2_ions) "/>
    <param name="param_algorithm_svm_svc_type" type="integer" min="0" max="1" optional="True" value="0" label="Type of the SVC: 0=C_SVC 1=NU_SVC" help="(-svc_type) "/>
    <param name="param_algorithm_svm_svr_type" type="integer" min="0" max="1" optional="True" value="1" label="Type of the SVR: 0=EPSILON_SVR 1=NU_SVR" help="(-svr_type) "/>
    <param name="param_algorithm_svm_scaling" display="radio" type="select" optional="False" value="true" label="Apply scaling of feature values" help="(-scaling) ">
      <option value="true" selected="true">true</option>
      <option value="false">false</option>
    </param>
    <param name="param_algorithm_svm_scaling_lower" type="float" value="0.0" label="Lower bound for scaling" help="(-scaling_lower) "/>
    <param name="param_algorithm_svm_scaling_upper" type="float" value="1.0" label="Upper bound for scaling" help="(-scaling_upper) "/>
    <param name="param_algorithm_svm_n_fold" type="integer" min="1" optional="True" value="5" label="n_fold cross validation is performed" help="(-n_fold) "/>
    <param name="param_algorithm_svm_grid" display="radio" type="boolean" truevalue="-algorithm:svm:grid" falsevalue="" checked="false" optional="True" label="Perform grid search" help="(-grid) "/>
    <param name="param_algorithm_svm_additive_cv" display="radio" type="boolean" truevalue="-algorithm:svm:additive_cv" falsevalue="" checked="false" optional="True" label="Additive step size (if false multiplicative)" help="(-additive_cv) "/>
    <param name="param_algorithm_svm_svc_kernel_type" type="integer" min="0" max="3" optional="True" value="2" label="Type of the kernel:  0=LINEAR 1=POLY 2=RBF 3=SIGMOID" help="(-kernel_type) "/>
    <param name="param_algorithm_svm_svc_degree" type="integer" min="1" optional="True" value="3" label="For POLY" help="(-degree) "/>
    <param name="param_algorithm_svm_svc_gamma" type="float" min="0.0" optional="True" value="0.0" label="For POLY/RBF/SIGMOID" help="(-gamma) "/>
    <param name="param_algorithm_svm_svc_C" type="float" value="1.0" label="Cost of constraint violation" help="(-C) "/>
    <param name="param_algorithm_svm_svc_nu" type="float" value="0.5" label="For NU_SVC, ONE_CLASS and NU_SVR" help="(-nu) "/>
    <param name="param_algorithm_svm_svc_balancing" display="radio" type="select" optional="False" value="true" label="Use class balanced SVC training" help="(-balancing) ">
      <option value="true" selected="true">true</option>
      <option value="false">false</option>
    </param>
    <param name="param_algorithm_svm_svc_degree_start" type="integer" min="1" optional="True" value="1" label="starting point of degree" help="(-degree_start) "/>
    <param name="param_algorithm_svm_svc_degree_step_size" type="integer" value="2" label="step size point of degree" help="(-degree_step_size) "/>
    <param name="param_algorithm_svm_svc_degree_stop" type="integer" value="4" label="stopping point of degree" help="(-degree_stop) "/>
    <param name="param_algorithm_svm_svc_gamma_start" type="float" min="0.0" max="1.0" optional="True" value="1e-05" label="starting point of gamma" help="(-gamma_start) "/>
    <param name="param_algorithm_svm_svc_gamma_step_size" type="integer" value="100" label="step size point of gamma" help="(-gamma_step_size) "/>
    <param name="param_algorithm_svm_svc_gamma_stop" type="float" value="0.1" label="stopping point of gamma" help="(-gamma_stop) "/>
    <param name="param_algorithm_svm_svc_c_start" type="float" value="0.1" label="starting point of c" help="(-c_start) "/>
    <param name="param_algorithm_svm_svc_c_step_size" type="integer" value="100" label="step size of c" help="(-c_step_size) "/>
    <param name="param_algorithm_svm_svc_c_stop" type="integer" value="1000" label="stopping point of c" help="(-c_stop) "/>
    <param name="param_algorithm_svm_svc_nu_start" type="float" min="0.0" max="1.0" optional="True" value="0.3" label="starting point of nu" help="(-nu_start) "/>
    <param name="param_algorithm_svm_svc_nu_step_size" type="integer" value="2" label="step size of nu" help="(-nu_step_size) "/>
    <param name="param_algorithm_svm_svc_nu_stop" type="float" min="0.0" max="1.0" optional="True" value="0.6" label="stopping point of nu" help="(-nu_stop) "/>
    <param name="param_algorithm_svm_svr_kernel_type" type="integer" min="0" max="3" optional="True" value="2" label="Type of the kernel:  0=LINEAR 1=POLY 2=RBF 3=SIGMOID" help="(-kernel_type) "/>
    <param name="param_algorithm_svm_svr_degree" type="integer" min="1" optional="True" value="3" label="For POLY" help="(-degree) "/>
    <param name="param_algorithm_svm_svr_gamma" type="float" min="0.0" optional="True" value="0.0" label="For POLY/RBF/SIGMOID" help="(-gamma) "/>
    <param name="param_algorithm_svm_svr_C" type="float" value="1.0" label="Cost of constraint violation" help="(-C) "/>
    <param name="param_algorithm_svm_svr_p" type="float" value="0.1" label="The epsilon for the loss function in epsilon-SVR" help="(-p) "/>
    <param name="param_algorithm_svm_svr_nu" type="float" value="0.5" label="For NU_SVC, ONE_CLASS and NU_SVR" help="(-nu) "/>
    <param name="param_algorithm_svm_svr_degree_start" type="integer" min="1" optional="True" value="1" label="starting point of degree" help="(-degree_start) "/>
    <param name="param_algorithm_svm_svr_degree_step_size" type="integer" value="2" label="step size point of degree" help="(-degree_step_size) "/>
    <param name="param_algorithm_svm_svr_degree_stop" type="integer" value="4" label="stopping point of degree" help="(-degree_stop) "/>
    <param name="param_algorithm_svm_svr_gamma_start" type="float" min="0.0" max="1.0" optional="True" value="1e-05" label="starting point of gamma" help="(-gamma_start) "/>
    <param name="param_algorithm_svm_svr_gamma_step_size" type="integer" value="100" label="step size point of gamma" help="(-gamma_step_size) "/>
    <param name="param_algorithm_svm_svr_gamma_stop" type="float" value="0.1" label="stopping point of gamma" help="(-gamma_stop) "/>
    <param name="param_algorithm_svm_svr_p_start" type="float" value="1e-05" label="starting point of p" help="(-p_start) "/>
    <param name="param_algorithm_svm_svr_p_step_size" type="integer" value="100" label="step size point of p" help="(-p_step_size) "/>
    <param name="param_algorithm_svm_svr_p_stop" type="float" value="0.1" label="stopping point of p" help="(-p_stop) "/>
    <param name="param_algorithm_svm_svr_c_start" type="float" value="0.1" label="starting point of c" help="(-c_start) "/>
    <param name="param_algorithm_svm_svr_c_step_size" type="integer" value="100" label="step size of c" help="(-c_step_size) "/>
    <param name="param_algorithm_svm_svr_c_stop" type="integer" value="1000" label="stopping point of c" help="(-c_stop) "/>
    <param name="param_algorithm_svm_svr_nu_start" type="float" min="0.0" max="1.0" optional="True" value="0.3" label="starting point of nu" help="(-nu_start) "/>
    <param name="param_algorithm_svm_svr_nu_step_size" type="integer" value="2" label="step size of nu" help="(-nu_step_size) "/>
    <param name="param_algorithm_svm_svr_nu_stop" type="float" min="0.0" max="1.0" optional="True" value="0.6" label="stopping point of nu" help="(-nu_stop) "/>
    <expand macro="advanced_options">
      <param name="param_force" display="radio" type="boolean" truevalue="-force" falsevalue="" checked="false" optional="True" label="Overwrite tool specific checks" help="(-force) "/>
    </expand>
  </inputs>
  <outputs>
    <data name="param_model_output_file" format="data"/>
  </outputs>
  <help>Trainer for SVM models as input for SvmTheoreticalSpectrumGenerator


For more information, visit http://ftp.mi.fu-berlin.de/OpenMS/release-documentation/html/UTILS_SvmTheoreticalSpectrumGeneratorTrainer.html</help>
</tool>
