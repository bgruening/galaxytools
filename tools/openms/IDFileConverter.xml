<?xml version="1.0" encoding="UTF-8"?>
  <!--This is a configuration file for the integration of a tools into Galaxy (https://galaxyproject.org/). This file was automatically generated using CTD2Galaxy.-->
  <!--Proposed Tool Section: [ID Processing]-->
  <tool id="IDFileConverter" name="IDFileConverter" version="2.0.0">
    <description>Converts identification engine file formats.</description>
    <macros>
      <token name="@EXECUTABLE@">IDFileConverter</token>
      <import>macros.xml</import>
    </macros>
    <expand macro="references"/>
    <expand macro="stdio"/>
    <expand macro="requirements"/>
    <command>IDFileConverter

#if $param_in:
  -in $param_in
#end if
#if $param_out:
  -out $param_out
#end if
#if $param_out_type:
  -out_type
  #if &quot; &quot; in str($param_out_type):
    &quot;$param_out_type&quot;
  #else
    $param_out_type
  #end if
#end if
#if $param_mz_file:
  -mz_file $param_mz_file
#end if
#if $param_mz_name:
  -mz_name     &quot;$param_mz_name&quot;
#end if
#if $param_use_precursor_data:
  -use_precursor_data
#end if
#if $param_peptideprophet_analyzed:
  -peptideprophet_analyzed
#end if
#if $param_score_type:
  -score_type
  #if &quot; &quot; in str($param_score_type):
    &quot;$param_score_type&quot;
  #else
    $param_score_type
  #end if
#end if
-threads \${GALAXY_SLOTS:-24}
#if $adv_opts.adv_opts_selector=='advanced':
    #if $adv_opts.param_ignore_proteins_per_peptide:
  -ignore_proteins_per_peptide
#end if
    #if $adv_opts.param_scan_regex:
  -scan_regex     &quot;$adv_opts.param_scan_regex&quot;
#end if
    #if $adv_opts.param_count_from_zero:
  -count_from_zero
#end if
    #if $adv_opts.param_force:
  -force
#end if
#end if
</command>
    <inputs>
      <param format="tabular,xml,txt,pepxml" help="(-in) This may be: &lt;br&gt;- a single file in a multi-purpose XML format (pepXML, protXML, idXML, mzid), &lt;br&gt;- a single file in a search engine-specific format (Mascot: mascotXML, OMSSA: omssaXML, X! Tandem: xml, Percolator: psms), &lt;br&gt;- a single text file (tab separated) with one line for all peptide sequences matching a spectrum (top N hits), &lt;br&gt;- for Sequest results, a directory containing .out files. &lt;br&gt;" label="Input file or directory containing the data to convert" name="param_in" optional="False" type="data"/>
      <param help="(-out_type) " label="Output file type (default: determined from file extension)" name="param_out_type" optional="True" type="select">
        <option value="idXML">idXML</option>
        <option value="mzid">mzid</option>
        <option value="pepXML">pepXML</option>
        <option value="FASTA">FASTA</option>
      </param>
      <param format="xml,mzxml,mzml" help="(-mz_file) " label="[pepXML, Sequest, Mascot, X! Tandem, Percolator only] Retention times will be looked up in this file" name="param_mz_file" optional="True" type="data"/>
      <param help="(-mz_name) Only necessary if different from 'mz_file'" label="[pepXML only] Experiment filename/path (extension will be removed) to match in the pepXML file ('base_name' attribute)" name="param_mz_name" size="30" type="text">
        <sanitizer>
          <valid initial="string.printable">
            <remove value="'"/>
            <remove value="&quot;"/>
          </valid>
        </sanitizer>
      </param>
      <param checked="false" falsevalue="" help="(-use_precursor_data) " label="[pepXML only] Use precursor RTs (and m/z values) from 'mz_file' for the generated peptide identifications, instead of the RTs of MS2 spectra" name="param_use_precursor_data" optional="True" truevalue="-use_precursor_data" type="boolean"/>
      <param checked="false" falsevalue="" help="(-peptideprophet_analyzed) By default a 'raw' pepXML is produced that contains only search engine results" label="[pepXML output only] Write output in the format of a PeptideProphet analysis result" name="param_peptideprophet_analyzed" optional="True" truevalue="-peptideprophet_analyzed" type="boolean"/>
      <param help="(-score_type) " label="[Percolator only] Which of the Percolator scores to report as 'the' score for a peptide hit" name="param_score_type" optional="True" type="select" value="qvalue">
        <option value="qvalue">qvalue</option>
        <option value="PEP">PEP</option>
        <option value="score">score</option>
      </param>
      <expand macro="advanced_options">
        <param checked="false" falsevalue="" help="(-ignore_proteins_per_peptide) e.g. &quot;+1&quot; in references column, &lt;br&gt;but do not list extra references in subsequent lines (try -debug 3 or 4)" label="[Sequest only] Workaround to deal with .out files that contain" name="param_ignore_proteins_per_peptide" optional="True" truevalue="-ignore_proteins_per_peptide" type="boolean"/>
        <param help="(-scan_regex) See documentation for details" label="[Mascot, Percolator only] Regular expression used to extract the scan number or retention time" name="param_scan_regex" size="30" type="text">
          <sanitizer>
            <valid initial="string.printable">
              <remove value="'"/>
              <remove value="&quot;"/>
            </valid>
          </sanitizer>
        </param>
        <param checked="false" falsevalue="" help="(-count_from_zero) " label="[Percolator only] Scan numbers extracted by 'scan_regex' start counting at zero (default: start at one)" name="param_count_from_zero" optional="True" truevalue="-count_from_zero" type="boolean"/>
        <param checked="false" falsevalue="" help="(-force) " label="Overwrite tool specific checks" name="param_force" optional="True" truevalue="-force" type="boolean"/>
      </expand>
    </inputs>
    <outputs>
      <data format="xml" name="param_out"/>
    </outputs>
    <help>Converts identification engine file formats.


For more information, visit http://ftp.mi.fu-berlin.de/OpenMS/release-documentation/html/TOPP_IDFileConverter.html</help>
  </tool>
