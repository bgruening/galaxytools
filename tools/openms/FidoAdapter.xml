<?xml version="1.0" encoding="UTF-8"?>
  <!--This is a configuration file for the integration of a tools into Galaxy (https://galaxyproject.org/). This file was automatically generated using CTD2Galaxy.-->
  <!--Proposed Tool Section: [ID Processing]-->
  <tool id="FidoAdapter" name="FidoAdapter" version="2.0.0">
    <description>Runs the protein inference engine Fido.</description>
    <macros>
      <token name="@EXECUTABLE@">FidoAdapter</token>
      <import>macros.xml</import>
    </macros>
    <expand macro="references"/>
    <expand macro="stdio"/>
    <expand macro="requirements"/>
    <command>FidoAdapter

#if $param_in:
  -in $param_in
#end if
#if $param_out:
  -out $param_out
#end if
-fido_executable fido
-fidocp_executable fido_choose_parameters
#if $param_prob_param:
  -prob_param     &quot;$param_prob_param&quot;
#end if
#if $param_separate_runs:
  -separate_runs
#end if
#if $param_greedy_group_resolution:
  -greedy_group_resolution
#end if
#if $param_no_cleanup:
  -no_cleanup
#end if
#if $param_all_PSMs:
  -all_PSMs
#end if
#if $param_group_level:
  -group_level
#end if
#if $param_log2_states:
  -log2_states $param_log2_states
#end if
-threads \${GALAXY_SLOTS:-24}
#if $param_prob_protein:
  -prob:protein $param_prob_protein
#end if
#if $param_prob_peptide:
  -prob:peptide $param_prob_peptide
#end if
#if $param_prob_spurious:
  -prob:spurious $param_prob_spurious
#end if
#if $adv_opts.adv_opts_selector=='advanced':
    #if $adv_opts.param_keep_zero_group:
  -keep_zero_group
#end if
    #if $adv_opts.param_accuracy:
  -accuracy
  #if &quot; &quot; in str($adv_opts.param_accuracy):
    &quot;$adv_opts.param_accuracy&quot;
  #else
    $adv_opts.param_accuracy
  #end if
#end if
    #if $adv_opts.param_log2_states_precalc:
  -log2_states_precalc $adv_opts.param_log2_states_precalc
#end if
    #if $adv_opts.param_force:
  -force
#end if
#end if
</command>
    <inputs>
      <param format="xml" help="(-in) " label="Input: identification results" name="param_in" optional="False" type="data"/>
      <param help="(-prob_param) e.g. for search results that were processed with the TOPP tools IDPosteriorErrorProbability followed by FalseDiscoveryRate.)" label="Read the peptide probability from this user parameter ('UserParam') in the input file, instead of from the 'score' field, if available. (Use" name="param_prob_param" size="30" type="text" value="Posterior Probability_score">
        <sanitizer>
          <valid initial="string.printable">
            <remove value="'"/>
            <remove value="&quot;"/>
          </valid>
        </sanitizer>
      </param>
      <param checked="false" falsevalue="" help="(-separate_runs) Merging results in loss of descriptive information of the single protein identification runs" label="Process multiple protein identification runs in the input separately, don't merge them" name="param_separate_runs" optional="True" truevalue="-separate_runs" type="boolean"/>
      <param checked="false" falsevalue="" help="(-greedy_group_resolution) Also adds the resolved ambiguity groups to output" label="Post-process Fido output with greedy resolution of shared peptides based on the protein probabilities" name="param_greedy_group_resolution" optional="True" truevalue="-greedy_group_resolution" type="boolean"/>
      <param checked="false" falsevalue="" help="(-no_cleanup) " label="Omit clean-up of peptide sequences (removal of non-letter characters, replacement of I with L)" name="param_no_cleanup" optional="True" truevalue="-no_cleanup" type="boolean"/>
      <param checked="false" falsevalue="" help="(-all_PSMs) " label="Consider all PSMs of each peptide, instead of only the best one" name="param_all_PSMs" optional="True" truevalue="-all_PSMs" type="boolean"/>
      <param checked="false" falsevalue="" help="(-group_level) This will lead to higher probabilities for (bigger) protein groups" label="Perform inference on protein group level (instead of individual protein level)" name="param_group_level" optional="True" truevalue="-group_level" type="boolean"/>
      <param help="(-log2_states) number of connected states in a subgraph. For a value N, subgraphs that are bigger than 2^N will be split up, sacrificing accuracy for runtime. '0' uses the default (18)" label="Binary logarithm of the max" min="0" name="param_log2_states" optional="True" type="integer" value="0"/>
      <param help="(-protein) " label="Protein prior probability ('gamma' parameter)" min="0.0" name="param_prob_protein" optional="True" type="float" value="0.0"/>
      <param help="(-peptide) " label="Peptide emission probability ('alpha' parameter)" min="0.0" name="param_prob_peptide" optional="True" type="float" value="0.0"/>
      <param help="(-spurious) " label="Spurious peptide identification probability ('beta' parameter)" min="0.0" name="param_prob_spurious" optional="True" type="float" value="0.0"/>
      <expand macro="advanced_options">
        <param checked="false" falsevalue="" help="(-keep_zero_group) " label="Keep the group of proteins with estimated probability of zero, which is otherwise removed (it may be very large)" name="param_keep_zero_group" optional="True" truevalue="-keep_zero_group" type="boolean"/>
        <param help="(-accuracy) There is a trade-off between accuracy and runtime. Empty uses the default ('best')" label="Accuracy level of start parameters" name="param_accuracy" optional="True" type="select">
          <option value=""></option>
          <option value="best">best</option>
          <option value="relaxed">relaxed</option>
          <option value="sloppy">sloppy</option>
        </param>
        <param help="(-log2_states_precalc) " label="Like 'log2_states', but allows to set a separate limit for the precalculation" min="0" name="param_log2_states_precalc" optional="True" type="integer" value="0"/>
        <param checked="false" falsevalue="" help="(-force) " label="Overwrite tool specific checks" name="param_force" optional="True" truevalue="-force" type="boolean"/>
      </expand>
    </inputs>
    <outputs>
      <data format="xml" name="param_out"/>
    </outputs>
    <help>Runs the protein inference engine Fido.


For more information, visit http://ftp.mi.fu-berlin.de/OpenMS/release-documentation/html/TOPP_FidoAdapter.html</help>
  </tool>
