<?xml version="1.0" encoding="UTF-8"?>
  <!--This is a configuration file for the integration of a tools into Galaxy (https://galaxyproject.org/). This file was automatically generated using CTD2Galaxy.-->
  <!--Proposed Tool Section: [Utilities]-->
  <tool id="OpenSwathWorkflow" name="OpenSwathWorkflow" version="2.0.0">
    <description>Complete workflow to run OpenSWATH</description>
    <macros>
      <token name="@EXECUTABLE@">OpenSwathWorkflow</token>
      <import>macros.xml</import>
    </macros>
    <expand macro="references"/>
    <expand macro="stdio"/>
    <expand macro="requirements"/>
    <command>OpenSwathWorkflow

-in
  #for token in $param_in:
    $token
  #end for
#if $param_tr:
  -tr $param_tr
#end if
#if $param_tr_type:
  -tr_type
  #if &quot; &quot; in str($param_tr_type):
    &quot;$param_tr_type&quot;
  #else
    $param_tr_type
  #end if
#end if
#if $param_tr_irt:
  -tr_irt $param_tr_irt
#end if
#if $output_fmt == 'tsv':
  -out_tsv "$out_tsv"
#else:
  -out_features "$out_features"
#end if
#if $param_out_chrom:
  -out_chrom $param_out_chrom
#end if
#if $param_rt_extraction_window:
  -rt_extraction_window $param_rt_extraction_window
#end if
#if $param_mz_extraction_window:
  -mz_extraction_window $param_mz_extraction_window
#end if
#if $param_ppm:
  -ppm
#end if
-threads \${GALAXY_SLOTS:-24}
#if $param_Scoring_stop_report_after_feature:
  -Scoring:stop_report_after_feature $param_Scoring_stop_report_after_feature
#end if
#if $param_Scoring_rt_normalization_factor:
  -Scoring:rt_normalization_factor $param_Scoring_rt_normalization_factor
#end if
#if $param_Scoring_TransitionGroupPicker_stop_after_feature:
  -Scoring:TransitionGroupPicker:stop_after_feature $param_Scoring_TransitionGroupPicker_stop_after_feature
#end if
#if $param_Scoring_TransitionGroupPicker_min_peak_width:
  -Scoring:TransitionGroupPicker:min_peak_width $param_Scoring_TransitionGroupPicker_min_peak_width
#end if
#if $param_Scoring_TransitionGroupPicker_recalculate_peaks:
  -Scoring:TransitionGroupPicker:recalculate_peaks     &quot;$param_Scoring_TransitionGroupPicker_recalculate_peaks&quot;
#end if
#if $param_Scoring_TransitionGroupPicker_recalculate_peaks_max_z:
  -Scoring:TransitionGroupPicker:recalculate_peaks_max_z $param_Scoring_TransitionGroupPicker_recalculate_peaks_max_z
#end if
#if $param_Scoring_TransitionGroupPicker_minimal_quality:
  -Scoring:TransitionGroupPicker:minimal_quality $param_Scoring_TransitionGroupPicker_minimal_quality
#end if
#if $param_Scoring_TransitionGroupPicker_compute_peak_quality:
  -Scoring:TransitionGroupPicker:compute_peak_quality     &quot;$param_Scoring_TransitionGroupPicker_compute_peak_quality&quot;
#end if
#if $param_Scoring_TransitionGroupPicker_PeakPickerMRM_sgolay_frame_length:
  -Scoring:TransitionGroupPicker:PeakPickerMRM:sgolay_frame_length $param_Scoring_TransitionGroupPicker_PeakPickerMRM_sgolay_frame_length
#end if
#if $param_Scoring_TransitionGroupPicker_PeakPickerMRM_sgolay_polynomial_order:
  -Scoring:TransitionGroupPicker:PeakPickerMRM:sgolay_polynomial_order $param_Scoring_TransitionGroupPicker_PeakPickerMRM_sgolay_polynomial_order
#end if
#if $param_Scoring_TransitionGroupPicker_PeakPickerMRM_gauss_width:
  -Scoring:TransitionGroupPicker:PeakPickerMRM:gauss_width $param_Scoring_TransitionGroupPicker_PeakPickerMRM_gauss_width
#end if
#if $param_Scoring_TransitionGroupPicker_PeakPickerMRM_use_gauss:
  -Scoring:TransitionGroupPicker:PeakPickerMRM:use_gauss
#end if
#if $param_Scoring_TransitionGroupPicker_PeakPickerMRM_peak_width:
  -Scoring:TransitionGroupPicker:PeakPickerMRM:peak_width $param_Scoring_TransitionGroupPicker_PeakPickerMRM_peak_width
#end if
#if $param_Scoring_TransitionGroupPicker_PeakPickerMRM_signal_to_noise:
  -Scoring:TransitionGroupPicker:PeakPickerMRM:signal_to_noise $param_Scoring_TransitionGroupPicker_PeakPickerMRM_signal_to_noise
#end if
#if $param_Scoring_TransitionGroupPicker_PeakPickerMRM_write_sn_log_messages:
  -Scoring:TransitionGroupPicker:PeakPickerMRM:write_sn_log_messages
#end if
#if $param_Scoring_TransitionGroupPicker_PeakPickerMRM_remove_overlapping_peaks:
  -Scoring:TransitionGroupPicker:PeakPickerMRM:remove_overlapping_peaks
#end if
#if $param_Scoring_TransitionGroupPicker_PeakPickerMRM_method:
  -Scoring:TransitionGroupPicker:PeakPickerMRM:method
  #if &quot; &quot; in str($param_Scoring_TransitionGroupPicker_PeakPickerMRM_method):
    &quot;$param_Scoring_TransitionGroupPicker_PeakPickerMRM_method&quot;
  #else
    $param_Scoring_TransitionGroupPicker_PeakPickerMRM_method
  #end if
#end if
#if $param_Scoring_DIAScoring_dia_extraction_window:
  -Scoring:DIAScoring:dia_extraction_window $param_Scoring_DIAScoring_dia_extraction_window
#end if
#if $param_Scoring_DIAScoring_dia_centroided:
  -Scoring:DIAScoring:dia_centroided
#end if
#if $param_Scoring_DIAScoring_dia_byseries_intensity_min:
  -Scoring:DIAScoring:dia_byseries_intensity_min $param_Scoring_DIAScoring_dia_byseries_intensity_min
#end if
#if $param_Scoring_DIAScoring_dia_byseries_ppm_diff:
  -Scoring:DIAScoring:dia_byseries_ppm_diff $param_Scoring_DIAScoring_dia_byseries_ppm_diff
#end if
#if $param_Scoring_DIAScoring_dia_nr_isotopes:
  -Scoring:DIAScoring:dia_nr_isotopes $param_Scoring_DIAScoring_dia_nr_isotopes
#end if
#if $param_Scoring_DIAScoring_dia_nr_charges:
  -Scoring:DIAScoring:dia_nr_charges $param_Scoring_DIAScoring_dia_nr_charges
#end if
#if $param_Scoring_DIAScoring_peak_before_mono_max_ppm_diff:
  -Scoring:DIAScoring:peak_before_mono_max_ppm_diff $param_Scoring_DIAScoring_peak_before_mono_max_ppm_diff
#end if
#if $param_Scoring_EMGScoring_max_iteration:
  -Scoring:EMGScoring:max_iteration $param_Scoring_EMGScoring_max_iteration
#end if
#if $param_outlierDetection_outlierMethod:
  -outlierDetection:outlierMethod
  #if &quot; &quot; in str($param_outlierDetection_outlierMethod):
    &quot;$param_outlierDetection_outlierMethod&quot;
  #else
    $param_outlierDetection_outlierMethod
  #end if
#end if
#if $param_outlierDetection_useIterativeChauvenet:
  -outlierDetection:useIterativeChauvenet
#end if
#if $param_outlierDetection_RANSACMaxIterations:
  -outlierDetection:RANSACMaxIterations $param_outlierDetection_RANSACMaxIterations
#end if
#if $param_outlierDetection_RANSACMaxPercentRTThreshold:
  -outlierDetection:RANSACMaxPercentRTThreshold $param_outlierDetection_RANSACMaxPercentRTThreshold
#end if
#if $param_outlierDetection_RANSACSamplingSize:
  -outlierDetection:RANSACSamplingSize $param_outlierDetection_RANSACSamplingSize
#end if
#if $param_outlierDetection_estimateBestPeptides:
  -outlierDetection:estimateBestPeptides
#end if
#if $param_outlierDetection_InitialQualityCutoff:
  -outlierDetection:InitialQualityCutoff $param_outlierDetection_InitialQualityCutoff
#end if
#if $param_outlierDetection_OverallQualityCutoff:
  -outlierDetection:OverallQualityCutoff $param_outlierDetection_OverallQualityCutoff
#end if
#if $param_outlierDetection_NrRTBins:
  -outlierDetection:NrRTBins $param_outlierDetection_NrRTBins
#end if
#if $param_outlierDetection_MinPeptidesPerBin:
  -outlierDetection:MinPeptidesPerBin $param_outlierDetection_MinPeptidesPerBin
#end if
#if $param_outlierDetection_MinBinsFilled:
  -outlierDetection:MinBinsFilled $param_outlierDetection_MinBinsFilled
#end if
#if $adv_opts.adv_opts_selector=='advanced':
    #if $adv_opts.param_rt_norm:
  -rt_norm $adv_opts.param_rt_norm
#end if
    #if $adv_opts.param_swath_windows_file:
  -swath_windows_file $adv_opts.param_swath_windows_file
#end if
    #if $adv_opts.param_sort_swath_maps:
  -sort_swath_maps
#end if
    #if $adv_opts.param_use_ms1_traces:
  -use_ms1_traces
#end if
    #if $adv_opts.param_min_upper_edge_dist:
  -min_upper_edge_dist $adv_opts.param_min_upper_edge_dist
#end if
    #if $adv_opts.param_extra_rt_extraction_window:
  -extra_rt_extraction_window $adv_opts.param_extra_rt_extraction_window
#end if
    #if $adv_opts.param_min_rsq:
  -min_rsq $adv_opts.param_min_rsq
#end if
    #if $adv_opts.param_min_coverage:
  -min_coverage $adv_opts.param_min_coverage
#end if
    #if $adv_opts.param_split_file_input:
  -split_file_input
#end if
    #if $adv_opts.param_use_elution_model_score:
  -use_elution_model_score
#end if
    #if $adv_opts.param_readOptions:
  -readOptions
  #if &quot; &quot; in str($adv_opts.param_readOptions):
    &quot;$adv_opts.param_readOptions&quot;
  #else
    $adv_opts.param_readOptions
  #end if
#end if
    #if $adv_opts.param_tempDirectory:
  -tempDirectory     &quot;$adv_opts.param_tempDirectory&quot;
#end if
    #if $adv_opts.param_extraction_function:
  -extraction_function
  #if &quot; &quot; in str($adv_opts.param_extraction_function):
    &quot;$adv_opts.param_extraction_function&quot;
  #else
    $adv_opts.param_extraction_function
  #end if
#end if
    #if $adv_opts.param_batchSize:
  -batchSize $adv_opts.param_batchSize
#end if
    #if $adv_opts.param_force:
  -force
#end if
    #if $adv_opts.param_Scoring_quantification_cutoff:
  -Scoring:quantification_cutoff $adv_opts.param_Scoring_quantification_cutoff
#end if
    #if $adv_opts.param_Scoring_write_convex_hull:
  -Scoring:write_convex_hull
#end if
    #if $adv_opts.param_Scoring_Scores_use_shape_score:
  -Scoring:Scores:use_shape_score
#end if
    #if $adv_opts.param_Scoring_Scores_use_coelution_score:
  -Scoring:Scores:use_coelution_score
#end if
    #if $adv_opts.param_Scoring_Scores_use_rt_score:
  -Scoring:Scores:use_rt_score
#end if
    #if $adv_opts.param_Scoring_Scores_use_library_score:
  -Scoring:Scores:use_library_score
#end if
    #if $adv_opts.param_Scoring_Scores_use_intensity_score:
  -Scoring:Scores:use_intensity_score
#end if
    #if $adv_opts.param_Scoring_Scores_use_nr_peaks_score:
  -Scoring:Scores:use_nr_peaks_score
#end if
    #if $adv_opts.param_Scoring_Scores_use_total_xic_score:
  -Scoring:Scores:use_total_xic_score
#end if
    #if $adv_opts.param_Scoring_Scores_use_sn_score:
  -Scoring:Scores:use_sn_score
#end if
    #if $adv_opts.param_Scoring_Scores_use_dia_scores:
  -Scoring:Scores:use_dia_scores
#end if
    #if $adv_opts.param_Scoring_Scores_use_ms1_correlation:
  -Scoring:Scores:use_ms1_correlation
#end if
    #if $adv_opts.param_Scoring_Scores_use_ms1_fullscan:
  -Scoring:Scores:use_ms1_fullscan
#end if
#end if
</command>
    <inputs>
      <param format="mzxml,mzml" help="(-in) " label="Input files separated by blank" multiple="true" name="param_in" optional="False" size="30" type="data">
        <sanitizer>
          <valid initial="string.printable">
            <remove value="'"/>
            <remove value="&quot;"/>
          </valid>
        </sanitizer>
      </param>
      <param format="tabular,traml" help="(-tr) " label="transition file ('TraML','tsv' or 'csv')" name="param_tr" optional="False" type="data"/>
      <param help="(-tr_type) " label="input file type -- default: determined from file extension or content" name="param_tr_type" optional="True" type="select">
        <option value="traML">traML</option>
        <option value="tsv">tsv</option>
        <option value="csv">csv</option>
      </param>
      <param format="traml" help="(-tr_irt) " label="transition file ('TraML')" name="param_tr_irt" optional="True" type="data"/>
      <param name="output_fmt" type="select" label="Select feature list output format">
        <option value="featurexml">FeatureXML</option>
        <option value="tsv">TSV output file (mProphet compatible)</option>
      </param>
      <param help="(-rt_extraction_window) " label="Only extract RT around this value (-1 means extract over the whole range, a value of 600 means to extract around +/- 300 s of the expected elution)" name="param_rt_extraction_window" type="float" value="600.0"/>
      <param help="(-mz_extraction_window) " label="Extraction window used (in Thomson, to use ppm see -ppm flag)" min="0.0" name="param_mz_extraction_window" optional="True" type="float" value="0.05"/>
      <param checked="false" falsevalue="" help="(-ppm) " label="m/z extraction_window is in ppm" name="param_ppm" optional="True" truevalue="-ppm" type="boolean"/>
      <param help="(-stop_report_after_feature) " label="Stop reporting after feature (ordered by quality; -1 means do not stop)" name="param_Scoring_stop_report_after_feature" type="integer" value="-1"/>
      <param help="(-rt_normalization_factor) e.g. it goes from 0 to 100, set this value to 100)" label="The normalized RT is expected to be between 0 and 1. If your normalized RT has a different range, pass this here (" name="param_Scoring_rt_normalization_factor" type="float" value="100.0"/>
      <param help="(-stop_after_feature) " label="Stop finding after feature (ordered by intensity; -1 means do not stop)" name="param_Scoring_TransitionGroupPicker_stop_after_feature" type="integer" value="-1"/>
      <param help="(-min_peak_width) " label="Minimal peak width (s), discard all peaks below this value (-1 means no action)" name="param_Scoring_TransitionGroupPicker_min_peak_width" type="float" value="14.0"/>
      <param help="(-recalculate_peaks) Tries to use the consensus (median) peak border if theof variation within the picked peaks is too large" label="Tries to get better peak picking by looking at peak consistency of all picked peaks" name="param_Scoring_TransitionGroupPicker_recalculate_peaks" size="30" type="text" value="true">
        <sanitizer>
          <valid initial="string.printable">
            <remove value="'"/>
            <remove value="&quot;"/>
          </valid>
        </sanitizer>
      </param>
      <param help="(-recalculate_peaks_max_z) If the Z-Score is above this value, the median is used for peak boundaries (default value 1.0)" label="Determines the maximal Z-Score (difference measured in standard deviations) that is considered too large for peak boundaries" name="param_Scoring_TransitionGroupPicker_recalculate_peaks_max_z" type="float" value="0.75"/>
      <param help="(-minimal_quality) " label="Only if compute_peak_quality is set, this parameter will not consider peaks below this quality threshold" name="param_Scoring_TransitionGroupPicker_minimal_quality" type="float" value="-1.5"/>
      <param help="(-compute_peak_quality) The resulting score is centered around zero and values above 0 are generally good and below -1 or -2 are usually bad" label="Tries to compute a quality value for each peakgroup and detect outlier transitions" name="param_Scoring_TransitionGroupPicker_compute_peak_quality" size="30" type="text" value="true">
        <sanitizer>
          <valid initial="string.printable">
            <remove value="'"/>
            <remove value="&quot;"/>
          </valid>
        </sanitizer>
      </param>
      <param help="(-sgolay_frame_length) &lt;br&gt;This number has to be uneven. If it is not, 1 will be added" label="The number of subsequent data points used for smoothing" name="param_Scoring_TransitionGroupPicker_PeakPickerMRM_sgolay_frame_length" type="integer" value="11"/>
      <param help="(-sgolay_polynomial_order) " label="Order of the polynomial that is fitted" name="param_Scoring_TransitionGroupPicker_PeakPickerMRM_sgolay_polynomial_order" type="integer" value="3"/>
      <param help="(-gauss_width) " label="Gaussian width in seconds, estimated peak size" name="param_Scoring_TransitionGroupPicker_PeakPickerMRM_gauss_width" type="float" value="30.0"/>
      <param checked="false" falsevalue="" help="(-use_gauss) " label="Use Gaussian filter for smoothing (alternative is Savitzky-Golay filter)" name="param_Scoring_TransitionGroupPicker_PeakPickerMRM_use_gauss" optional="True" truevalue="-Scoring:TransitionGroupPicker:PeakPickerMRM:use_gauss" type="boolean"/>
      <param help="(-peak_width) e.g. extend the peak at least by this amount on both sides) in seconds. -1 turns this feature off" label="Force a certain minimal peak_width on the data (" name="param_Scoring_TransitionGroupPicker_PeakPickerMRM_peak_width" type="float" value="-1.0"/>
      <param help="(-signal_to_noise) e.g. 1.0) can lead to peaks whose flanks are not fully captured" label="Signal-to-noise threshold at which a peak will not be extended any more. Note that setting this too high (" min="0.0" name="param_Scoring_TransitionGroupPicker_PeakPickerMRM_signal_to_noise" optional="True" type="float" value="0.1"/>
      <param checked="false" falsevalue="" help="(-write_sn_log_messages) " label="Write out log messages of the signal-to-noise estimator in case of sparse windows or median in rightmost histogram bin" name="param_Scoring_TransitionGroupPicker_PeakPickerMRM_write_sn_log_messages" optional="True" truevalue="-Scoring:TransitionGroupPicker:PeakPickerMRM:write_sn_log_messages" type="boolean"/>
      <param checked="true" falsevalue="" help="(-remove_overlapping_peaks) " label="Try to remove overlapping peaks during peak picking" name="param_Scoring_TransitionGroupPicker_PeakPickerMRM_remove_overlapping_peaks" optional="True" truevalue="-Scoring:TransitionGroupPicker:PeakPickerMRM:remove_overlapping_peaks" type="boolean"/>
      <param help="(-method) " label="Which method to choose for chromatographic peak-picking (OpenSWATH legacy, corrected picking or Crawdad)" name="param_Scoring_TransitionGroupPicker_PeakPickerMRM_method" optional="True" type="select" value="corrected">
        <option value="legacy">legacy</option>
        <option value="corrected">corrected</option>
        <option value="crawdad">crawdad</option>
      </param>
      <param help="(-dia_extraction_window) " label="DIA extraction window in Th" min="0.0" name="param_Scoring_DIAScoring_dia_extraction_window" optional="True" type="float" value="0.05"/>
      <param checked="false" falsevalue="" help="(-dia_centroided) " label="Use centroded DIA data" name="param_Scoring_DIAScoring_dia_centroided" optional="True" truevalue="-Scoring:DIAScoring:dia_centroided" type="boolean"/>
      <param help="(-dia_byseries_intensity_min) " label="DIA b/y series minimum intensity to conside" min="0.0" name="param_Scoring_DIAScoring_dia_byseries_intensity_min" optional="True" type="float" value="300.0"/>
      <param help="(-dia_byseries_ppm_diff) " label="DIA b/y series minimal difference in ppm to conside" min="0.0" name="param_Scoring_DIAScoring_dia_byseries_ppm_diff" optional="True" type="float" value="10.0"/>
      <param help="(-dia_nr_isotopes) " label="DIA nr of isotopes to conside" min="0" name="param_Scoring_DIAScoring_dia_nr_isotopes" optional="True" type="integer" value="4"/>
      <param help="(-dia_nr_charges) " label="DIA nr of charges to conside" min="0" name="param_Scoring_DIAScoring_dia_nr_charges" optional="True" type="integer" value="4"/>
      <param help="(-peak_before_mono_max_ppm_diff) " label="DIA maximal difference in ppm to count a peak at lower m/z when searching for evidence that a peak might not be monoisotopic" min="0.0" name="param_Scoring_DIAScoring_peak_before_mono_max_ppm_diff" optional="True" type="float" value="20.0"/>
      <param help="(-max_iteration) " label="Maximum number of iterations using by Levenberg-Marquardt algorithm" name="param_Scoring_EMGScoring_max_iteration" type="integer" value="10"/>
      <param help="(-outlierMethod) Iterative methods remove one outlier at a time. Jackknife approach optimizes for maximum r-squared improvement while 'iter_residual' removes the datapoint with the largest residual error (removal by residual is computationally cheaper, use this with lots of peptides)" label="Which outlier detection method to use (valid: 'iter_residual', 'iter_jackknife', 'ransac', 'none')" name="param_outlierDetection_outlierMethod" optional="True" type="select" value="iter_residual">
        <option value="iter_residual">iter_residual</option>
        <option value="iter_jackknife">iter_jackknife</option>
        <option value="ransac">ransac</option>
        <option value="none">none</option>
      </param>
      <param checked="false" falsevalue="" help="(-useIterativeChauvenet) This should be used if the algorithm removes too many datapoints but it may lead to true outliers being retained" label="Whether to use Chauvenet's criterion when using iterative methods" name="param_outlierDetection_useIterativeChauvenet" optional="True" truevalue="-outlierDetection:useIterativeChauvenet" type="boolean"/>
      <param help="(-RANSACMaxIterations) " label="Maximum iterations for the RANSAC outlier detection algorithm" name="param_outlierDetection_RANSACMaxIterations" type="integer" value="1000"/>
      <param help="(-RANSACMaxPercentRTThreshold) Default is set to 3% which is around +/- 4 minutes on a 120 gradient" label="Maximum threshold in RT dimension for the RANSAC outlier detection algorithm (in percent of the total gradient)" name="param_outlierDetection_RANSACMaxPercentRTThreshold" type="integer" value="3"/>
      <param help="(-RANSACSamplingSize) " label="Sampling size of data points per iteration for the RANSAC outlier detection algorithm" name="param_outlierDetection_RANSACSamplingSize" type="integer" value="10"/>
      <param checked="false" falsevalue="" help="(-estimateBestPeptides) e.g. due to them being endogenous peptides or using a less curated list of peptides)" label="Whether the algorithms should try to choose the best peptides based on their peak shape for normalization. Use this option you do not expect all your peptides to be detected in a sample and too many 'bad' peptides enter the outlier removal step (" name="param_outlierDetection_estimateBestPeptides" optional="True" truevalue="-outlierDetection:estimateBestPeptides" type="boolean"/>
      <param help="(-InitialQualityCutoff) -2 to 2)" label="The initial overall quality cutoff for a peak to be scored (range ca" name="param_outlierDetection_InitialQualityCutoff" type="float" value="0.5"/>
      <param help="(-OverallQualityCutoff) 0 to 10)" label="The overall quality cutoff for a peak to go into the retention time estimation (range ca" name="param_outlierDetection_OverallQualityCutoff" type="float" value="5.5"/>
      <param help="(-NrRTBins) This option should be used to ensure that there is a complete coverage of the RT space (this should detect cases where only a part of the RT gradient is actually covered by normalization peptides)" label="Number of RT bins to use to compute coverage" name="param_outlierDetection_NrRTBins" type="integer" value="10"/>
      <param help="(-MinPeptidesPerBin) " label="Minimal number of peptides that are required for a bin to counted as 'covered'" name="param_outlierDetection_MinPeptidesPerBin" type="integer" value="1"/>
      <param help="(-MinBinsFilled) " label="Minimal number of bins required to be covered" name="param_outlierDetection_MinBinsFilled" type="integer" value="8"/>
      <expand macro="advanced_options">
        <param format="trafoxml" help="(-rt_norm) If set, tr_irt may be omitted" label="RT normalization file (how to map the RTs of this run to the ones stored in the library)" name="param_rt_norm" optional="True" type="data"/>
        <param format="text" help="(-swath_windows_file) Note that the first line is a header and will be skipped" label="Optional, tab separated file containing the SWATH windows: lower_offset upper_offset \newline 400 425 \newline .." name="param_swath_windows_file" type="data"/>
        <param checked="false" falsevalue="" help="(-sort_swath_maps) " label="Sort of input SWATH files when matching to SWATH windows from swath_windows_file" name="param_sort_swath_maps" optional="True" truevalue="-sort_swath_maps" type="boolean"/>
        <param checked="false" falsevalue="" help="(-use_ms1_traces) " label="Extract the precursor ion trace(s) and use for scoring" name="param_use_ms1_traces" optional="True" truevalue="-use_ms1_traces" type="boolean"/>
        <param help="(-min_upper_edge_dist) " label="Minimal distance to the edge to still consider a precursor, in Thomson" name="param_min_upper_edge_dist" type="float" value="0.0"/>
        <param help="(-extra_rt_extraction_window) e.g. to visually inspect a larger area of the chromatogram)" label="Output an XIC with a RT-window that by this much larger (" min="0.0" name="param_extra_rt_extraction_window" optional="True" type="float" value="0.0"/>
        <param help="(-min_rsq) " label="Minimum r-squared of RT peptides regression" name="param_min_rsq" type="float" value="0.95"/>
        <param help="(-min_coverage) " label="Minimum relative amount of RT peptides to keep" name="param_min_coverage" type="float" value="0.6"/>
        <param checked="false" falsevalue="" help="(-split_file_input) " label="The input files each contain one single SWATH (alternatively: all SWATH are in separate files)" name="param_split_file_input" optional="True" truevalue="-split_file_input" type="boolean"/>
        <param checked="false" falsevalue="" help="(-use_elution_model_score) " label="Turn on elution model score (EMG fit to peak)" name="param_use_elution_model_score" optional="True" truevalue="-use_elution_model_score" type="boolean"/>
        <param help="(-readOptions) If you choose cache, make sure to also set tempDirectory" label="Whether to run OpenSWATH directly on the input data, cache data to disk first or to perform a datareduction step first" name="param_readOptions" optional="True" type="select" value="normal">
          <option value="normal">normal</option>
          <option value="cache">cache</option>
        </param>
        <param help="(-tempDirectory) " label="Temporary directory to store cached files for example" name="param_tempDirectory" size="30" type="text" value="/tmp/">
          <sanitizer>
            <valid initial="string.printable">
              <remove value="'"/>
              <remove value="&quot;"/>
            </valid>
          </sanitizer>
        </param>
        <param help="(-extraction_function) " label="Function used to extract the signal" name="param_extraction_function" optional="True" type="select" value="tophat">
          <option value="tophat">tophat</option>
          <option value="bartlett">bartlett</option>
        </param>
        <param help="(-batchSize) " label="The batch size of chromatograms to process (0 means to only have one batch, sensible values are around 500-1000)" min="0" name="param_batchSize" optional="True" type="integer" value="0"/>
        <param checked="false" falsevalue="" help="(-force) " label="Overwrite tool specific checks" name="param_force" optional="True" truevalue="-force" type="boolean"/>
        <param help="(-quantification_cutoff) " label="Cutoff in m/z below which peaks should not be used for quantification any more" min="0.0" name="param_Scoring_quantification_cutoff" optional="True" type="float" value="0.0"/>
        <param checked="false" falsevalue="" help="(-write_convex_hull) " label="Whether to write out all points of all features into the featureXML" name="param_Scoring_write_convex_hull" optional="True" truevalue="-Scoring:write_convex_hull" type="boolean"/>
        <param checked="true" falsevalue="" help="(-use_shape_score) " label="Use the shape score (this score measures the similarity in shape of the transitions using a cross-correlation)" name="param_Scoring_Scores_use_shape_score" optional="True" truevalue="-Scoring:Scores:use_shape_score" type="boolean"/>
        <param checked="true" falsevalue="" help="(-use_coelution_score) " label="Use the coelution score (this score measures the similarity in coelution of the transitions using a cross-correlation)" name="param_Scoring_Scores_use_coelution_score" optional="True" truevalue="-Scoring:Scores:use_coelution_score" type="boolean"/>
        <param checked="true" falsevalue="" help="(-use_rt_score) " label="Use the retention time score (this score measure the difference in retention time)" name="param_Scoring_Scores_use_rt_score" optional="True" truevalue="-Scoring:Scores:use_rt_score" type="boolean"/>
        <param checked="true" falsevalue="" help="(-use_library_score) " label="Use the library score" name="param_Scoring_Scores_use_library_score" optional="True" truevalue="-Scoring:Scores:use_library_score" type="boolean"/>
        <param checked="true" falsevalue="" help="(-use_intensity_score) " label="Use the intensity score" name="param_Scoring_Scores_use_intensity_score" optional="True" truevalue="-Scoring:Scores:use_intensity_score" type="boolean"/>
        <param checked="true" falsevalue="" help="(-use_nr_peaks_score) " label="Use the number of peaks score" name="param_Scoring_Scores_use_nr_peaks_score" optional="True" truevalue="-Scoring:Scores:use_nr_peaks_score" type="boolean"/>
        <param checked="true" falsevalue="" help="(-use_total_xic_score) " label="Use the total XIC score" name="param_Scoring_Scores_use_total_xic_score" optional="True" truevalue="-Scoring:Scores:use_total_xic_score" type="boolean"/>
        <param checked="true" falsevalue="" help="(-use_sn_score) " label="Use the SN (signal to noise) score" name="param_Scoring_Scores_use_sn_score" optional="True" truevalue="-Scoring:Scores:use_sn_score" type="boolean"/>
        <param checked="true" falsevalue="" help="(-use_dia_scores) " label="Use the DIA (SWATH) scores" name="param_Scoring_Scores_use_dia_scores" optional="True" truevalue="-Scoring:Scores:use_dia_scores" type="boolean"/>
        <param checked="false" falsevalue="" help="(-use_ms1_correlation) " label="Use the correlation scores with the MS1 elution profiles" name="param_Scoring_Scores_use_ms1_correlation" optional="True" truevalue="-Scoring:Scores:use_ms1_correlation" type="boolean"/>
        <param checked="false" falsevalue="" help="(-use_ms1_fullscan) " label="Use the full MS1 scan at the peak apex for scoring (ppm accuracy of precursor and isotopic pattern)" name="param_Scoring_Scores_use_ms1_fullscan" optional="True" truevalue="-Scoring:Scores:use_ms1_fullscan" type="boolean"/>
      </expand>
    </inputs>
    <outputs>
    <data name="out_features" format="featurexml">
      <filter>output_fmt == 'featurexml'</filter>
    </data>
    <data name="out_tsv" format="tabular">
      <filter>output_fmt == 'tsv'</filter>
    </data>
    <data format="mzml" name="param_out_chrom"/>
    </outputs>
    <help>Complete workflow to run OpenSWATH


For more information, visit http://ftp.mi.fu-berlin.de/OpenMS/release-documentation/html/UTILS_OpenSwathWorkflow.html</help>
  </tool>
