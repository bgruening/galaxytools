<?xml version="1.0" encoding="UTF-8"?>
  <!--This is a configuration file for the integration of a tools into Galaxy (https://galaxyproject.org/). This file was automatically generated using CTD2Galaxy.-->
  <!--Proposed Tool Section: [Map Alignment]-->
  <tool id="MapAlignerSpectrum" name="MapAlignerSpectrum" version="2.0.0">
    <description>Corrects retention time distortions between maps by spectrum alignment.</description>
    <macros>
      <token name="@EXECUTABLE@">MapAlignerSpectrum</token>
      <import>macros.xml</import>
    </macros>
    <expand macro="references"/>
    <expand macro="stdio"/>
    <expand macro="requirements"/>
    <command>MapAlignerSpectrum

-in
  #for token in $param_in:
    $token
  #end for

#if $rep_param_out:
-out
  #for token in $rep_param_out:
    #if &quot; &quot; in str(token):
      &quot;$token.param_out&quot;
    #else
      $token.param_out
    #end if
  #end for
#end if

#if $rep_param_trafo_out:
-trafo_out
  #for token in $rep_param_trafo_out:
    #if &quot; &quot; in str(token):
      &quot;$token.param_trafo_out&quot;
    #else
      $token.param_trafo_out
    #end if
  #end for
#end if
-threads \${GALAXY_SLOTS:-24}
#if $param_algorithm_gapcost:
  -algorithm:gapcost $param_algorithm_gapcost
#end if
#if $param_algorithm_affinegapcost:
  -algorithm:affinegapcost $param_algorithm_affinegapcost
#end if
#if $param_algorithm_scorefunction:
  -algorithm:scorefunction
  #if &quot; &quot; in str($param_algorithm_scorefunction):
    &quot;$param_algorithm_scorefunction&quot;
  #else
    $param_algorithm_scorefunction
  #end if
#end if
#if $param_model_type:
  -model:type
  #if &quot; &quot; in str($param_model_type):
    &quot;$param_model_type&quot;
  #else
    $param_model_type
  #end if
#end if
#if $param_model_linear_symmetric_regression:
  -model:linear:symmetric_regression
#end if
#if $param_model_b_spline_wavelength:
  -model:b_spline:wavelength $param_model_b_spline_wavelength
#end if
#if $param_model_b_spline_num_nodes:
  -model:b_spline:num_nodes $param_model_b_spline_num_nodes
#end if
#if $param_model_b_spline_extrapolate:
  -model:b_spline:extrapolate
  #if &quot; &quot; in str($param_model_b_spline_extrapolate):
    &quot;$param_model_b_spline_extrapolate&quot;
  #else
    $param_model_b_spline_extrapolate
  #end if
#end if
#if $param_model_b_spline_boundary_condition:
  -model:b_spline:boundary_condition $param_model_b_spline_boundary_condition
#end if
#if $param_model_interpolated_interpolation_type:
  -model:interpolated:interpolation_type
  #if &quot; &quot; in str($param_model_interpolated_interpolation_type):
    &quot;$param_model_interpolated_interpolation_type&quot;
  #else
    $param_model_interpolated_interpolation_type
  #end if
#end if
#if $adv_opts.adv_opts_selector=='advanced':
    #if $adv_opts.param_force:
  -force
#end if
    #if $adv_opts.param_algorithm_cutoff_score:
  -algorithm:cutoff_score $adv_opts.param_algorithm_cutoff_score
#end if
    #if $adv_opts.param_algorithm_bucketsize:
  -algorithm:bucketsize $adv_opts.param_algorithm_bucketsize
#end if
    #if $adv_opts.param_algorithm_anchorpoints:
  -algorithm:anchorpoints $adv_opts.param_algorithm_anchorpoints
#end if
    #if $adv_opts.param_algorithm_mismatchscore:
  -algorithm:mismatchscore $adv_opts.param_algorithm_mismatchscore
#end if
#end if
</command>
    <inputs>
      <param format="mzml" help="(-in) " label="Input files to align (all must have the same file type)" multiple="true" name="param_in" optional="False" size="30" type="data">
        <sanitizer>
          <valid initial="string.printable">
            <remove value="'"/>
            <remove value="&quot;"/>
          </valid>
        </sanitizer>
      </param>
      <param help="(-gapcost) A gap means that one spectrum can not be aligned directly to another spectrum in the Map. This happens, when the similarity of both spectra a too low or even not present. Imagine it as a insert or delete of the spectrum in the map (similar to sequence alignment). The gap is necessary for aligning, if we open a gap there is a possibility that an another spectrum can be correct aligned with a higher score as before without gap. But to open a gap is a negative event and needs to carry a punishment, so a gap should only be opened if the benefits outweigh the downsides. The Parameter is to giving as a positive number, the implementation convert it to a negative number" label="This Parameter stands for the cost of opining a gap in the Alignment" min="0.0" name="param_algorithm_gapcost" optional="True" type="float" value="1.0"/>
      <param help="(-affinegapcost) The idea behind the affine gapcost lies under the assumption, that it is better to get a long distance of connected gaps than to have a structure of gaps interspersed with matches (gap match gap match etc.).  Therefor the punishment for the extension of a gap generally should be lower than the normal gapcost. If the result of the alignment shows high compression, it is a good idea to lower either the affine gapcost or gap opening cost" label="This Parameter controls the cost of extension a already open gap" min="0.0" name="param_algorithm_affinegapcost" optional="True" type="float" value="0.5"/>
      <param help="(-scorefunction) The success of an alignment depends mostly of the elected score function. The score function return the similarity of two spectra. The score influence defines later the way of possible traceback. There are multiple spectra similarity scores available" label="The score function is the core of an alignment" name="param_algorithm_scorefunction" optional="True" type="select" value="SteinScottImproveScore">
        <option value="SteinScottImproveScore">SteinScottImproveScore</option>
        <option value="ZhangSimilarityScore">ZhangSimilarityScore</option>
      </param>
      <param help="(-type) " label="Type of model" name="param_model_type" optional="True" type="select" value="interpolated">
        <option value="linear">linear</option>
        <option value="b_spline">b_spline</option>
        <option value="interpolated">interpolated</option>
      </param>
      <param checked="false" falsevalue="" help="(-symmetric_regression) 'y + x', instead of on 'y' vs. 'x'" label="Perform linear regression on 'y - x' vs" name="param_model_linear_symmetric_regression" optional="True" truevalue="-model:linear:symmetric_regression" type="boolean"/>
      <param help="(-wavelength) The number is chosen so that the spline approximates a low-pass filter with this cutoff wavelength. The wavelength is given in the same units as the data; a higher value means more smoothing. '0' sets the number of nodes to twice the number of input points" label="Determines the amount of smoothing by setting the number of nodes for the B-spline" min="0.0" name="param_model_b_spline_wavelength" optional="True" type="float" value="0.0"/>
      <param help="(-num_nodes) Overrides 'wavelength' if set (to two or greater). A lower value means more smoothing" label="Number of nodes for B-spline fitting" min="0" name="param_model_b_spline_num_nodes" optional="True" type="integer" value="5"/>
      <param help="(-extrapolate) 'linear': Linear extrapolation using the slope of the B-spline at the corresponding endpoint. 'b_spline': Use the B-spline (as for interpolation). 'constant': Use the constant value of the B-spline at the corresponding endpoint. 'global_linear': Use a linear fit through the data (which will most probably introduce discontinuities at the ends of the data range)" label="Method to use for extrapolation beyond the original data range" name="param_model_b_spline_extrapolate" optional="True" type="select" value="linear">
        <option value="linear">linear</option>
        <option value="b_spline">b_spline</option>
        <option value="constant">constant</option>
        <option value="global_linear">global_linear</option>
      </param>
      <param help="(-boundary_condition) " label="Boundary condition at B-spline endpoints: 0 (value zero), 1 (first derivative zero) or 2 (second derivative zero)" max="2" min="0" name="param_model_b_spline_boundary_condition" optional="True" type="integer" value="2"/>
      <param help="(-interpolation_type) " label="Type of interpolation to apply" name="param_model_interpolated_interpolation_type" optional="True" type="select" value="cspline">
        <option value="linear">linear</option>
        <option value="cspline">cspline</option>
        <option value="akima">akima</option>
      </param>
      <expand macro="advanced_options">
        <param checked="false" falsevalue="" help="(-force) " label="Overwrite tool specific checks" name="param_force" optional="True" truevalue="-force" type="boolean"/>
        <param help="(-cutoff_score)  Only those pair of spectra are selected, which has a score higher or same of the threshold" label="The Parameter defines the threshold which filtered spectra, these spectra are high potential candidate for deciding the interval of a sub-alignment" max="1.0" min="0.0" name="param_algorithm_cutoff_score" optional="True" type="float" value="0.7"/>
        <param help="(-bucketsize) It is a quantize of the interval of those points, which defines the main alignment (match points). These points have to filtered, to reduce the amount of points for the calculating a smoother spline curve" label="Defines the numbers of buckets" min="1" name="param_algorithm_bucketsize" optional="True" type="integer" value="100"/>
        <param help="(-anchorpoints) The high score pairs are previously selected. The reduction of match points helps to get a smoother spline curve" label="Defines the percent of numbers of match points which a selected from one bucket" max="100" min="1" name="param_algorithm_anchorpoints" optional="True" type="integer" value="100"/>
        <param help="(-mismatchscore) " label="Defines the score of two spectra if they have no similarity to each othe" max="0.0" name="param_algorithm_mismatchscore" optional="True" type="float" value="-5.0"/>
      </expand>
    </inputs>
    <outputs>
      <data format="mzml" name="param_out"/>
      <data format="trafoxml" name="param_trafo_out"/>
    </outputs>
    <help>Corrects retention time distortions between maps by spectrum alignment.


For more information, visit http://ftp.mi.fu-berlin.de/OpenMS/release-documentation/html/TOPP_MapAlignerSpectrum.html</help>
  </tool>
