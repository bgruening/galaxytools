<?xml version='1.0' encoding='UTF-8'?>
<!--This is a configuration file for the integration of a tools into Galaxy (https://galaxyproject.org/). This file was automatically generated using CTD2Galaxy.-->
<!--Proposed Tool Section: [Utilities]-->
<tool id="TopPerc" name="TopPerc" version="2.1.0">
  <description>Facilitate input to Percolator and reintegrate.</description>
  <macros>
    <token name="@EXECUTABLE@">TopPerc</token>
    <import>macros.xml</import>
  </macros>
  <expand macro="references"/>
  <expand macro="stdio"/>
  <expand macro="requirements"/>
  <command>TopPerc

#if $param_percolator_executable:
  -percolator_executable $param_percolator_executable
#end if
#if $param_in_target:
  -in_target $param_in_target
#end if
#if $param_in_decoy:
  -in_decoy $param_in_decoy
#end if
#if $param_out:
  -out $param_out
#end if
#if $param_enzyme:
  -enzyme     "$param_enzyme"
#end if
#if $param_X:
  -X $param_X
#end if
#if $param_e:
  -e
  #if " " in str($param_e):
    "$param_e"
  #else
    $param_e
  #end if
#end if
#if $param_Z:
  -Z
  #if " " in str($param_Z):
    "$param_Z"
  #else
    $param_Z
  #end if
#end if
#if $param_p:
  -p $param_p
#end if
#if $param_n:
  -n $param_n
#end if
#if $param_F:
  -F $param_F
#end if
#if $param_t:
  -t $param_t
#end if
#if $param_i:
  -i $param_i
#end if
#if $param_x:
  -x
  #if " " in str($param_x):
    "$param_x"
  #else
    $param_x
  #end if
#end if
#if $param_f:
  -f $param_f
#end if
#if $param_J:
  -J $param_J
#end if
#if $param_k:
  -k $param_k
#end if
#if $param_w:
  -w $param_w
#end if
#if $param_W:
  -W $param_W
#end if
#if $param_V:
  -V     "$param_V"
#end if
#if $param_v:
  -v $param_v
#end if
#if $param_u:
  -u
  #if " " in str($param_u):
    "$param_u"
  #else
    $param_u
  #end if
#end if
#if $param_R:
  -R
  #if " " in str($param_R):
    "$param_R"
  #else
    $param_R
  #end if
#end if
#if $param_O:
  -O
  #if " " in str($param_O):
    "$param_O"
  #else
    $param_O
  #end if
#end if
#if $param_S:
  -S $param_S
#end if
#if $param_K:
  -K
  #if " " in str($param_K):
    "$param_K"
  #else
    $param_K
  #end if
#end if
#if $param_D:
  -D
  #if " " in str($param_D):
    "$param_D"
  #else
    $param_D
  #end if
#end if
#if $param_B:
  -B $param_B
#end if
#if $param_U:
  -U
  #if " " in str($param_U):
    "$param_U"
  #else
    $param_U
  #end if
#end if
#if $param_s:
  -s
  #if " " in str($param_s):
    "$param_s"
  #else
    $param_s
  #end if
#end if
#if $param_A:
  -A
  #if " " in str($param_A):
    "$param_A"
  #else
    $param_A
  #end if
#end if
#if $param_a:
  -a $param_a
#end if
#if $param_b:
  -b $param_b
#end if
#if $param_G:
  -G $param_G
#end if
#if $param_g:
  -g
  #if " " in str($param_g):
    "$param_g"
  #else
    $param_g
  #end if
#end if
#if $param_I:
  -I
  #if " " in str($param_I):
    "$param_I"
  #else
    $param_I
  #end if
#end if
#if $param_q:
  -q
  #if " " in str($param_q):
    "$param_q"
  #else
    $param_q
  #end if
#end if
#if $param_N:
  -N
  #if " " in str($param_N):
    "$param_N"
  #else
    $param_N
  #end if
#end if
#if $param_E:
  -E
  #if " " in str($param_E):
    "$param_E"
  #else
    $param_E
  #end if
#end if
#if $param_C:
  -C
  #if " " in str($param_C):
    "$param_C"
  #else
    $param_C
  #end if
#end if
#if $param_d:
  -d $param_d
#end if
#if $param_P:
  -P     "$param_P"
#end if
#if $param_T:
  -T
  #if " " in str($param_T):
    "$param_T"
  #else
    $param_T
  #end if
#end if
#if $param_Y:
  -Y
  #if " " in str($param_Y):
    "$param_Y"
  #else
    $param_Y
  #end if
#end if
#if $param_H:
  -H
  #if " " in str($param_H):
    "$param_H"
  #else
    $param_H
  #end if
#end if
#if $param_fido_truncation:
  -fido-truncation
  #if " " in str($param_fido_truncation):
    "$param_fido_truncation"
  #else
    $param_fido_truncation
  #end if
#end if
#if $param_Q:
  -Q
  #if " " in str($param_Q):
    "$param_Q"
  #else
    $param_Q
  #end if
#end if
#if $adv_opts.adv_opts_selector=='advanced':
    #if $adv_opts.param_force:
  -force
  #if " " in str($adv_opts.param_force):
    "$adv_opts.param_force"
  #else
    $adv_opts.param_force
  #end if
#end if
#end if
</command>
  <inputs>
    <param name="param_percolator_executable" type="data" format="text" label="Path to the percolator binary" help="(-percolator_executable) "/>
    <param name="param_in_target" type="data" format="mzid" optional="False" label="Input target file" help="(-in_target) "/>
    <param name="param_in_decoy" type="data" format="mzid" optional="False" label="Input decoy file" help="(-in_decoy) "/>
    <param name="param_enzyme" type="text" size="30" value="trypsin" label="Type of enzyme: no_enzyme,elastase,pepsin,proteinasek,thermolysin,chymotrypsin,lys-n,lys-c,arg-c,asp-n,glu-c,trypsin" help="(-enzyme) ">
      <sanitizer>
        <valid initial="string.printable">
          <remove value="'"/>
          <remove value="&quot;"/>
        </valid>
      </sanitizer>
    </param>
    <param name="param_e" type="select" optional="True" value="false" label="read xml-input format (pin) from standard input" help="(-e) ">
      <option value="true">true</option>
      <option value="false">false</option>
    </param>
    <param name="param_Z" type="select" optional="True" value="false" label="Include decoys (PSMs, peptides and/or proteins) in the xml-output" help="(-Z) Only available if -X is used">
      <option value="true">true</option>
      <option value="false">false</option>
    </param>
    <param name="param_p" type="float" value="0.0" label="Cpos, penalty for mistakes made on positive examples" help="(-p) Set by cross validation if not specified"/>
    <param name="param_n" type="float" value="0.0" label="Cneg, penalty for mistakes made on negative examples" help="(-n) Set by cross validation if not specified"/>
    <param name="param_F" type="float" value="0.01" label="False discovery rate threshold to define positive examples in training" help="(-F) Set by cross validation if 0. Default is 0.01"/>
    <param name="param_t" type="float" value="0.01" label="False discovery rate threshold for evaluating best cross validation result and the reported end result" help="(-t) Default is 0.01"/>
    <param name="param_i" type="integer" value="0" label="Maximal number of iterations" help="(-i) "/>
    <param name="param_x" type="select" optional="True" value="false" label="Quicker execution by reduced internal cross-validation" help="(-x) ">
      <option value="true">true</option>
      <option value="false">false</option>
    </param>
    <param name="param_f" type="float" value="0.6" label="Fraction of the negative data set to be used as train set when only providing one negative set, remaining examples will be used as test set" help="(-f) Set to 0.6 by default"/>
    <param name="param_k" type="data" format="text" label="Input file given in the deprecated pin-xml format generated by" help="(-k) e.g. sqt2pin with the -k option"/>
    <param name="param_W" type="data" format="text" label="Read initial weights to the given file" help="(-W) "/>
    <param name="param_V" type="text" size="30" label="The most informative feature given as the feature name, can be negated to indicate that a lower value is bette" help="(-V) ">
      <sanitizer>
        <valid initial="string.printable">
          <remove value="'"/>
          <remove value="&quot;"/>
        </valid>
      </sanitizer>
    </param>
    <param name="param_v" type="integer" value="2" label="Set verbosity of output: 0=no processing info, 5=all, default is 2" help="(-v) "/>
    <param name="param_u" type="select" optional="True" value="false" label="Use unit normalization [0-1] instead of standard deviation normalization" help="(-u) ">
      <option value="true">true</option>
      <option value="false">false</option>
    </param>
    <param name="param_R" type="select" optional="True" value="false" label="Measure performance on test set each iteration" help="(-R) ">
      <option value="true">true</option>
      <option value="false">false</option>
    </param>
    <param name="param_O" type="select" optional="True" value="false" label="Override error check and do not fall back on default score vector in case of suspect score vecto" help="(-O) ">
      <option value="true">true</option>
      <option value="false">false</option>
    </param>
    <param name="param_S" type="integer" value="1" label="Setting seed of the random number generato" help="(-S) Default value is 1"/>
    <param name="param_K" type="select" optional="True" value="false" label="Retention time features calculated as in Klammer et al" help="(-K) ">
      <option value="true">true</option>
      <option value="false">false</option>
    </param>
    <param name="param_D" type="select" optional="True" value="false" label="Include description of correct features" help="(-D) ">
      <option value="true">true</option>
      <option value="false">false</option>
    </param>
    <param name="param_U" type="select" optional="True" value="false" label="Do not remove redundant peptides, keep all PSMS and exclude peptide level probabilities" help="(-U) ">
      <option value="true">true</option>
      <option value="false">false</option>
    </param>
    <param name="param_s" type="select" optional="True" value="false" label="skip validation of input file against xml schema" help="(-s) ">
      <option value="true">true</option>
      <option value="false">false</option>
    </param>
    <param name="param_A" type="select" optional="True" value="false" label="output protein level probabilities" help="(-A) ">
      <option value="true">true</option>
      <option value="false">false</option>
    </param>
    <param name="param_a" type="float" value="0.0" label="Probability with which a present protein emits an associated peptide (to be used jointly with the -A option)" help="(-a) Set by grid search if not specified"/>
    <param name="param_b" type="float" value="0.0" label="Probability of the creation of a peptide from noise (to be used jointly with the -A option)" help="(-b) Set by grid search if not specified"/>
    <param name="param_G" type="float" value="0.0" label="Prior probability of that a protein is present in the sample ( to be used with the -A option)" help="(-G) Set by grid search if not specified"/>
    <param name="param_g" type="select" optional="True" value="false" label="treat ties as if it were one protein (Only valid if option -A is active)" help="(-g) ">
      <option value="true">true</option>
      <option value="false">false</option>
    </param>
    <param name="param_I" type="select" optional="True" value="false" label="use pi_0 value when calculating empirical q-values (no effect if option Q is activated) (Only valid if option -A is active)" help="(-I) ">
      <option value="true">true</option>
      <option value="false">false</option>
    </param>
    <param name="param_q" type="select" optional="True" value="false" label="output empirical q-values and p-values (from target-decoy analysis) (Only valid if option -A is active)" help="(-q) ">
      <option value="true">true</option>
      <option value="false">false</option>
    </param>
    <param name="param_N" type="select" optional="True" value="false" label="disactivates the grouping of proteins with similar connectivity, for example if proteins P1 and P2 have the same peptides matching both of them, P1 and P2 will not be grouped as one protein (Only valid if option -A is active)" help="(-N) ">
      <option value="true">true</option>
      <option value="false">false</option>
    </param>
    <param name="param_E" type="select" optional="True" value="false" label="Proteins graph will not be separated in sub-graphs (Only valid if option -A is active)" help="(-E) ">
      <option value="true">true</option>
      <option value="false">false</option>
    </param>
    <param name="param_C" type="select" optional="True" value="false" label="it does not prune peptides with a very low score (~0.0) which means that if a peptide with a very low score is matching two proteins, when we prune the peptide,it will be duplicated to generate two new protein groups (Only valid if option -A is active)" help="(-C) ">
      <option value="true">true</option>
      <option value="false">false</option>
    </param>
    <param name="param_d" type="integer" value="0" label="Setting depth 0 or 1 or 2 from low depth to high depth(less computational time) of the grid search for the estimation Alpha,Beta and Gamma parameters for fido(Only valid if option -A is active)" help="(-d) Default value is 0"/>
    <param name="param_P" type="text" size="30" value="random" label="Define the text pattern to identify the decoy proteins and/or PSMs, set this up if the label that identifies the decoys in the database is not the default (by default : random) (Only valid if option -A  is active)" help="(-P) ">
      <sanitizer>
        <valid initial="string.printable">
          <remove value="'"/>
          <remove value="&quot;"/>
        </valid>
      </sanitizer>
    </param>
    <param name="param_T" type="select" optional="True" value="false" label="Reduce the tree of proteins (removing low scored proteins) in order to estimate alpha,beta and gamma faster.(Only valid if option -A is active)" help="(-T) ">
      <option value="true">true</option>
      <option value="false">false</option>
    </param>
    <param name="param_Y" type="select" optional="True" value="false" label="Use target decoy competition to compute peptide probabilities.(recommended when using -A)" help="(-Y) ">
      <option value="true">true</option>
      <option value="false">false</option>
    </param>
    <param name="param_H" type="select" optional="True" value="false" label="Q-value threshold that will be used in the computation of the MSE and ROC AUC score in the grid search (recommended 0.05 for normal size datasets and 0.1 for big size datasets).(Only valid if option -A is active)" help="(-H) ">
      <option value="true">true</option>
      <option value="false">false</option>
    </param>
    <param name="param_fido_truncation" type="select" optional="True" value="false" label="Proteins with a very low score (&lt; 0.001) will be truncated (assigned 0.0 probability).(Only valid if option -A is active)" help="(-fido-truncation) ">
      <option value="true">true</option>
      <option value="false">false</option>
    </param>
    <param name="param_Q" type="select" optional="True" value="false" label="Uses protein group level inference, each cluster of proteins is either present or not, therefore when grouping proteins discard all possible combinations for each group.(Only valid if option -A is active and -N is inactive)" help="(-Q) ">
      <option value="true">true</option>
      <option value="false">false</option>
    </param>
    <expand macro="advanced_options">
      <param name="param_force" type="select" optional="True" value="false" label="Overwrite tool specific checks" help="(-force) ">
        <option value="true">true</option>
        <option value="false">false</option>
      </param>
    </expand>
  </inputs>
  <outputs>
    <data name="param_out" format="data"/>
    <data name="param_X" format="data"/>
    <data name="param_J" format="data"/>
    <data name="param_w" format="data"/>
    <data name="param_B" format="data"/>
  </outputs>
  <help>Facilitate input to Percolator and reintegrate.


For more information, visit http://ftp.mi.fu-berlin.de/OpenMS/release-documentation/html/UTILS_TopPerc.html</help>
</tool>
