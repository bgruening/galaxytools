<?xml version="1.0" encoding="UTF-8"?>
  <!--This is a configuration file for the integration of a tools into Galaxy (https://galaxyproject.org/). This file was automatically generated using CTD2Galaxy.-->
  <!--Proposed Tool Section: [Utilities]-->
  <tool id="MSSimulator" name="MSSimulator" version="2.0.0">
    <description>A highly configurable simulator for mass spectrometry experiments.</description>
    <macros>
      <token name="@EXECUTABLE@">MSSimulator</token>
      <import>macros.xml</import>
    </macros>
    <expand macro="references"/>
    <expand macro="stdio"/>
    <expand macro="requirements"/>
    <command>MSSimulator

-in
  #for token in $param_in:
    $token
  #end for
#if $param_out:
  -out $param_out
#end if
#if $param_out_pm:
  -out_pm $param_out_pm
#end if
#if $param_out_fm:
  -out_fm $param_out_fm
#end if
#if $param_out_cm:
  -out_cm $param_out_cm
#end if
#if $param_out_lcm:
  -out_lcm $param_out_lcm
#end if
#if $param_out_cntm:
  -out_cntm $param_out_cntm
#end if
#if $param_out_id:
  -out_id $param_out_id
#end if
-threads \${GALAXY_SLOTS:-24}
#if $param_algorithm_MSSim_Digestion_enzyme:
  -algorithm:MSSim:Digestion:enzyme
  #if &quot; &quot; in str($param_algorithm_MSSim_Digestion_enzyme):
    &quot;$param_algorithm_MSSim_Digestion_enzyme&quot;
  #else
    $param_algorithm_MSSim_Digestion_enzyme
  #end if
#end if
#if $param_algorithm_MSSim_Digestion_model:
  -algorithm:MSSim:Digestion:model
  #if &quot; &quot; in str($param_algorithm_MSSim_Digestion_model):
    &quot;$param_algorithm_MSSim_Digestion_model&quot;
  #else
    $param_algorithm_MSSim_Digestion_model
  #end if
#end if
#if $param_algorithm_MSSim_Digestion_min_peptide_length:
  -algorithm:MSSim:Digestion:min_peptide_length $param_algorithm_MSSim_Digestion_min_peptide_length
#end if
#if $param_algorithm_MSSim_Digestion_model_trained_threshold:
  -algorithm:MSSim:Digestion:model_trained:threshold $param_algorithm_MSSim_Digestion_model_trained_threshold
#end if
#if $param_algorithm_MSSim_Digestion_model_naive_missed_cleavages:
  -algorithm:MSSim:Digestion:model_naive:missed_cleavages $param_algorithm_MSSim_Digestion_model_naive_missed_cleavages
#end if
#if $param_algorithm_MSSim_RT_rt_column:
  -algorithm:MSSim:RT:rt_column
  #if &quot; &quot; in str($param_algorithm_MSSim_RT_rt_column):
    &quot;$param_algorithm_MSSim_RT_rt_column&quot;
  #else
    $param_algorithm_MSSim_RT_rt_column
  #end if
#end if
#if $param_algorithm_MSSim_RT_auto_scale:
  -algorithm:MSSim:RT:auto_scale
#end if
#if $param_algorithm_MSSim_RT_total_gradient_time:
  -algorithm:MSSim:RT:total_gradient_time $param_algorithm_MSSim_RT_total_gradient_time
#end if
#if $param_algorithm_MSSim_RT_sampling_rate:
  -algorithm:MSSim:RT:sampling_rate $param_algorithm_MSSim_RT_sampling_rate
#end if
#if $param_algorithm_MSSim_RT_scan_window_min:
  -algorithm:MSSim:RT:scan_window:min $param_algorithm_MSSim_RT_scan_window_min
#end if
#if $param_algorithm_MSSim_RT_scan_window_max:
  -algorithm:MSSim:RT:scan_window:max $param_algorithm_MSSim_RT_scan_window_max
#end if
#if $param_algorithm_MSSim_RT_variation_feature_stddev:
  -algorithm:MSSim:RT:variation:feature_stddev $param_algorithm_MSSim_RT_variation_feature_stddev
#end if
#if $param_algorithm_MSSim_RT_variation_affine_offset:
  -algorithm:MSSim:RT:variation:affine_offset $param_algorithm_MSSim_RT_variation_affine_offset
#end if
#if $param_algorithm_MSSim_RT_variation_affine_scale:
  -algorithm:MSSim:RT:variation:affine_scale $param_algorithm_MSSim_RT_variation_affine_scale
#end if
#if $param_algorithm_MSSim_RT_column_condition_distortion:
  -algorithm:MSSim:RT:column_condition:distortion $param_algorithm_MSSim_RT_column_condition_distortion
#end if
#if $param_algorithm_MSSim_RT_profile_shape_width_value:
  -algorithm:MSSim:RT:profile_shape:width:value $param_algorithm_MSSim_RT_profile_shape_width_value
#end if
#if $param_algorithm_MSSim_RT_profile_shape_width_variance:
  -algorithm:MSSim:RT:profile_shape:width:variance $param_algorithm_MSSim_RT_profile_shape_width_variance
#end if
#if $param_algorithm_MSSim_RT_profile_shape_skewness_value:
  -algorithm:MSSim:RT:profile_shape:skewness:value $param_algorithm_MSSim_RT_profile_shape_skewness_value
#end if
#if $param_algorithm_MSSim_RT_profile_shape_skewness_variance:
  -algorithm:MSSim:RT:profile_shape:skewness:variance $param_algorithm_MSSim_RT_profile_shape_skewness_variance
#end if
#if $param_algorithm_MSSim_RT_HPLC_model_file:
  -algorithm:MSSim:RT:HPLC:model_file     &quot;$param_algorithm_MSSim_RT_HPLC_model_file&quot;
#end if
#if $param_algorithm_MSSim_RT_CE_pH:
  -algorithm:MSSim:RT:CE:pH $param_algorithm_MSSim_RT_CE_pH
#end if
#if $param_algorithm_MSSim_RT_CE_alpha:
  -algorithm:MSSim:RT:CE:alpha $param_algorithm_MSSim_RT_CE_alpha
#end if
#if $param_algorithm_MSSim_RT_CE_mu_eo:
  -algorithm:MSSim:RT:CE:mu_eo $param_algorithm_MSSim_RT_CE_mu_eo
#end if
#if $param_algorithm_MSSim_RT_CE_lenght_d:
  -algorithm:MSSim:RT:CE:lenght_d $param_algorithm_MSSim_RT_CE_lenght_d
#end if
#if $param_algorithm_MSSim_RT_CE_length_total:
  -algorithm:MSSim:RT:CE:length_total $param_algorithm_MSSim_RT_CE_length_total
#end if
#if $param_algorithm_MSSim_RT_CE_voltage:
  -algorithm:MSSim:RT:CE:voltage $param_algorithm_MSSim_RT_CE_voltage
#end if
#if $param_algorithm_MSSim_Detectability_dt_simulation_on:
  -algorithm:MSSim:Detectability:dt_simulation_on
#end if
#if $param_algorithm_MSSim_Detectability_min_detect:
  -algorithm:MSSim:Detectability:min_detect $param_algorithm_MSSim_Detectability_min_detect
#end if
#if $param_algorithm_MSSim_Detectability_dt_model_file:
  -algorithm:MSSim:Detectability:dt_model_file     &quot;$param_algorithm_MSSim_Detectability_dt_model_file&quot;
#end if

#if $rep_param_algorithm_MSSim_Ionization_esi_ionized_residues:
-algorithm:MSSim:Ionization:esi:ionized_residues
  #for token in $rep_param_algorithm_MSSim_Ionization_esi_ionized_residues:
    #if &quot; &quot; in str(token):
      &quot;$token.param_algorithm_MSSim_Ionization_esi_ionized_residues&quot;
    #else
      $token.param_algorithm_MSSim_Ionization_esi_ionized_residues
    #end if
  #end for
#end if

#if $rep_param_algorithm_MSSim_Ionization_esi_charge_impurity:
-algorithm:MSSim:Ionization:esi:charge_impurity
  #for token in $rep_param_algorithm_MSSim_Ionization_esi_charge_impurity:
    #if &quot; &quot; in str(token):
      &quot;$token.param_algorithm_MSSim_Ionization_esi_charge_impurity&quot;
    #else
      $token.param_algorithm_MSSim_Ionization_esi_charge_impurity
    #end if
  #end for
#end if
#if $param_algorithm_MSSim_Ionization_esi_ionization_probability:
  -algorithm:MSSim:Ionization:esi:ionization_probability $param_algorithm_MSSim_Ionization_esi_ionization_probability
#end if

#if $rep_param_algorithm_MSSim_Ionization_maldi_ionization_probabilities:
-algorithm:MSSim:Ionization:maldi:ionization_probabilities
  #for token in $rep_param_algorithm_MSSim_Ionization_maldi_ionization_probabilities:
    #if &quot; &quot; in str(token):
      &quot;$token.param_algorithm_MSSim_Ionization_maldi_ionization_probabilities&quot;
    #else
      $token.param_algorithm_MSSim_Ionization_maldi_ionization_probabilities
    #end if
  #end for
#end if
#if $param_algorithm_MSSim_Ionization_mz_lower_measurement_limit:
  -algorithm:MSSim:Ionization:mz:lower_measurement_limit $param_algorithm_MSSim_Ionization_mz_lower_measurement_limit
#end if
#if $param_algorithm_MSSim_Ionization_mz_upper_measurement_limit:
  -algorithm:MSSim:Ionization:mz:upper_measurement_limit $param_algorithm_MSSim_Ionization_mz_upper_measurement_limit
#end if
#if $param_algorithm_MSSim_RawSignal_enabled:
  -algorithm:MSSim:RawSignal:enabled
#end if
#if $param_algorithm_MSSim_RawSignal_peak_shape:
  -algorithm:MSSim:RawSignal:peak_shape
  #if &quot; &quot; in str($param_algorithm_MSSim_RawSignal_peak_shape):
    &quot;$param_algorithm_MSSim_RawSignal_peak_shape&quot;
  #else
    $param_algorithm_MSSim_RawSignal_peak_shape
  #end if
#end if
#if $param_algorithm_MSSim_RawSignal_resolution_value:
  -algorithm:MSSim:RawSignal:resolution:value $param_algorithm_MSSim_RawSignal_resolution_value
#end if
#if $param_algorithm_MSSim_RawSignal_resolution_type:
  -algorithm:MSSim:RawSignal:resolution:type
  #if &quot; &quot; in str($param_algorithm_MSSim_RawSignal_resolution_type):
    &quot;$param_algorithm_MSSim_RawSignal_resolution_type&quot;
  #else
    $param_algorithm_MSSim_RawSignal_resolution_type
  #end if
#end if
#if $param_algorithm_MSSim_RawSignal_baseline_scaling:
  -algorithm:MSSim:RawSignal:baseline:scaling $param_algorithm_MSSim_RawSignal_baseline_scaling
#end if
#if $param_algorithm_MSSim_RawSignal_baseline_shape:
  -algorithm:MSSim:RawSignal:baseline:shape $param_algorithm_MSSim_RawSignal_baseline_shape
#end if
#if $param_algorithm_MSSim_RawSignal_mz_sampling_points:
  -algorithm:MSSim:RawSignal:mz:sampling_points $param_algorithm_MSSim_RawSignal_mz_sampling_points
#end if
#if $param_algorithm_MSSim_RawSignal_contaminants_file:
  -algorithm:MSSim:RawSignal:contaminants:file     &quot;$param_algorithm_MSSim_RawSignal_contaminants_file&quot;
#end if
#if $param_algorithm_MSSim_RawSignal_variation_mz_error_stddev:
  -algorithm:MSSim:RawSignal:variation:mz:error_stddev $param_algorithm_MSSim_RawSignal_variation_mz_error_stddev
#end if
#if $param_algorithm_MSSim_RawSignal_variation_mz_error_mean:
  -algorithm:MSSim:RawSignal:variation:mz:error_mean $param_algorithm_MSSim_RawSignal_variation_mz_error_mean
#end if
#if $param_algorithm_MSSim_RawSignal_variation_intensity_scale:
  -algorithm:MSSim:RawSignal:variation:intensity:scale $param_algorithm_MSSim_RawSignal_variation_intensity_scale
#end if
#if $param_algorithm_MSSim_RawSignal_variation_intensity_scale_stddev:
  -algorithm:MSSim:RawSignal:variation:intensity:scale_stddev $param_algorithm_MSSim_RawSignal_variation_intensity_scale_stddev
#end if
#if $param_algorithm_MSSim_RawSignal_noise_shot_rate:
  -algorithm:MSSim:RawSignal:noise:shot:rate $param_algorithm_MSSim_RawSignal_noise_shot_rate
#end if
#if $param_algorithm_MSSim_RawSignal_noise_shot_intensity_mean:
  -algorithm:MSSim:RawSignal:noise:shot:intensity-mean $param_algorithm_MSSim_RawSignal_noise_shot_intensity_mean
#end if
#if $param_algorithm_MSSim_RawSignal_noise_white_mean:
  -algorithm:MSSim:RawSignal:noise:white:mean $param_algorithm_MSSim_RawSignal_noise_white_mean
#end if
#if $param_algorithm_MSSim_RawSignal_noise_white_stddev:
  -algorithm:MSSim:RawSignal:noise:white:stddev $param_algorithm_MSSim_RawSignal_noise_white_stddev
#end if
#if $param_algorithm_MSSim_RawSignal_noise_detector_mean:
  -algorithm:MSSim:RawSignal:noise:detector:mean $param_algorithm_MSSim_RawSignal_noise_detector_mean
#end if
#if $param_algorithm_MSSim_RawSignal_noise_detector_stddev:
  -algorithm:MSSim:RawSignal:noise:detector:stddev $param_algorithm_MSSim_RawSignal_noise_detector_stddev
#end if
#if $param_algorithm_MSSim_RawTandemSignal_status:
  -algorithm:MSSim:RawTandemSignal:status
  #if &quot; &quot; in str($param_algorithm_MSSim_RawTandemSignal_status):
    &quot;$param_algorithm_MSSim_RawTandemSignal_status&quot;
  #else
    $param_algorithm_MSSim_RawTandemSignal_status
  #end if
#end if
#if $param_algorithm_MSSim_RawTandemSignal_tandem_mode:
  -algorithm:MSSim:RawTandemSignal:tandem_mode $param_algorithm_MSSim_RawTandemSignal_tandem_mode
#end if
#if $param_algorithm_MSSim_RawTandemSignal_svm_model_set_file:
  -algorithm:MSSim:RawTandemSignal:svm_model_set_file     &quot;$param_algorithm_MSSim_RawTandemSignal_svm_model_set_file&quot;
#end if
#if $param_algorithm_MSSim_RawTandemSignal_Precursor_ms2_spectra_per_rt_bin:
  -algorithm:MSSim:RawTandemSignal:Precursor:ms2_spectra_per_rt_bin $param_algorithm_MSSim_RawTandemSignal_Precursor_ms2_spectra_per_rt_bin
#end if
#if $param_algorithm_MSSim_RawTandemSignal_Precursor_min_mz_peak_distance:
  -algorithm:MSSim:RawTandemSignal:Precursor:min_mz_peak_distance $param_algorithm_MSSim_RawTandemSignal_Precursor_min_mz_peak_distance
#end if
#if $param_algorithm_MSSim_RawTandemSignal_Precursor_mz_isolation_window:
  -algorithm:MSSim:RawTandemSignal:Precursor:mz_isolation_window $param_algorithm_MSSim_RawTandemSignal_Precursor_mz_isolation_window
#end if
#if $param_algorithm_MSSim_RawTandemSignal_Precursor_exclude_overlapping_peaks:
  -algorithm:MSSim:RawTandemSignal:Precursor:exclude_overlapping_peaks
#end if

#if $rep_param_algorithm_MSSim_RawTandemSignal_Precursor_charge_filter:
-algorithm:MSSim:RawTandemSignal:Precursor:charge_filter
  #for token in $rep_param_algorithm_MSSim_RawTandemSignal_Precursor_charge_filter:
    #if &quot; &quot; in str(token):
      &quot;$token.param_algorithm_MSSim_RawTandemSignal_Precursor_charge_filter&quot;
    #else
      $token.param_algorithm_MSSim_RawTandemSignal_Precursor_charge_filter
    #end if
  #end for
#end if
#if $param_algorithm_MSSim_RawTandemSignal_Precursor_Exclusion_use_dynamic_exclusion:
  -algorithm:MSSim:RawTandemSignal:Precursor:Exclusion:use_dynamic_exclusion
#end if
#if $param_algorithm_MSSim_RawTandemSignal_Precursor_Exclusion_exclusion_time:
  -algorithm:MSSim:RawTandemSignal:Precursor:Exclusion:exclusion_time $param_algorithm_MSSim_RawTandemSignal_Precursor_Exclusion_exclusion_time
#end if
#if $param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_max_list_size:
  -algorithm:MSSim:RawTandemSignal:Precursor:ProteinBasedInclusion:max_list_size $param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_max_list_size
#end if
#if $param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_rt_min_rt:
  -algorithm:MSSim:RawTandemSignal:Precursor:ProteinBasedInclusion:rt:min_rt $param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_rt_min_rt
#end if
#if $param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_rt_max_rt:
  -algorithm:MSSim:RawTandemSignal:Precursor:ProteinBasedInclusion:rt:max_rt $param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_rt_max_rt
#end if
#if $param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_rt_rt_step_size:
  -algorithm:MSSim:RawTandemSignal:Precursor:ProteinBasedInclusion:rt:rt_step_size $param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_rt_rt_step_size
#end if
#if $param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_rt_rt_window_size:
  -algorithm:MSSim:RawTandemSignal:Precursor:ProteinBasedInclusion:rt:rt_window_size $param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_rt_rt_window_size
#end if
#if $param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_thresholds_min_protein_id_probability:
  -algorithm:MSSim:RawTandemSignal:Precursor:ProteinBasedInclusion:thresholds:min_protein_id_probability $param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_thresholds_min_protein_id_probability
#end if
#if $param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_thresholds_min_pt_weight:
  -algorithm:MSSim:RawTandemSignal:Precursor:ProteinBasedInclusion:thresholds:min_pt_weight $param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_thresholds_min_pt_weight
#end if
#if $param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_thresholds_min_mz:
  -algorithm:MSSim:RawTandemSignal:Precursor:ProteinBasedInclusion:thresholds:min_mz $param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_thresholds_min_mz
#end if
#if $param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_thresholds_max_mz:
  -algorithm:MSSim:RawTandemSignal:Precursor:ProteinBasedInclusion:thresholds:max_mz $param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_thresholds_max_mz
#end if
#if $param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_thresholds_use_peptide_rule:
  -algorithm:MSSim:RawTandemSignal:Precursor:ProteinBasedInclusion:thresholds:use_peptide_rule
#end if
#if $param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_thresholds_min_peptide_ids:
  -algorithm:MSSim:RawTandemSignal:Precursor:ProteinBasedInclusion:thresholds:min_peptide_ids $param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_thresholds_min_peptide_ids
#end if
#if $param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_thresholds_min_peptide_probability:
  -algorithm:MSSim:RawTandemSignal:Precursor:ProteinBasedInclusion:thresholds:min_peptide_probability $param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_thresholds_min_peptide_probability
#end if
#if $param_algorithm_MSSim_RawTandemSignal_MS_E_add_single_spectra:
  -algorithm:MSSim:RawTandemSignal:MS_E:add_single_spectra
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_add_isotopes:
  -algorithm:MSSim:RawTandemSignal:TandemSim:Simple:add_isotopes
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_max_isotope:
  -algorithm:MSSim:RawTandemSignal:TandemSim:Simple:max_isotope $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_max_isotope
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_add_metainfo:
  -algorithm:MSSim:RawTandemSignal:TandemSim:Simple:add_metainfo
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_add_losses:
  -algorithm:MSSim:RawTandemSignal:TandemSim:Simple:add_losses
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_add_precursor_peaks:
  -algorithm:MSSim:RawTandemSignal:TandemSim:Simple:add_precursor_peaks
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_add_abundant_immonium_ions:
  -algorithm:MSSim:RawTandemSignal:TandemSim:Simple:add_abundant_immonium_ions
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_add_first_prefix_ion:
  -algorithm:MSSim:RawTandemSignal:TandemSim:Simple:add_first_prefix_ion
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_add_y_ions:
  -algorithm:MSSim:RawTandemSignal:TandemSim:Simple:add_y_ions
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_add_b_ions:
  -algorithm:MSSim:RawTandemSignal:TandemSim:Simple:add_b_ions
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_add_a_ions:
  -algorithm:MSSim:RawTandemSignal:TandemSim:Simple:add_a_ions
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_add_c_ions:
  -algorithm:MSSim:RawTandemSignal:TandemSim:Simple:add_c_ions
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_add_x_ions:
  -algorithm:MSSim:RawTandemSignal:TandemSim:Simple:add_x_ions
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_add_z_ions:
  -algorithm:MSSim:RawTandemSignal:TandemSim:Simple:add_z_ions
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_y_intensity:
  -algorithm:MSSim:RawTandemSignal:TandemSim:Simple:y_intensity $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_y_intensity
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_b_intensity:
  -algorithm:MSSim:RawTandemSignal:TandemSim:Simple:b_intensity $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_b_intensity
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_a_intensity:
  -algorithm:MSSim:RawTandemSignal:TandemSim:Simple:a_intensity $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_a_intensity
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_c_intensity:
  -algorithm:MSSim:RawTandemSignal:TandemSim:Simple:c_intensity $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_c_intensity
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_x_intensity:
  -algorithm:MSSim:RawTandemSignal:TandemSim:Simple:x_intensity $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_x_intensity
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_z_intensity:
  -algorithm:MSSim:RawTandemSignal:TandemSim:Simple:z_intensity $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_z_intensity
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_relative_loss_intensity:
  -algorithm:MSSim:RawTandemSignal:TandemSim:Simple:relative_loss_intensity $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_relative_loss_intensity
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_precursor_intensity:
  -algorithm:MSSim:RawTandemSignal:TandemSim:Simple:precursor_intensity $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_precursor_intensity
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_precursor_H2O_intensity:
  -algorithm:MSSim:RawTandemSignal:TandemSim:Simple:precursor_H2O_intensity $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_precursor_H2O_intensity
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_precursor_NH3_intensity:
  -algorithm:MSSim:RawTandemSignal:TandemSim:Simple:precursor_NH3_intensity $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_precursor_NH3_intensity
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_add_isotopes:
  -algorithm:MSSim:RawTandemSignal:TandemSim:SVM:add_isotopes
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_max_isotope:
  -algorithm:MSSim:RawTandemSignal:TandemSim:SVM:max_isotope $param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_max_isotope
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_add_metainfo:
  -algorithm:MSSim:RawTandemSignal:TandemSim:SVM:add_metainfo
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_add_first_prefix_ion:
  -algorithm:MSSim:RawTandemSignal:TandemSim:SVM:add_first_prefix_ion
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_hide_y_ions:
  -algorithm:MSSim:RawTandemSignal:TandemSim:SVM:hide_y_ions
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_hide_y2_ions:
  -algorithm:MSSim:RawTandemSignal:TandemSim:SVM:hide_y2_ions
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_hide_b_ions:
  -algorithm:MSSim:RawTandemSignal:TandemSim:SVM:hide_b_ions
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_hide_b2_ions:
  -algorithm:MSSim:RawTandemSignal:TandemSim:SVM:hide_b2_ions
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_hide_a_ions:
  -algorithm:MSSim:RawTandemSignal:TandemSim:SVM:hide_a_ions
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_hide_c_ions:
  -algorithm:MSSim:RawTandemSignal:TandemSim:SVM:hide_c_ions
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_hide_x_ions:
  -algorithm:MSSim:RawTandemSignal:TandemSim:SVM:hide_x_ions
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_hide_z_ions:
  -algorithm:MSSim:RawTandemSignal:TandemSim:SVM:hide_z_ions
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_hide_losses:
  -algorithm:MSSim:RawTandemSignal:TandemSim:SVM:hide_losses
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_y_intensity:
  -algorithm:MSSim:RawTandemSignal:TandemSim:SVM:y_intensity $param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_y_intensity
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_b_intensity:
  -algorithm:MSSim:RawTandemSignal:TandemSim:SVM:b_intensity $param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_b_intensity
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_a_intensity:
  -algorithm:MSSim:RawTandemSignal:TandemSim:SVM:a_intensity $param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_a_intensity
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_c_intensity:
  -algorithm:MSSim:RawTandemSignal:TandemSim:SVM:c_intensity $param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_c_intensity
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_x_intensity:
  -algorithm:MSSim:RawTandemSignal:TandemSim:SVM:x_intensity $param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_x_intensity
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_z_intensity:
  -algorithm:MSSim:RawTandemSignal:TandemSim:SVM:z_intensity $param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_z_intensity
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_relative_loss_intensity:
  -algorithm:MSSim:RawTandemSignal:TandemSim:SVM:relative_loss_intensity $param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_relative_loss_intensity
#end if
#if $param_algorithm_MSSim_Global_ionization_type:
  -algorithm:MSSim:Global:ionization_type
  #if &quot; &quot; in str($param_algorithm_MSSim_Global_ionization_type):
    &quot;$param_algorithm_MSSim_Global_ionization_type&quot;
  #else
    $param_algorithm_MSSim_Global_ionization_type
  #end if
#end if
#if $param_algorithm_MSSim_Labeling_type:
  -algorithm:MSSim:Labeling:type
  #if &quot; &quot; in str($param_algorithm_MSSim_Labeling_type):
    &quot;$param_algorithm_MSSim_Labeling_type&quot;
  #else
    $param_algorithm_MSSim_Labeling_type
  #end if
#end if
#if $param_algorithm_MSSim_Labeling_ICPL_ICPL_fixed_rtshift:
  -algorithm:MSSim:Labeling:ICPL:ICPL_fixed_rtshift $param_algorithm_MSSim_Labeling_ICPL_ICPL_fixed_rtshift
#end if
#if $param_algorithm_MSSim_Labeling_ICPL_label_proteins:
  -algorithm:MSSim:Labeling:ICPL:label_proteins
#end if
#if $param_algorithm_MSSim_Labeling_SILAC_fixed_rtshift:
  -algorithm:MSSim:Labeling:SILAC:fixed_rtshift $param_algorithm_MSSim_Labeling_SILAC_fixed_rtshift
#end if
#if $param_algorithm_MSSim_Labeling_SILAC_medium_channel_modification_lysine:
  -algorithm:MSSim:Labeling:SILAC:medium_channel:modification_lysine     &quot;$param_algorithm_MSSim_Labeling_SILAC_medium_channel_modification_lysine&quot;
#end if
#if $param_algorithm_MSSim_Labeling_SILAC_medium_channel_modification_arginine:
  -algorithm:MSSim:Labeling:SILAC:medium_channel:modification_arginine     &quot;$param_algorithm_MSSim_Labeling_SILAC_medium_channel_modification_arginine&quot;
#end if
#if $param_algorithm_MSSim_Labeling_SILAC_heavy_channel_modification_lysine:
  -algorithm:MSSim:Labeling:SILAC:heavy_channel:modification_lysine     &quot;$param_algorithm_MSSim_Labeling_SILAC_heavy_channel_modification_lysine&quot;
#end if
#if $param_algorithm_MSSim_Labeling_SILAC_heavy_channel_modification_arginine:
  -algorithm:MSSim:Labeling:SILAC:heavy_channel:modification_arginine     &quot;$param_algorithm_MSSim_Labeling_SILAC_heavy_channel_modification_arginine&quot;
#end if
#if $param_algorithm_MSSim_Labeling_itraq_iTRAQ:
  -algorithm:MSSim:Labeling:itraq:iTRAQ
  #if &quot; &quot; in str($param_algorithm_MSSim_Labeling_itraq_iTRAQ):
    &quot;$param_algorithm_MSSim_Labeling_itraq_iTRAQ&quot;
  #else
    $param_algorithm_MSSim_Labeling_itraq_iTRAQ
  #end if
#end if
#if $param_algorithm_MSSim_Labeling_itraq_reporter_mass_shift:
  -algorithm:MSSim:Labeling:itraq:reporter_mass_shift $param_algorithm_MSSim_Labeling_itraq_reporter_mass_shift
#end if

#if $rep_param_algorithm_MSSim_Labeling_itraq_channel_active_4plex:
-algorithm:MSSim:Labeling:itraq:channel_active_4plex
  #for token in $rep_param_algorithm_MSSim_Labeling_itraq_channel_active_4plex:
    #if &quot; &quot; in str(token):
      &quot;$token.param_algorithm_MSSim_Labeling_itraq_channel_active_4plex&quot;
    #else
      $token.param_algorithm_MSSim_Labeling_itraq_channel_active_4plex
    #end if
  #end for
#end if

#if $rep_param_algorithm_MSSim_Labeling_itraq_channel_active_8plex:
-algorithm:MSSim:Labeling:itraq:channel_active_8plex
  #for token in $rep_param_algorithm_MSSim_Labeling_itraq_channel_active_8plex:
    #if &quot; &quot; in str(token):
      &quot;$token.param_algorithm_MSSim_Labeling_itraq_channel_active_8plex&quot;
    #else
      $token.param_algorithm_MSSim_Labeling_itraq_channel_active_8plex
    #end if
  #end for
#end if
#if $param_algorithm_MSSim_Labeling_itraq_Y_contamination:
  -algorithm:MSSim:Labeling:itraq:Y_contamination $param_algorithm_MSSim_Labeling_itraq_Y_contamination
#end if
#if $param_algorithm_MSSim_Labeling_o18_labeling_efficiency:
  -algorithm:MSSim:Labeling:o18:labeling_efficiency $param_algorithm_MSSim_Labeling_o18_labeling_efficiency
#end if
#if $param_algorithm_RandomNumberGenerators_biological:
  -algorithm:RandomNumberGenerators:biological
  #if &quot; &quot; in str($param_algorithm_RandomNumberGenerators_biological):
    &quot;$param_algorithm_RandomNumberGenerators_biological&quot;
  #else
    $param_algorithm_RandomNumberGenerators_biological
  #end if
#end if
#if $param_algorithm_RandomNumberGenerators_technical:
  -algorithm:RandomNumberGenerators:technical
  #if &quot; &quot; in str($param_algorithm_RandomNumberGenerators_technical):
    &quot;$param_algorithm_RandomNumberGenerators_technical&quot;
  #else
    $param_algorithm_RandomNumberGenerators_technical
  #end if
#end if
#if $adv_opts.adv_opts_selector=='advanced':
    #if $adv_opts.param_force:
  -force
#end if
    #if $adv_opts.param_algorithm_MSSim_Ionization_esi_max_impurity_set_size:
  -algorithm:MSSim:Ionization:esi:max_impurity_set_size $adv_opts.param_algorithm_MSSim_Ionization_esi_max_impurity_set_size
#end if
    #if $adv_opts.param_algorithm_MSSim_Labeling_ICPL_ICPL_light_channel_label:
  -algorithm:MSSim:Labeling:ICPL:ICPL_light_channel_label     &quot;$adv_opts.param_algorithm_MSSim_Labeling_ICPL_ICPL_light_channel_label&quot;
#end if
    #if $adv_opts.param_algorithm_MSSim_Labeling_ICPL_ICPL_medium_channel_label:
  -algorithm:MSSim:Labeling:ICPL:ICPL_medium_channel_label     &quot;$adv_opts.param_algorithm_MSSim_Labeling_ICPL_ICPL_medium_channel_label&quot;
#end if
    #if $adv_opts.param_algorithm_MSSim_Labeling_ICPL_ICPL_heavy_channel_label:
  -algorithm:MSSim:Labeling:ICPL:ICPL_heavy_channel_label     &quot;$adv_opts.param_algorithm_MSSim_Labeling_ICPL_ICPL_heavy_channel_label&quot;
#end if
    
#if $rep_param_algorithm_MSSim_Labeling_itraq_isotope_correction_values_4plex:
-algorithm:MSSim:Labeling:itraq:isotope_correction_values_4plex
  #for token in $rep_param_algorithm_MSSim_Labeling_itraq_isotope_correction_values_4plex:
    #if &quot; &quot; in str(token):
      &quot;$token.param_algorithm_MSSim_Labeling_itraq_isotope_correction_values_4plex&quot;
    #else
      $token.param_algorithm_MSSim_Labeling_itraq_isotope_correction_values_4plex
    #end if
  #end for
#end if
    
#if $rep_param_algorithm_MSSim_Labeling_itraq_isotope_correction_values_8plex:
-algorithm:MSSim:Labeling:itraq:isotope_correction_values_8plex
  #for token in $rep_param_algorithm_MSSim_Labeling_itraq_isotope_correction_values_8plex:
    #if &quot; &quot; in str(token):
      &quot;$token.param_algorithm_MSSim_Labeling_itraq_isotope_correction_values_8plex&quot;
    #else
      $token.param_algorithm_MSSim_Labeling_itraq_isotope_correction_values_8plex
    #end if
  #end for
#end if
#end if
</command>
    <inputs>
      <param format="fasta" help="(-in) " label="Input protein sequences" multiple="true" name="param_in" optional="False" size="30" type="data">
        <sanitizer>
          <valid initial="string.printable">
            <remove value="'"/>
            <remove value="&quot;"/>
          </valid>
        </sanitizer>
      </param>
      <param help="(-enzyme) " label="Enzyme to use for digestion (select 'no cleavage' to skip digestion)" name="param_algorithm_MSSim_Digestion_enzyme" optional="True" type="select" value="Trypsin">
        <option value="no cleavage">no cleavage</option>
        <option value="V8-E">V8-E</option>
        <option value="Trypsin/P">Trypsin/P</option>
        <option value="Lys-C/P">Lys-C/P</option>
        <option value="unspecific cleavage">unspecific cleavage</option>
        <option value="leukocyte elastase">leukocyte elastase</option>
        <option value="proline endopeptidase">proline endopeptidase</option>
        <option value="V8-DE">V8-DE</option>
        <option value="Chymotrypsin">Chymotrypsin</option>
        <option value="Asp-N">Asp-N</option>
        <option value="2-iodobenzoate">2-iodobenzoate</option>
        <option value="Arg-C">Arg-C</option>
        <option value="glutamyl endopeptidase">glutamyl endopeptidase</option>
        <option value="TrypChymo">TrypChymo</option>
        <option value="Trypsin">Trypsin</option>
        <option value="Formic_acid">Formic_acid</option>
        <option value="CNBr">CNBr</option>
        <option value="Asp-N_ambic">Asp-N_ambic</option>
        <option value="PepsinA">PepsinA</option>
        <option value="Lys-C">Lys-C</option>
      </param>
      <param help="(-model) 'Trained' is based on a log likelihood model (see DOI:10.1021/pr060507u)" label="The cleavage model to use for digestion" name="param_algorithm_MSSim_Digestion_model" optional="True" type="select" value="naive">
        <option value="trained">trained</option>
        <option value="naive">naive</option>
      </param>
      <param help="(-min_peptide_length) " label="Minimum peptide length after digestion (shorter ones will be discarded)" min="1" name="param_algorithm_MSSim_Digestion_min_peptide_length" optional="True" type="integer" value="3"/>
      <param help="(-threshold) Higher values increase the number of cleavages. -2 will give no cleavages, +4 almost full cleavage" label="Model threshold for calling a cleavage" max="4.0" min="-2.0" name="param_algorithm_MSSim_Digestion_model_trained_threshold" optional="True" type="float" value="0.5"/>
      <param help="(-missed_cleavages) All possible resulting peptides will be created" label="Maximum number of missed cleavages considered" min="0" name="param_algorithm_MSSim_Digestion_model_naive_missed_cleavages" optional="True" type="integer" value="1"/>
      <param help="(-rt_column) " label="Modelling of an RT or CE column" name="param_algorithm_MSSim_RT_rt_column" optional="True" type="select" value="HPLC">
        <option value="none">none</option>
        <option value="HPLC">HPLC</option>
        <option value="CE">CE</option>
      </param>
      <param checked="true" falsevalue="" help="(-auto_scale) If 'true', for CE this means that 'CE:lenght_d', 'CE:length_total', 'CE:voltage' have no influence" label="Scale predicted RT's/MT's to given 'total_gradient_time'?" name="param_algorithm_MSSim_RT_auto_scale" optional="True" truevalue="-algorithm:MSSim:RT:auto_scale" type="boolean"/>
      <param help="(-total_gradient_time) " label="The duration [s] of the gradient" min="1e-05" name="param_algorithm_MSSim_RT_total_gradient_time" optional="True" type="float" value="2500.0"/>
      <param help="(-sampling_rate) " label="Time interval [s] between consecutive scans" max="60.0" min="0.01" name="param_algorithm_MSSim_RT_sampling_rate" optional="True" type="float" value="2.0"/>
      <param help="(-min) " label="Start of RT Scan Window [s]" min="0.0" name="param_algorithm_MSSim_RT_scan_window_min" optional="True" type="float" value="500.0"/>
      <param help="(-max) " label="End of RT Scan Window [s]" min="1.0" name="param_algorithm_MSSim_RT_scan_window_max" optional="True" type="float" value="1500.0"/>
      <param help="(-feature_stddev) " label="Standard deviation of shift in retention time [s] from predicted model (applied to every single feature independently)" name="param_algorithm_MSSim_RT_variation_feature_stddev" type="integer" value="3"/>
      <param help="(-affine_offset) " label="Global offset in retention time [s] from predicted model" name="param_algorithm_MSSim_RT_variation_affine_offset" type="integer" value="0"/>
      <param help="(-affine_scale) " label="Global scaling in retention time from predicted model" name="param_algorithm_MSSim_RT_variation_affine_scale" type="integer" value="1"/>
      <param help="(-distortion) e.g. Orbitrap) distortion should be &gt;4" label="Distortion of the elution profiles. Good presets are 0 for a perfect elution profile, 1 for a slightly distorted elution profile etc... For trapping instruments (" max="10" min="0" name="param_algorithm_MSSim_RT_column_condition_distortion" optional="True" type="integer" value="0"/>
      <param help="(-value) This does not correspond directly to the width in [s]" label="Width of the Exponential Gaussian Hybrid distribution shape of the elution profile" min="0.0" name="param_algorithm_MSSim_RT_profile_shape_width_value" optional="True" type="float" value="9.0"/>
      <param help="(-variance) scale parameter for the lorentzian variation of the variance (Note: The scale parameter has to be &gt;= 0)" label="Random component of the width (set to 0 to disable randomness), i.e" min="0.0" name="param_algorithm_MSSim_RT_profile_shape_width_variance" optional="True" type="float" value="1.6"/>
      <param help="(-value) Higher absolute(!) values lead to more skewness (negative values cause fronting, positive values cause tailing). Tau parameter of the EGH, i.e. time constant of the exponential decay of the Exponential Gaussian Hybrid distribution shape of the elution profile" label="Asymmetric component of the EGH" name="param_algorithm_MSSim_RT_profile_shape_skewness_value" type="float" value="0.1"/>
      <param help="(-variance) scale parameter for the lorentzian variation of the time constant (Note: The scale parameter has to be &gt; 0)" label="Random component of skewness (set to 0 to disable randomness), i.e" min="0.0" name="param_algorithm_MSSim_RT_profile_shape_skewness_variance" optional="True" type="float" value="0.3"/>
      <param help="(-model_file) " label="SVM model for retention time prediction" name="param_algorithm_MSSim_RT_HPLC_model_file" size="30" type="text" value="examples/simulation/RTPredict.model">
        <sanitizer>
          <valid initial="string.printable">
            <remove value="'"/>
            <remove value="&quot;"/>
          </valid>
        </sanitizer>
      </param>
      <param help="(-pH) " label="pH of buffe" max="14.0" min="0.0" name="param_algorithm_MSSim_RT_CE_pH" optional="True" type="float" value="3.0"/>
      <param help="(-alpha) " label="Exponent Alpha used to calculate mobility" max="1.0" min="0.0" name="param_algorithm_MSSim_RT_CE_alpha" optional="True" type="float" value="0.5"/>
      <param help="(-mu_eo) " label="Electroosmotic flow" max="5.0" min="0.0" name="param_algorithm_MSSim_RT_CE_mu_eo" optional="True" type="float" value="0.0"/>
      <param help="(-lenght_d) " label="Length of capillary [cm] from injection site to MS" max="1000.0" min="0.0" name="param_algorithm_MSSim_RT_CE_lenght_d" optional="True" type="float" value="70.0"/>
      <param help="(-length_total) " label="Total length of capillary [cm]" max="1000.0" min="0.0" name="param_algorithm_MSSim_RT_CE_length_total" optional="True" type="float" value="75.0"/>
      <param help="(-voltage) " label="Voltage applied to capillary" min="0.0" name="param_algorithm_MSSim_RT_CE_voltage" optional="True" type="float" value="1000.0"/>
      <param checked="false" falsevalue="" help="(-dt_simulation_on) This can serve as a filter to remove peptides which ionize badly, thus reducing peptide count" label="Modelling detectibility enabled?" name="param_algorithm_MSSim_Detectability_dt_simulation_on" optional="True" truevalue="-algorithm:MSSim:Detectability:dt_simulation_on" type="boolean"/>
      <param help="(-min_detect) Peptides with a lower score will be removed" label="Minimum peptide detectability accepted" name="param_algorithm_MSSim_Detectability_min_detect" type="float" value="0.5"/>
      <param help="(-dt_model_file) " label="SVM model for peptide detectability prediction" name="param_algorithm_MSSim_Detectability_dt_model_file" size="30" type="text" value="examples/simulation/DTPredict.model">
        <sanitizer>
          <valid initial="string.printable">
            <remove value="'"/>
            <remove value="&quot;"/>
          </valid>
        </sanitizer>
      </param>
      <repeat max="1" min="0" name="rep_param_algorithm_MSSim_Ionization_esi_ionized_residues" title="param_algorithm_MSSim_Ionization_esi_ionized_residues">
        <param help="(-ionized_residues) The N-term is always assumed to carry a charge. This parameter will be ignored during MALDI ionization" label="List of residues (as three letter code) that will be considered during ES ionization" name="param_algorithm_MSSim_Ionization_esi_ionized_residues" optional="True" type="select" value="Arg Lys His">
          <option value="Ala">Ala</option>
          <option value="Cys">Cys</option>
          <option value="Asp">Asp</option>
          <option value="Glu">Glu</option>
          <option value="Phe">Phe</option>
          <option value="Gly">Gly</option>
          <option value="His">His</option>
          <option value="Ile">Ile</option>
          <option value="Lys">Lys</option>
          <option value="Leu">Leu</option>
          <option value="Met">Met</option>
          <option value="Asn">Asn</option>
          <option value="Pro">Pro</option>
          <option value="Gln">Gln</option>
          <option value="Arg">Arg</option>
          <option value="Sec">Sec</option>
          <option value="Ser">Ser</option>
          <option value="Thr">Thr</option>
          <option value="Val">Val</option>
          <option value="Trp">Trp</option>
          <option value="Tyr">Tyr</option>
        </param>
      </repeat>
      <repeat max="1" min="0" name="rep_param_algorithm_MSSim_Ionization_esi_charge_impurity" title="param_algorithm_MSSim_Ionization_esi_charge_impurity">
        <param help="(-charge_impurity) e.g. ['H:1'] or ['H:0.7' 'Na:0.3'], ['H:4' 'Na:1'] (which internally translates to ['H:0.8' 'Na:0.2'])" label="List of charged ions that contribute to charge with weight of occurrence (their sum is scaled to 1 internally)," name="param_algorithm_MSSim_Ionization_esi_charge_impurity" size="30" type="text" value="H+:1">
          <sanitizer>
            <valid initial="string.printable">
              <remove value="'"/>
              <remove value="&quot;"/>
            </valid>
          </sanitizer>
        </param>
      </repeat>
      <param help="(-ionization_probability) " label="Probability for the binomial distribution of the ESI charge states" name="param_algorithm_MSSim_Ionization_esi_ionization_probability" type="float" value="0.8"/>
      <repeat max="1" min="0" name="rep_param_algorithm_MSSim_Ionization_maldi_ionization_probabilities" title="param_algorithm_MSSim_Ionization_maldi_ionization_probabilities">
        <param help="(-ionization_probabilities) " label="List of probabilities for the different charge states during MALDI ionization (the list must sum up to 1.0)" name="param_algorithm_MSSim_Ionization_maldi_ionization_probabilities" size="30" type="text" value="0.9 0.1">
          <sanitizer>
            <valid initial="string.printable">
              <remove value="'"/>
              <remove value="&quot;"/>
            </valid>
          </sanitizer>
        </param>
      </repeat>
      <param help="(-lower_measurement_limit) " label="Lower m/z detector limit" min="0.0" name="param_algorithm_MSSim_Ionization_mz_lower_measurement_limit" optional="True" type="float" value="200.0"/>
      <param help="(-upper_measurement_limit) " label="Upper m/z detector limit" min="0.0" name="param_algorithm_MSSim_Ionization_mz_upper_measurement_limit" optional="True" type="float" value="2500.0"/>
      <param checked="true" falsevalue="" help="(-enabled) (select 'false' if you only need feature-maps)" label="Enable RAW signal simulation?" name="param_algorithm_MSSim_RawSignal_enabled" optional="True" truevalue="-algorithm:MSSim:RawSignal:enabled" type="boolean"/>
      <param help="(-peak_shape) " label="Peak Shape used around each isotope peak (be aware that the area under the curve is constant for both types, but the maximal height will differ (~ 2:3 = Lorentz:Gaussian) due to the wider base of the Lorentzian" name="param_algorithm_MSSim_RawSignal_peak_shape" optional="True" type="select" value="Gaussian">
        <option value="Gaussian">Gaussian</option>
        <option value="Lorentzian">Lorentzian</option>
      </param>
      <param help="(-value) " label="Instrument resolution at 400 Th" name="param_algorithm_MSSim_RawSignal_resolution_value" type="integer" value="50000"/>
      <param help="(-type) " label="How does resolution change with increasing m/z?! QTOFs usually show 'constant' behavior, FTs have linear degradation, and on Orbitraps the resolution decreases with square root of mass" name="param_algorithm_MSSim_RawSignal_resolution_type" optional="True" type="select" value="linear">
        <option value="constant">constant</option>
        <option value="linear">linear</option>
        <option value="sqrt">sqrt</option>
      </param>
      <param help="(-scaling) Set to 0 to disable simulation of baseline" label="Scale of baseline" min="0.0" name="param_algorithm_MSSim_RawSignal_baseline_scaling" optional="True" type="float" value="0.0"/>
      <param help="(-shape) " label="The baseline is modeled by an exponential probability density function (pdf) with f(x) = shape*e^(- shape*x)" min="0.0" name="param_algorithm_MSSim_RawSignal_baseline_shape" optional="True" type="float" value="0.5"/>
      <param help="(-sampling_points) " label="Number of raw data points per FWHM of the peak" min="2" name="param_algorithm_MSSim_RawSignal_mz_sampling_points" optional="True" type="integer" value="3"/>
      <param help="(-file) See 'OpenMS/examples/simulation/contaminants.txt' for details" label="Contaminants file with sum formula and absolute RT interval" name="param_algorithm_MSSim_RawSignal_contaminants_file" size="30" type="text" value="examples/simulation/contaminants.csv">
        <sanitizer>
          <valid initial="string.printable">
            <remove value="'"/>
            <remove value="&quot;"/>
          </valid>
        </sanitizer>
      </param>
      <param help="(-error_stddev) Set to 0 to disable simulation of m/z errors" label="Standard deviation for m/z errors" name="param_algorithm_MSSim_RawSignal_variation_mz_error_stddev" type="float" value="0.0"/>
      <param help="(-error_mean) " label="Average systematic m/z error (Da)" name="param_algorithm_MSSim_RawSignal_variation_mz_error_mean" type="float" value="0.0"/>
      <param help="(-scale) Set to 1.0 to get the real intensity values provided in the FASTA file" label="Constant scale factor of the feature intensity" min="0.0" name="param_algorithm_MSSim_RawSignal_variation_intensity_scale" optional="True" type="float" value="100.0"/>
      <param help="(-scale_stddev) Set to 0 to get simple rescaled intensities" label="Standard deviation of peak intensity (relative to the scaled peak height)" min="0.0" name="param_algorithm_MSSim_RawSignal_variation_intensity_scale_stddev" optional="True" type="float" value="0.0"/>
      <param help="(-rate) Set this to 0 to disable simulation of shot noise" label="Poisson rate of shot noise per unit m/z" min="0.0" name="param_algorithm_MSSim_RawSignal_noise_shot_rate" optional="True" type="float" value="0.0"/>
      <param help="(-intensity-mean) " label="Shot noise intensity mean (exponentially distributed with given mean)" name="param_algorithm_MSSim_RawSignal_noise_shot_intensity_mean" type="float" value="1.0"/>
      <param help="(-mean) " label="Mean value of white noise being added to each measured signal" name="param_algorithm_MSSim_RawSignal_noise_white_mean" type="float" value="0.0"/>
      <param help="(-stddev) " label="Standard deviation of white noise being added to each measured signal" name="param_algorithm_MSSim_RawSignal_noise_white_stddev" type="float" value="0.0"/>
      <param help="(-mean) " label="Mean value of the detector noise being added to the complete measurement" name="param_algorithm_MSSim_RawSignal_noise_detector_mean" type="float" value="0.0"/>
      <param help="(-stddev) " label="Standard deviation of the detector noise being added to the complete measurement" name="param_algorithm_MSSim_RawSignal_noise_detector_stddev" type="float" value="0.0"/>
      <param help="(-status) " label="Create Tandem-MS scans?" name="param_algorithm_MSSim_RawTandemSignal_status" optional="True" type="select" value="disabled">
        <option value="disabled">disabled</option>
        <option value="precursor">precursor</option>
        <option value="MS^E">MS^E</option>
      </param>
      <param help="(-tandem_mode) 0 - fixed intensities, 1 - SVC prediction (abundant/missing), 2 - SVR prediction of peak intensity  &lt;br&gt;" label="Algorithm to generate the tandem-MS spectra" max="2" min="0" name="param_algorithm_MSSim_RawTandemSignal_tandem_mode" optional="True" type="integer" value="0"/>
      <param help="(-svm_model_set_file) " label="File containing the filenames of SVM Models for different charge variants" name="param_algorithm_MSSim_RawTandemSignal_svm_model_set_file" size="30" type="text" value="examples/simulation/SvmModelSet.model">
        <sanitizer>
          <valid initial="string.printable">
            <remove value="'"/>
            <remove value="&quot;"/>
          </valid>
        </sanitizer>
      </param>
      <param help="(-ms2_spectra_per_rt_bin) " label="Number of allowed MS/MS spectra in a retention time bin" min="1" name="param_algorithm_MSSim_RawTandemSignal_Precursor_ms2_spectra_per_rt_bin" optional="True" type="integer" value="5"/>
      <param help="(-min_mz_peak_distance) Also used to define the m/z width of an exclusion window (distance +/- from m/z of precursor). If you set this lower than the isotopic envelope of a peptide, you might get multiple fragment spectra pointing to the same precursor" label="The minimal distance (in Th) between two peaks for concurrent selection for fragmentation" min="0.0001" name="param_algorithm_MSSim_RawTandemSignal_Precursor_min_mz_peak_distance" optional="True" type="float" value="2.0"/>
      <param help="(-mz_isolation_window) " label="All peaks within a mass window (in Th) of a selected peak are also selected for fragmentation" min="0.0" name="param_algorithm_MSSim_RawTandemSignal_Precursor_mz_isolation_window" optional="True" type="float" value="2.0"/>
      <param checked="false" falsevalue="" help="(-exclude_overlapping_peaks) " label="If true, overlapping or nearby peaks (within 'min_mz_peak_distance') are excluded for selection" name="param_algorithm_MSSim_RawTandemSignal_Precursor_exclude_overlapping_peaks" optional="True" truevalue="-algorithm:MSSim:RawTandemSignal:Precursor:exclude_overlapping_peaks" type="boolean"/>
      <repeat max="1" min="0" name="rep_param_algorithm_MSSim_RawTandemSignal_Precursor_charge_filter" title="param_algorithm_MSSim_RawTandemSignal_Precursor_charge_filter">
        <param help="(-charge_filter) " label="Charges considered for MS2 fragmentation" max="5" min="1" name="param_algorithm_MSSim_RawTandemSignal_Precursor_charge_filter" optional="True" size="30" type="text" value="2 3">
          <sanitizer>
            <valid initial="string.printable">
              <remove value="'"/>
              <remove value="&quot;"/>
            </valid>
          </sanitizer>
        </param>
      </repeat>
      <param checked="false" falsevalue="" help="(-use_dynamic_exclusion) " label="If true dynamic exclusion is applied" name="param_algorithm_MSSim_RawTandemSignal_Precursor_Exclusion_use_dynamic_exclusion" optional="True" truevalue="-algorithm:MSSim:RawTandemSignal:Precursor:Exclusion:use_dynamic_exclusion" type="boolean"/>
      <param help="(-exclusion_time) " label="The time (in seconds) a feature is excluded" min="0.0" name="param_algorithm_MSSim_RawTandemSignal_Precursor_Exclusion_exclusion_time" optional="True" type="float" value="100.0"/>
      <param help="(-max_list_size) " label="The maximal number of precursors in the inclusion list" min="1" name="param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_max_list_size" optional="True" type="integer" value="1000"/>
      <param help="(-min_rt) " label="Minimal rt in seconds" min="0.0" name="param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_rt_min_rt" optional="True" type="float" value="960.0"/>
      <param help="(-max_rt) " label="Maximal rt in seconds" min="0.0" name="param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_rt_max_rt" optional="True" type="float" value="3840.0"/>
      <param help="(-rt_step_size) " label="rt step size in seconds" min="1.0" name="param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_rt_rt_step_size" optional="True" type="float" value="30.0"/>
      <param help="(-rt_window_size) " label="rt window size in seconds" min="1" name="param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_rt_rt_window_size" optional="True" type="integer" value="100"/>
      <param help="(-min_protein_id_probability) " label="Minimal protein probability for a protein to be considered identified" max="1.0" min="0.0" name="param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_thresholds_min_protein_id_probability" optional="True" type="float" value="0.95"/>
      <param help="(-min_pt_weight) " label="Minimal pt weight of a precurso" max="1.0" min="0.0" name="param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_thresholds_min_pt_weight" optional="True" type="float" value="0.5"/>
      <param help="(-min_mz) " label="Minimal mz to be considered in protein based LP formulation" min="0.0" name="param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_thresholds_min_mz" optional="True" type="float" value="500.0"/>
      <param help="(-max_mz) " label="Minimal mz to be considered in protein based LP formulation" min="0.0" name="param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_thresholds_max_mz" optional="True" type="float" value="5000.0"/>
      <param checked="false" falsevalue="" help="(-use_peptide_rule) " label="Use peptide rule instead of minimal protein id probability" name="param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_thresholds_use_peptide_rule" optional="True" truevalue="-algorithm:MSSim:RawTandemSignal:Precursor:ProteinBasedInclusion:thresholds:use_peptide_rule" type="boolean"/>
      <param help="(-min_peptide_ids) " label="If use_peptide_rule is true, this parameter sets the minimal number of peptide ids for a protein id" min="1" name="param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_thresholds_min_peptide_ids" optional="True" type="integer" value="2"/>
      <param help="(-min_peptide_probability) " label="If use_peptide_rule is true, this parameter sets the minimal probability for a peptide to be safely identified" max="1.0" min="0.0" name="param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_thresholds_min_peptide_probability" optional="True" type="float" value="0.95"/>
      <param checked="false" falsevalue="" help="(-add_single_spectra) They will have a meta value 'MSE_DebugSpectrum' attached, so they can be filtered out. Native MS_E spectra will have 'MSE_Spectrum' instead" label="If true, the MS2 spectra for each peptide signal are included in the output (might be a lot)" name="param_algorithm_MSSim_RawTandemSignal_MS_E_add_single_spectra" optional="True" truevalue="-algorithm:MSSim:RawTandemSignal:MS_E:add_single_spectra" type="boolean"/>
      <param checked="false" falsevalue="" help="(-add_isotopes) " label="If set to 1 isotope peaks of the product ion peaks are added" name="param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_add_isotopes" optional="True" truevalue="-algorithm:MSSim:RawTandemSignal:TandemSim:Simple:add_isotopes" type="boolean"/>
      <param help="(-max_isotope) " label="Defines the maximal isotopic peak which is added, add_isotopes must be set to 1" name="param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_max_isotope" type="integer" value="2"/>
      <param checked="false" falsevalue="" help="(-add_metainfo) " label="Adds the type of peaks as metainfo to the peaks, like y8+, [M-H2O+2H]++" name="param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_add_metainfo" optional="True" truevalue="-algorithm:MSSim:RawTandemSignal:TandemSim:Simple:add_metainfo" type="boolean"/>
      <param checked="false" falsevalue="" help="(-add_losses) " label="Adds common losses to those ion expect to have them, only water and ammonia loss is considered" name="param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_add_losses" optional="True" truevalue="-algorithm:MSSim:RawTandemSignal:TandemSim:Simple:add_losses" type="boolean"/>
      <param checked="false" falsevalue="" help="(-add_precursor_peaks) " label="Adds peaks of the precursor to the spectrum, which happen to occur sometimes" name="param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_add_precursor_peaks" optional="True" truevalue="-algorithm:MSSim:RawTandemSignal:TandemSim:Simple:add_precursor_peaks" type="boolean"/>
      <param checked="false" falsevalue="" help="(-add_abundant_immonium_ions) " label="Add most abundant immonium ions" name="param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_add_abundant_immonium_ions" optional="True" truevalue="-algorithm:MSSim:RawTandemSignal:TandemSim:Simple:add_abundant_immonium_ions" type="boolean"/>
      <param checked="false" falsevalue="" help="(-add_first_prefix_ion) " label="If set to true e.g. b1 ions are added" name="param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_add_first_prefix_ion" optional="True" truevalue="-algorithm:MSSim:RawTandemSignal:TandemSim:Simple:add_first_prefix_ion" type="boolean"/>
      <param checked="true" falsevalue="" help="(-add_y_ions) " label="Add peaks of y-ions to the spectrum" name="param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_add_y_ions" optional="True" truevalue="-algorithm:MSSim:RawTandemSignal:TandemSim:Simple:add_y_ions" type="boolean"/>
      <param checked="true" falsevalue="" help="(-add_b_ions) " label="Add peaks of b-ions to the spectrum" name="param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_add_b_ions" optional="True" truevalue="-algorithm:MSSim:RawTandemSignal:TandemSim:Simple:add_b_ions" type="boolean"/>
      <param checked="false" falsevalue="" help="(-add_a_ions) " label="Add peaks of a-ions to the spectrum" name="param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_add_a_ions" optional="True" truevalue="-algorithm:MSSim:RawTandemSignal:TandemSim:Simple:add_a_ions" type="boolean"/>
      <param checked="false" falsevalue="" help="(-add_c_ions) " label="Add peaks of c-ions to the spectrum" name="param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_add_c_ions" optional="True" truevalue="-algorithm:MSSim:RawTandemSignal:TandemSim:Simple:add_c_ions" type="boolean"/>
      <param checked="false" falsevalue="" help="(-add_x_ions) " label="Add peaks of  x-ions to the spectrum" name="param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_add_x_ions" optional="True" truevalue="-algorithm:MSSim:RawTandemSignal:TandemSim:Simple:add_x_ions" type="boolean"/>
      <param checked="false" falsevalue="" help="(-add_z_ions) " label="Add peaks of z-ions to the spectrum" name="param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_add_z_ions" optional="True" truevalue="-algorithm:MSSim:RawTandemSignal:TandemSim:Simple:add_z_ions" type="boolean"/>
      <param help="(-y_intensity) " label="Intensity of the y-ions" name="param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_y_intensity" type="float" value="1.0"/>
      <param help="(-b_intensity) " label="Intensity of the b-ions" name="param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_b_intensity" type="float" value="1.0"/>
      <param help="(-a_intensity) " label="Intensity of the a-ions" name="param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_a_intensity" type="float" value="1.0"/>
      <param help="(-c_intensity) " label="Intensity of the c-ions" name="param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_c_intensity" type="float" value="1.0"/>
      <param help="(-x_intensity) " label="Intensity of the x-ions" name="param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_x_intensity" type="float" value="1.0"/>
      <param help="(-z_intensity) " label="Intensity of the z-ions" name="param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_z_intensity" type="float" value="1.0"/>
      <param help="(-relative_loss_intensity) " label="Intensity of loss ions, in relation to the intact ion intensity" name="param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_relative_loss_intensity" type="float" value="0.1"/>
      <param help="(-precursor_intensity) " label="Intensity of the precursor peak" name="param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_precursor_intensity" type="float" value="1.0"/>
      <param help="(-precursor_H2O_intensity) " label="Intensity of the H2O loss peak of the precurso" name="param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_precursor_H2O_intensity" type="float" value="1.0"/>
      <param help="(-precursor_NH3_intensity) " label="Intensity of the NH3 loss peak of the precurso" name="param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_precursor_NH3_intensity" type="float" value="1.0"/>
      <param checked="false" falsevalue="" help="(-add_isotopes) " label="If set to 1 isotope peaks of the product ion peaks are added" name="param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_add_isotopes" optional="True" truevalue="-algorithm:MSSim:RawTandemSignal:TandemSim:SVM:add_isotopes" type="boolean"/>
      <param help="(-max_isotope) " label="Defines the maximal isotopic peak which is added, add_isotopes must be set to 1" name="param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_max_isotope" type="integer" value="2"/>
      <param checked="false" falsevalue="" help="(-add_metainfo) " label="Adds the type of peaks as metainfo to the peaks, like y8+, [M-H2O+2H]++" name="param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_add_metainfo" optional="True" truevalue="-algorithm:MSSim:RawTandemSignal:TandemSim:SVM:add_metainfo" type="boolean"/>
      <param checked="false" falsevalue="" help="(-add_first_prefix_ion) " label="If set to true e.g. b1 ions are added" name="param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_add_first_prefix_ion" optional="True" truevalue="-algorithm:MSSim:RawTandemSignal:TandemSim:SVM:add_first_prefix_ion" type="boolean"/>
      <param checked="false" falsevalue="" help="(-hide_y_ions) " label="Add peaks of y-ions to the spectrum" name="param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_hide_y_ions" optional="True" truevalue="-algorithm:MSSim:RawTandemSignal:TandemSim:SVM:hide_y_ions" type="boolean"/>
      <param checked="false" falsevalue="" help="(-hide_y2_ions) " label="Add peaks of y-ions to the spectrum" name="param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_hide_y2_ions" optional="True" truevalue="-algorithm:MSSim:RawTandemSignal:TandemSim:SVM:hide_y2_ions" type="boolean"/>
      <param checked="false" falsevalue="" help="(-hide_b_ions) " label="Add peaks of b-ions to the spectrum" name="param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_hide_b_ions" optional="True" truevalue="-algorithm:MSSim:RawTandemSignal:TandemSim:SVM:hide_b_ions" type="boolean"/>
      <param checked="false" falsevalue="" help="(-hide_b2_ions) " label="Add peaks of b-ions to the spectrum" name="param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_hide_b2_ions" optional="True" truevalue="-algorithm:MSSim:RawTandemSignal:TandemSim:SVM:hide_b2_ions" type="boolean"/>
      <param checked="false" falsevalue="" help="(-hide_a_ions) " label="Add peaks of a-ions to the spectrum" name="param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_hide_a_ions" optional="True" truevalue="-algorithm:MSSim:RawTandemSignal:TandemSim:SVM:hide_a_ions" type="boolean"/>
      <param checked="false" falsevalue="" help="(-hide_c_ions) " label="Add peaks of c-ions to the spectrum" name="param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_hide_c_ions" optional="True" truevalue="-algorithm:MSSim:RawTandemSignal:TandemSim:SVM:hide_c_ions" type="boolean"/>
      <param checked="false" falsevalue="" help="(-hide_x_ions) " label="Add peaks of  x-ions to the spectrum" name="param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_hide_x_ions" optional="True" truevalue="-algorithm:MSSim:RawTandemSignal:TandemSim:SVM:hide_x_ions" type="boolean"/>
      <param checked="false" falsevalue="" help="(-hide_z_ions) " label="Add peaks of z-ions to the spectrum" name="param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_hide_z_ions" optional="True" truevalue="-algorithm:MSSim:RawTandemSignal:TandemSim:SVM:hide_z_ions" type="boolean"/>
      <param checked="false" falsevalue="" help="(-hide_losses) " label="Adds common losses to those ion expect to have them, only water and ammonia loss is considered" name="param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_hide_losses" optional="True" truevalue="-algorithm:MSSim:RawTandemSignal:TandemSim:SVM:hide_losses" type="boolean"/>
      <param help="(-y_intensity) " label="Intensity of the y-ions" name="param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_y_intensity" type="float" value="1.0"/>
      <param help="(-b_intensity) " label="Intensity of the b-ions" name="param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_b_intensity" type="float" value="1.0"/>
      <param help="(-a_intensity) " label="Intensity of the a-ions" name="param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_a_intensity" type="float" value="1.0"/>
      <param help="(-c_intensity) " label="Intensity of the c-ions" name="param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_c_intensity" type="float" value="1.0"/>
      <param help="(-x_intensity) " label="Intensity of the x-ions" name="param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_x_intensity" type="float" value="1.0"/>
      <param help="(-z_intensity) " label="Intensity of the z-ions" name="param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_z_intensity" type="float" value="1.0"/>
      <param help="(-relative_loss_intensity) " label="Intensity of loss ions, in relation to the intact ion intensity" name="param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_relative_loss_intensity" type="float" value="0.1"/>
      <param help="(-ionization_type) " label="Type of Ionization (MALDI or ESI)" name="param_algorithm_MSSim_Global_ionization_type" optional="True" type="select" value="ESI">
        <option value="MALDI">MALDI</option>
        <option value="ESI">ESI</option>
      </param>
      <param help="(-type) " label="Select the labeling type you want for your experiment" name="param_algorithm_MSSim_Labeling_type" optional="True" type="select" value="labelfree">
        <option value="ICPL">ICPL</option>
        <option value="SILAC">SILAC</option>
        <option value="itraq">itraq</option>
        <option value="labelfree">labelfree</option>
        <option value="o18">o18</option>
      </param>
      <param help="(-ICPL_fixed_rtshift) If set to 0.0 only the retention times, computed by the RT model step are used" label="Fixed retention time shift between labeled pairs" name="param_algorithm_MSSim_Labeling_ICPL_ICPL_fixed_rtshift" type="float" value="0.0"/>
      <param checked="true" falsevalue="" help="(-label_proteins) (select 'false' if you only need peptide-labeling)" label="Enables protein-labeling" name="param_algorithm_MSSim_Labeling_ICPL_label_proteins" optional="True" truevalue="-algorithm:MSSim:Labeling:ICPL:label_proteins" type="boolean"/>
      <param help="(-fixed_rtshift) If set to 0.0 only the retention times computed by the RT model step are used" label="Fixed retention time shift between labeled peptides" min="0.0" name="param_algorithm_MSSim_Labeling_SILAC_fixed_rtshift" optional="True" type="float" value="0.0001"/>
      <param help="(-modification_lysine) " label="Modification of Lysine in the medium SILAC channel" name="param_algorithm_MSSim_Labeling_SILAC_medium_channel_modification_lysine" size="30" type="text" value="UniMod:481">
        <sanitizer>
          <valid initial="string.printable">
            <remove value="'"/>
            <remove value="&quot;"/>
          </valid>
        </sanitizer>
      </param>
      <param help="(-modification_arginine) " label="Modification of Arginine in the medium SILAC channel" name="param_algorithm_MSSim_Labeling_SILAC_medium_channel_modification_arginine" size="30" type="text" value="UniMod:188">
        <sanitizer>
          <valid initial="string.printable">
            <remove value="'"/>
            <remove value="&quot;"/>
          </valid>
        </sanitizer>
      </param>
      <param help="(-modification_lysine) If left empty, two channelSILAC is assumed" label="Modification of Lysine in the heavy SILAC channel" name="param_algorithm_MSSim_Labeling_SILAC_heavy_channel_modification_lysine" size="30" type="text" value="UniMod:259">
        <sanitizer>
          <valid initial="string.printable">
            <remove value="'"/>
            <remove value="&quot;"/>
          </valid>
        </sanitizer>
      </param>
      <param help="(-modification_arginine) If left empty, two-channel SILAC is assumed" label="Modification of Arginine in the heavy SILAC channel" name="param_algorithm_MSSim_Labeling_SILAC_heavy_channel_modification_arginine" size="30" type="text" value="UniMod:267">
        <sanitizer>
          <valid initial="string.printable">
            <remove value="'"/>
            <remove value="&quot;"/>
          </valid>
        </sanitizer>
      </param>
      <param help="(-iTRAQ) " label="4plex or 8plex iTRAQ?" name="param_algorithm_MSSim_Labeling_itraq_iTRAQ" optional="True" type="select" value="4plex">
        <option value="4plex">4plex</option>
        <option value="8plex">8plex</option>
      </param>
      <param help="(-reporter_mass_shift) e.g. 114.1, 115.1)" label="Allowed shift (uniformly distributed - left to right) in Da from the expected position (of" max="0.5" min="0.0" name="param_algorithm_MSSim_Labeling_itraq_reporter_mass_shift" optional="True" type="float" value="0.1"/>
      <repeat max="1" min="0" name="rep_param_algorithm_MSSim_Labeling_itraq_channel_active_4plex" title="param_algorithm_MSSim_Labeling_itraq_channel_active_4plex">
        <param help="(-channel_active_4plex) e.g. &quot;114:myref&quot;,&quot;115:liver&quot;" label="Four-plex only: Each channel that was used in the experiment and its description (114-117) in format &lt;channel&gt;:&lt;name&gt;," name="param_algorithm_MSSim_Labeling_itraq_channel_active_4plex" size="30" type="text" value="114:myReference">
          <sanitizer>
            <valid initial="string.printable">
              <remove value="'"/>
              <remove value="&quot;"/>
            </valid>
          </sanitizer>
        </param>
      </repeat>
      <repeat max="1" min="0" name="rep_param_algorithm_MSSim_Labeling_itraq_channel_active_8plex" title="param_algorithm_MSSim_Labeling_itraq_channel_active_8plex">
        <param help="(-channel_active_8plex) e.g. &quot;113:myref&quot;,&quot;115:liver&quot;,&quot;118:lung&quot;" label="Eight-plex only: Each channel that was used in the experiment and its description (113-121) in format &lt;channel&gt;:&lt;name&gt;," name="param_algorithm_MSSim_Labeling_itraq_channel_active_8plex" size="30" type="text" value="113:myReference">
          <sanitizer>
            <valid initial="string.printable">
              <remove value="'"/>
              <remove value="&quot;"/>
            </valid>
          </sanitizer>
        </param>
      </repeat>
      <param help="(-Y_contamination) 0=off, 1=full labeling" label="Efficiency of labeling tyrosine ('Y') residues" max="1.0" min="0.0" name="param_algorithm_MSSim_Labeling_itraq_Y_contamination" optional="True" type="float" value="0.3"/>
      <param help="(-labeling_efficiency) " label="Describes the distribution of the labeled peptide over the different states (unlabeled, mono- and di-labeled)" max="1.0" min="0.0" name="param_algorithm_MSSim_Labeling_o18_labeling_efficiency" optional="True" type="float" value="1.0"/>
      <param help="(-biological) e.g. systematic effects like deviations in RT). If set to 'random' each experiment will look different. If set to 'reproducible' each experiment will have the same outcome (given that the input data is the same)" label="Controls the 'biological' randomness of the generated data (" name="param_algorithm_RandomNumberGenerators_biological" optional="True" type="select" value="random">
        <option value="reproducible">reproducible</option>
        <option value="random">random</option>
      </param>
      <param help="(-technical) e.g. noise in the raw signal). If set to 'random' each experiment will look different. If set to 'reproducible' each experiment will have the same outcome (given that the input data is the same)" label="Controls the 'technical' randomness of the generated data (" name="param_algorithm_RandomNumberGenerators_technical" optional="True" type="select" value="random">
        <option value="reproducible">reproducible</option>
        <option value="random">random</option>
      </param>
      <expand macro="advanced_options">
        <param checked="false" falsevalue="" help="(-force) " label="Overwrite tool specific checks" name="param_force" optional="True" truevalue="-force" type="boolean"/>
        <param help="(-max_impurity_set_size) E.g. assuming charge=3 and this parameter is 2, then we could choose to allow '3H+, 2H+Na+' features (given a certain 'charge_impurity' constraints), but no '3H+, 2H+Na+, 3Na+'" label="Maximal #combinations of charge impurities allowed (each generating one feature) per charge state" name="param_algorithm_MSSim_Ionization_esi_max_impurity_set_size" type="integer" value="3"/>
        <param help="(-ICPL_light_channel_label) " label="UniMod Id of the light channel ICPL label" name="param_algorithm_MSSim_Labeling_ICPL_ICPL_light_channel_label" size="30" type="text" value="UniMod:365">
          <sanitizer>
            <valid initial="string.printable">
              <remove value="'"/>
              <remove value="&quot;"/>
            </valid>
          </sanitizer>
        </param>
        <param help="(-ICPL_medium_channel_label) " label="UniMod Id of the medium channel ICPL label" name="param_algorithm_MSSim_Labeling_ICPL_ICPL_medium_channel_label" size="30" type="text" value="UniMod:687">
          <sanitizer>
            <valid initial="string.printable">
              <remove value="'"/>
              <remove value="&quot;"/>
            </valid>
          </sanitizer>
        </param>
        <param help="(-ICPL_heavy_channel_label) " label="UniMod Id of the heavy channel ICPL label" name="param_algorithm_MSSim_Labeling_ICPL_ICPL_heavy_channel_label" size="30" type="text" value="UniMod:364">
          <sanitizer>
            <valid initial="string.printable">
              <remove value="'"/>
              <remove value="&quot;"/>
            </valid>
          </sanitizer>
        </param>
        <repeat max="1" min="0" name="rep_param_algorithm_MSSim_Labeling_itraq_isotope_correction_values_4plex" title="param_algorithm_MSSim_Labeling_itraq_isotope_correction_values_4plex">
          <param help="(-isotope_correction_values_4plex) e.g. '114:0/0.3/4/0' , '116:0.1/0.3/3/0.2' " label="override default values (see Documentation); use the following format: &lt;channel&gt;:&lt;-2Da&gt;/&lt;-1Da&gt;/&lt;+1Da&gt;/&lt;+2Da&gt; ;" name="param_algorithm_MSSim_Labeling_itraq_isotope_correction_values_4plex" size="30" type="text" value="114:0/1/5.9/0.2 115:0/2/5.6/0.1 116:0/3/4.5/0.1 117:0.1/4/3.5/0.1">
            <sanitizer>
              <valid initial="string.printable">
                <remove value="'"/>
                <remove value="&quot;"/>
              </valid>
            </sanitizer>
          </param>
        </repeat>
        <repeat max="1" min="0" name="rep_param_algorithm_MSSim_Labeling_itraq_isotope_correction_values_8plex" title="param_algorithm_MSSim_Labeling_itraq_isotope_correction_values_8plex">
          <param help="(-isotope_correction_values_8plex) e.g. '113:0/0.3/4/0' , '116:0.1/0.3/3/0.2' " label="override default values (see Documentation); use the following format: &lt;channel&gt;:&lt;-2Da&gt;/&lt;-1Da&gt;/&lt;+1Da&gt;/&lt;+2Da&gt; ;" name="param_algorithm_MSSim_Labeling_itraq_isotope_correction_values_8plex" size="30" type="text" value="113:0/0/6.89/0.22 114:0/0.94/5.9/0.16 115:0/1.88/4.9/0.1 116:0/2.82/3.9/0.07 117:0.06/3.77/2.99/0 118:0.09/4.71/1.88/0 119:0.14/5.66/0.87/0 121:0.27/7.44/0.18/0">
            <sanitizer>
              <valid initial="string.printable">
                <remove value="'"/>
                <remove value="&quot;"/>
              </valid>
            </sanitizer>
          </param>
        </repeat>
      </expand>
    </inputs>
    <outputs>
      <data format="mzml" name="param_out"/>
      <data format="mzml" name="param_out_pm"/>
      <data format="xml" name="param_out_fm"/>
      <data format="consensusxml" name="param_out_cm"/>
      <data format="consensusxml" name="param_out_lcm"/>
      <data format="xml" name="param_out_cntm"/>
      <data format="xml" name="param_out_id"/>
    </outputs>
    <help>A highly configurable simulator for mass spectrometry experiments.


For more information, visit http://ftp.mi.fu-berlin.de/OpenMS/release-documentation/html/UTILS_MSSimulator.html</help>
  </tool>
