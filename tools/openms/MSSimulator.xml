<?xml version='1.0' encoding='UTF-8'?>
<!--This is a configuration file for the integration of a tools into Galaxy (https://galaxyproject.org/). This file was automatically generated using CTD2Galaxy.-->
<!--Proposed Tool Section: [Utilities]-->
<tool id="MSSimulator" name="MSSimulator" version="2.1.0">
  <description>A highly configurable simulator for mass spectrometry experiments.</description>
  <macros>
    <token name="@EXECUTABLE@">MSSimulator</token>
    <import>macros.xml</import>
  </macros>
  <expand macro="references"/>
  <expand macro="stdio"/>
  <expand macro="requirements"/>
  <command>MSSimulator

-in
  #for token in $param_in:
    $token
  #end for
#if $param_out:
  -out $param_out
#end if
#if $param_out_pm:
  -out_pm $param_out_pm
#end if
#if $param_out_fm:
  -out_fm $param_out_fm
#end if
#if $param_out_cm:
  -out_cm $param_out_cm
#end if
#if $param_out_lcm:
  -out_lcm $param_out_lcm
#end if
#if $param_out_cntm:
  -out_cntm $param_out_cntm
#end if
#if $param_out_id:
  -out_id $param_out_id
#end if
#if $param_algorithm_MSSim_Digestion_enzyme:
  -algorithm:MSSim:Digestion:enzyme $param_algorithm_MSSim_Digestion_enzyme
#end if
#if $param_algorithm_MSSim_Digestion_model:
  -algorithm:MSSim:Digestion:model $param_algorithm_MSSim_Digestion_model
#end if
#if $param_algorithm_MSSim_Digestion_min_peptide_length:
  -algorithm:MSSim:Digestion:min_peptide_length $param_algorithm_MSSim_Digestion_min_peptide_length
#end if
#if $param_algorithm_MSSim_Digestion_model_trained_threshold:
  -algorithm:MSSim:Digestion:model_trained:threshold $param_algorithm_MSSim_Digestion_model_trained_threshold
#end if
#if $param_algorithm_MSSim_Digestion_model_naive_missed_cleavages:
  -algorithm:MSSim:Digestion:model_naive:missed_cleavages $param_algorithm_MSSim_Digestion_model_naive_missed_cleavages
#end if
#if $param_algorithm_MSSim_RT_rt_column:
  -algorithm:MSSim:RT:rt_column $param_algorithm_MSSim_RT_rt_column
#end if
#if $param_algorithm_MSSim_RT_auto_scale:
  -algorithm:MSSim:RT:auto_scale $param_algorithm_MSSim_RT_auto_scale
#end if
#if $param_algorithm_MSSim_RT_total_gradient_time:
  -algorithm:MSSim:RT:total_gradient_time $param_algorithm_MSSim_RT_total_gradient_time
#end if
#if $param_algorithm_MSSim_RT_sampling_rate:
  -algorithm:MSSim:RT:sampling_rate $param_algorithm_MSSim_RT_sampling_rate
#end if
#if $param_algorithm_MSSim_RT_scan_window_min:
  -algorithm:MSSim:RT:scan_window:min $param_algorithm_MSSim_RT_scan_window_min
#end if
#if $param_algorithm_MSSim_RT_scan_window_max:
  -algorithm:MSSim:RT:scan_window:max $param_algorithm_MSSim_RT_scan_window_max
#end if
#if $param_algorithm_MSSim_RT_variation_feature_stddev:
  -algorithm:MSSim:RT:variation:feature_stddev $param_algorithm_MSSim_RT_variation_feature_stddev
#end if
#if $param_algorithm_MSSim_RT_variation_affine_offset:
  -algorithm:MSSim:RT:variation:affine_offset $param_algorithm_MSSim_RT_variation_affine_offset
#end if
#if $param_algorithm_MSSim_RT_variation_affine_scale:
  -algorithm:MSSim:RT:variation:affine_scale $param_algorithm_MSSim_RT_variation_affine_scale
#end if
#if $param_algorithm_MSSim_RT_column_condition_distortion:
  -algorithm:MSSim:RT:column_condition:distortion $param_algorithm_MSSim_RT_column_condition_distortion
#end if
#if $param_algorithm_MSSim_RT_profile_shape_width_value:
  -algorithm:MSSim:RT:profile_shape:width:value $param_algorithm_MSSim_RT_profile_shape_width_value
#end if
#if $param_algorithm_MSSim_RT_profile_shape_width_variance:
  -algorithm:MSSim:RT:profile_shape:width:variance $param_algorithm_MSSim_RT_profile_shape_width_variance
#end if
#if $param_algorithm_MSSim_RT_profile_shape_skewness_value:
  -algorithm:MSSim:RT:profile_shape:skewness:value $param_algorithm_MSSim_RT_profile_shape_skewness_value
#end if
#if $param_algorithm_MSSim_RT_profile_shape_skewness_variance:
  -algorithm:MSSim:RT:profile_shape:skewness:variance $param_algorithm_MSSim_RT_profile_shape_skewness_variance
#end if
#if $param_algorithm_MSSim_RT_HPLC_model_file:
  -algorithm:MSSim:RT:HPLC:model_file     "$param_algorithm_MSSim_RT_HPLC_model_file"
#end if
#if $param_algorithm_MSSim_RT_CE_pH:
  -algorithm:MSSim:RT:CE:pH $param_algorithm_MSSim_RT_CE_pH
#end if
#if $param_algorithm_MSSim_RT_CE_alpha:
  -algorithm:MSSim:RT:CE:alpha $param_algorithm_MSSim_RT_CE_alpha
#end if
#if $param_algorithm_MSSim_RT_CE_mu_eo:
  -algorithm:MSSim:RT:CE:mu_eo $param_algorithm_MSSim_RT_CE_mu_eo
#end if
#if $param_algorithm_MSSim_RT_CE_lenght_d:
  -algorithm:MSSim:RT:CE:lenght_d $param_algorithm_MSSim_RT_CE_lenght_d
#end if
#if $param_algorithm_MSSim_RT_CE_length_total:
  -algorithm:MSSim:RT:CE:length_total $param_algorithm_MSSim_RT_CE_length_total
#end if
#if $param_algorithm_MSSim_RT_CE_voltage:
  -algorithm:MSSim:RT:CE:voltage $param_algorithm_MSSim_RT_CE_voltage
#end if
#if $param_algorithm_MSSim_Detectability_dt_simulation_on:
  -algorithm:MSSim:Detectability:dt_simulation_on
#end if
#if $param_algorithm_MSSim_Detectability_min_detect:
  -algorithm:MSSim:Detectability:min_detect $param_algorithm_MSSim_Detectability_min_detect
#end if
#if $param_algorithm_MSSim_Detectability_dt_model_file:
  -algorithm:MSSim:Detectability:dt_model_file     "$param_algorithm_MSSim_Detectability_dt_model_file"
#end if

#if $rep_param_algorithm_MSSim_Ionization_esi_ionized_residues:
-algorithm:MSSim:Ionization:esi:ionized_residues
  #for token in $rep_param_algorithm_MSSim_Ionization_esi_ionized_residues:
    #if " " in str(token):
      "$token.param_algorithm_MSSim_Ionization_esi_ionized_residues"
    #else
      $token.param_algorithm_MSSim_Ionization_esi_ionized_residues
    #end if
  #end for
#end if

#if $rep_param_algorithm_MSSim_Ionization_esi_charge_impurity:
-algorithm:MSSim:Ionization:esi:charge_impurity
  #for token in $rep_param_algorithm_MSSim_Ionization_esi_charge_impurity:
    #if " " in str(token):
      "$token.param_algorithm_MSSim_Ionization_esi_charge_impurity"
    #else
      $token.param_algorithm_MSSim_Ionization_esi_charge_impurity
    #end if
  #end for
#end if
#if $param_algorithm_MSSim_Ionization_esi_ionization_probability:
  -algorithm:MSSim:Ionization:esi:ionization_probability $param_algorithm_MSSim_Ionization_esi_ionization_probability
#end if

#if $rep_param_algorithm_MSSim_Ionization_maldi_ionization_probabilities:
-algorithm:MSSim:Ionization:maldi:ionization_probabilities
  #for token in $rep_param_algorithm_MSSim_Ionization_maldi_ionization_probabilities:
    #if " " in str(token):
      "$token.param_algorithm_MSSim_Ionization_maldi_ionization_probabilities"
    #else
      $token.param_algorithm_MSSim_Ionization_maldi_ionization_probabilities
    #end if
  #end for
#end if
#if $param_algorithm_MSSim_Ionization_mz_lower_measurement_limit:
  -algorithm:MSSim:Ionization:mz:lower_measurement_limit $param_algorithm_MSSim_Ionization_mz_lower_measurement_limit
#end if
#if $param_algorithm_MSSim_Ionization_mz_upper_measurement_limit:
  -algorithm:MSSim:Ionization:mz:upper_measurement_limit $param_algorithm_MSSim_Ionization_mz_upper_measurement_limit
#end if
#if $param_algorithm_MSSim_RawSignal_enabled:
  -algorithm:MSSim:RawSignal:enabled $param_algorithm_MSSim_RawSignal_enabled
#end if
#if $param_algorithm_MSSim_RawSignal_peak_shape:
  -algorithm:MSSim:RawSignal:peak_shape $param_algorithm_MSSim_RawSignal_peak_shape
#end if
#if $param_algorithm_MSSim_RawSignal_resolution_value:
  -algorithm:MSSim:RawSignal:resolution:value $param_algorithm_MSSim_RawSignal_resolution_value
#end if
#if $param_algorithm_MSSim_RawSignal_resolution_type:
  -algorithm:MSSim:RawSignal:resolution:type $param_algorithm_MSSim_RawSignal_resolution_type
#end if
#if $param_algorithm_MSSim_RawSignal_baseline_scaling:
  -algorithm:MSSim:RawSignal:baseline:scaling $param_algorithm_MSSim_RawSignal_baseline_scaling
#end if
#if $param_algorithm_MSSim_RawSignal_baseline_shape:
  -algorithm:MSSim:RawSignal:baseline:shape $param_algorithm_MSSim_RawSignal_baseline_shape
#end if
#if $param_algorithm_MSSim_RawSignal_mz_sampling_points:
  -algorithm:MSSim:RawSignal:mz:sampling_points $param_algorithm_MSSim_RawSignal_mz_sampling_points
#end if
#if $param_algorithm_MSSim_RawSignal_contaminants_file:
  -algorithm:MSSim:RawSignal:contaminants:file     "$param_algorithm_MSSim_RawSignal_contaminants_file"
#end if
#if $param_algorithm_MSSim_RawSignal_variation_mz_error_stddev:
  -algorithm:MSSim:RawSignal:variation:mz:error_stddev $param_algorithm_MSSim_RawSignal_variation_mz_error_stddev
#end if
#if $param_algorithm_MSSim_RawSignal_variation_mz_error_mean:
  -algorithm:MSSim:RawSignal:variation:mz:error_mean $param_algorithm_MSSim_RawSignal_variation_mz_error_mean
#end if
#if $param_algorithm_MSSim_RawSignal_variation_intensity_scale:
  -algorithm:MSSim:RawSignal:variation:intensity:scale $param_algorithm_MSSim_RawSignal_variation_intensity_scale
#end if
#if $param_algorithm_MSSim_RawSignal_variation_intensity_scale_stddev:
  -algorithm:MSSim:RawSignal:variation:intensity:scale_stddev $param_algorithm_MSSim_RawSignal_variation_intensity_scale_stddev
#end if
#if $param_algorithm_MSSim_RawSignal_noise_shot_rate:
  -algorithm:MSSim:RawSignal:noise:shot:rate $param_algorithm_MSSim_RawSignal_noise_shot_rate
#end if
#if $param_algorithm_MSSim_RawSignal_noise_shot_intensity_mean:
  -algorithm:MSSim:RawSignal:noise:shot:intensity-mean $param_algorithm_MSSim_RawSignal_noise_shot_intensity_mean
#end if
#if $param_algorithm_MSSim_RawSignal_noise_white_mean:
  -algorithm:MSSim:RawSignal:noise:white:mean $param_algorithm_MSSim_RawSignal_noise_white_mean
#end if
#if $param_algorithm_MSSim_RawSignal_noise_white_stddev:
  -algorithm:MSSim:RawSignal:noise:white:stddev $param_algorithm_MSSim_RawSignal_noise_white_stddev
#end if
#if $param_algorithm_MSSim_RawSignal_noise_detector_mean:
  -algorithm:MSSim:RawSignal:noise:detector:mean $param_algorithm_MSSim_RawSignal_noise_detector_mean
#end if
#if $param_algorithm_MSSim_RawSignal_noise_detector_stddev:
  -algorithm:MSSim:RawSignal:noise:detector:stddev $param_algorithm_MSSim_RawSignal_noise_detector_stddev
#end if
#if $param_algorithm_MSSim_RawTandemSignal_status:
  -algorithm:MSSim:RawTandemSignal:status $param_algorithm_MSSim_RawTandemSignal_status
#end if
#if $param_algorithm_MSSim_RawTandemSignal_tandem_mode:
  -algorithm:MSSim:RawTandemSignal:tandem_mode $param_algorithm_MSSim_RawTandemSignal_tandem_mode
#end if
#if $param_algorithm_MSSim_RawTandemSignal_svm_model_set_file:
  -algorithm:MSSim:RawTandemSignal:svm_model_set_file     "$param_algorithm_MSSim_RawTandemSignal_svm_model_set_file"
#end if
#if $param_algorithm_MSSim_RawTandemSignal_Precursor_ms2_spectra_per_rt_bin:
  -algorithm:MSSim:RawTandemSignal:Precursor:ms2_spectra_per_rt_bin $param_algorithm_MSSim_RawTandemSignal_Precursor_ms2_spectra_per_rt_bin
#end if
#if $param_algorithm_MSSim_RawTandemSignal_Precursor_min_mz_peak_distance:
  -algorithm:MSSim:RawTandemSignal:Precursor:min_mz_peak_distance $param_algorithm_MSSim_RawTandemSignal_Precursor_min_mz_peak_distance
#end if
#if $param_algorithm_MSSim_RawTandemSignal_Precursor_mz_isolation_window:
  -algorithm:MSSim:RawTandemSignal:Precursor:mz_isolation_window $param_algorithm_MSSim_RawTandemSignal_Precursor_mz_isolation_window
#end if
#if $param_algorithm_MSSim_RawTandemSignal_Precursor_exclude_overlapping_peaks:
  -algorithm:MSSim:RawTandemSignal:Precursor:exclude_overlapping_peaks
#end if

#if $rep_param_algorithm_MSSim_RawTandemSignal_Precursor_charge_filter:
-algorithm:MSSim:RawTandemSignal:Precursor:charge_filter
  #for token in $rep_param_algorithm_MSSim_RawTandemSignal_Precursor_charge_filter:
    #if " " in str(token):
      "$token.param_algorithm_MSSim_RawTandemSignal_Precursor_charge_filter"
    #else
      $token.param_algorithm_MSSim_RawTandemSignal_Precursor_charge_filter
    #end if
  #end for
#end if
#if $param_algorithm_MSSim_RawTandemSignal_Precursor_Exclusion_use_dynamic_exclusion:
  -algorithm:MSSim:RawTandemSignal:Precursor:Exclusion:use_dynamic_exclusion
#end if
#if $param_algorithm_MSSim_RawTandemSignal_Precursor_Exclusion_exclusion_time:
  -algorithm:MSSim:RawTandemSignal:Precursor:Exclusion:exclusion_time $param_algorithm_MSSim_RawTandemSignal_Precursor_Exclusion_exclusion_time
#end if
#if $param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_max_list_size:
  -algorithm:MSSim:RawTandemSignal:Precursor:ProteinBasedInclusion:max_list_size $param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_max_list_size
#end if
#if $param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_rt_min_rt:
  -algorithm:MSSim:RawTandemSignal:Precursor:ProteinBasedInclusion:rt:min_rt $param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_rt_min_rt
#end if
#if $param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_rt_max_rt:
  -algorithm:MSSim:RawTandemSignal:Precursor:ProteinBasedInclusion:rt:max_rt $param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_rt_max_rt
#end if
#if $param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_rt_rt_step_size:
  -algorithm:MSSim:RawTandemSignal:Precursor:ProteinBasedInclusion:rt:rt_step_size $param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_rt_rt_step_size
#end if
#if $param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_rt_rt_window_size:
  -algorithm:MSSim:RawTandemSignal:Precursor:ProteinBasedInclusion:rt:rt_window_size $param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_rt_rt_window_size
#end if
#if $param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_thresholds_min_protein_id_probability:
  -algorithm:MSSim:RawTandemSignal:Precursor:ProteinBasedInclusion:thresholds:min_protein_id_probability $param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_thresholds_min_protein_id_probability
#end if
#if $param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_thresholds_min_pt_weight:
  -algorithm:MSSim:RawTandemSignal:Precursor:ProteinBasedInclusion:thresholds:min_pt_weight $param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_thresholds_min_pt_weight
#end if
#if $param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_thresholds_min_mz:
  -algorithm:MSSim:RawTandemSignal:Precursor:ProteinBasedInclusion:thresholds:min_mz $param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_thresholds_min_mz
#end if
#if $param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_thresholds_max_mz:
  -algorithm:MSSim:RawTandemSignal:Precursor:ProteinBasedInclusion:thresholds:max_mz $param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_thresholds_max_mz
#end if
#if $param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_thresholds_use_peptide_rule:
  -algorithm:MSSim:RawTandemSignal:Precursor:ProteinBasedInclusion:thresholds:use_peptide_rule
#end if
#if $param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_thresholds_min_peptide_ids:
  -algorithm:MSSim:RawTandemSignal:Precursor:ProteinBasedInclusion:thresholds:min_peptide_ids $param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_thresholds_min_peptide_ids
#end if
#if $param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_thresholds_min_peptide_probability:
  -algorithm:MSSim:RawTandemSignal:Precursor:ProteinBasedInclusion:thresholds:min_peptide_probability $param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_thresholds_min_peptide_probability
#end if
#if $param_algorithm_MSSim_RawTandemSignal_MS_E_add_single_spectra:
  -algorithm:MSSim:RawTandemSignal:MS_E:add_single_spectra
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_add_isotopes:
  -algorithm:MSSim:RawTandemSignal:TandemSim:Simple:add_isotopes
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_max_isotope:
  -algorithm:MSSim:RawTandemSignal:TandemSim:Simple:max_isotope $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_max_isotope
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_add_metainfo:
  -algorithm:MSSim:RawTandemSignal:TandemSim:Simple:add_metainfo
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_add_losses:
  -algorithm:MSSim:RawTandemSignal:TandemSim:Simple:add_losses
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_add_precursor_peaks:
  -algorithm:MSSim:RawTandemSignal:TandemSim:Simple:add_precursor_peaks
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_add_abundant_immonium_ions:
  -algorithm:MSSim:RawTandemSignal:TandemSim:Simple:add_abundant_immonium_ions
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_add_first_prefix_ion:
  -algorithm:MSSim:RawTandemSignal:TandemSim:Simple:add_first_prefix_ion
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_add_y_ions:
  -algorithm:MSSim:RawTandemSignal:TandemSim:Simple:add_y_ions $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_add_y_ions
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_add_b_ions:
  -algorithm:MSSim:RawTandemSignal:TandemSim:Simple:add_b_ions $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_add_b_ions
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_add_a_ions:
  -algorithm:MSSim:RawTandemSignal:TandemSim:Simple:add_a_ions
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_add_c_ions:
  -algorithm:MSSim:RawTandemSignal:TandemSim:Simple:add_c_ions
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_add_x_ions:
  -algorithm:MSSim:RawTandemSignal:TandemSim:Simple:add_x_ions
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_add_z_ions:
  -algorithm:MSSim:RawTandemSignal:TandemSim:Simple:add_z_ions
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_y_intensity:
  -algorithm:MSSim:RawTandemSignal:TandemSim:Simple:y_intensity $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_y_intensity
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_b_intensity:
  -algorithm:MSSim:RawTandemSignal:TandemSim:Simple:b_intensity $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_b_intensity
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_a_intensity:
  -algorithm:MSSim:RawTandemSignal:TandemSim:Simple:a_intensity $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_a_intensity
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_c_intensity:
  -algorithm:MSSim:RawTandemSignal:TandemSim:Simple:c_intensity $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_c_intensity
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_x_intensity:
  -algorithm:MSSim:RawTandemSignal:TandemSim:Simple:x_intensity $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_x_intensity
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_z_intensity:
  -algorithm:MSSim:RawTandemSignal:TandemSim:Simple:z_intensity $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_z_intensity
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_relative_loss_intensity:
  -algorithm:MSSim:RawTandemSignal:TandemSim:Simple:relative_loss_intensity $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_relative_loss_intensity
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_precursor_intensity:
  -algorithm:MSSim:RawTandemSignal:TandemSim:Simple:precursor_intensity $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_precursor_intensity
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_precursor_H2O_intensity:
  -algorithm:MSSim:RawTandemSignal:TandemSim:Simple:precursor_H2O_intensity $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_precursor_H2O_intensity
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_precursor_NH3_intensity:
  -algorithm:MSSim:RawTandemSignal:TandemSim:Simple:precursor_NH3_intensity $param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_precursor_NH3_intensity
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_add_isotopes:
  -algorithm:MSSim:RawTandemSignal:TandemSim:SVM:add_isotopes
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_max_isotope:
  -algorithm:MSSim:RawTandemSignal:TandemSim:SVM:max_isotope $param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_max_isotope
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_add_metainfo:
  -algorithm:MSSim:RawTandemSignal:TandemSim:SVM:add_metainfo
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_add_first_prefix_ion:
  -algorithm:MSSim:RawTandemSignal:TandemSim:SVM:add_first_prefix_ion
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_hide_y_ions:
  -algorithm:MSSim:RawTandemSignal:TandemSim:SVM:hide_y_ions
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_hide_y2_ions:
  -algorithm:MSSim:RawTandemSignal:TandemSim:SVM:hide_y2_ions
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_hide_b_ions:
  -algorithm:MSSim:RawTandemSignal:TandemSim:SVM:hide_b_ions
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_hide_b2_ions:
  -algorithm:MSSim:RawTandemSignal:TandemSim:SVM:hide_b2_ions
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_hide_a_ions:
  -algorithm:MSSim:RawTandemSignal:TandemSim:SVM:hide_a_ions
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_hide_c_ions:
  -algorithm:MSSim:RawTandemSignal:TandemSim:SVM:hide_c_ions
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_hide_x_ions:
  -algorithm:MSSim:RawTandemSignal:TandemSim:SVM:hide_x_ions
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_hide_z_ions:
  -algorithm:MSSim:RawTandemSignal:TandemSim:SVM:hide_z_ions
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_hide_losses:
  -algorithm:MSSim:RawTandemSignal:TandemSim:SVM:hide_losses
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_y_intensity:
  -algorithm:MSSim:RawTandemSignal:TandemSim:SVM:y_intensity $param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_y_intensity
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_b_intensity:
  -algorithm:MSSim:RawTandemSignal:TandemSim:SVM:b_intensity $param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_b_intensity
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_a_intensity:
  -algorithm:MSSim:RawTandemSignal:TandemSim:SVM:a_intensity $param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_a_intensity
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_c_intensity:
  -algorithm:MSSim:RawTandemSignal:TandemSim:SVM:c_intensity $param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_c_intensity
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_x_intensity:
  -algorithm:MSSim:RawTandemSignal:TandemSim:SVM:x_intensity $param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_x_intensity
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_z_intensity:
  -algorithm:MSSim:RawTandemSignal:TandemSim:SVM:z_intensity $param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_z_intensity
#end if
#if $param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_relative_loss_intensity:
  -algorithm:MSSim:RawTandemSignal:TandemSim:SVM:relative_loss_intensity $param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_relative_loss_intensity
#end if
#if $param_algorithm_MSSim_Global_ionization_type:
  -algorithm:MSSim:Global:ionization_type $param_algorithm_MSSim_Global_ionization_type
#end if
#if $param_algorithm_MSSim_Labeling_type:
  -algorithm:MSSim:Labeling:type $param_algorithm_MSSim_Labeling_type
#end if
#if $param_algorithm_MSSim_Labeling_ICPL_ICPL_fixed_rtshift:
  -algorithm:MSSim:Labeling:ICPL:ICPL_fixed_rtshift $param_algorithm_MSSim_Labeling_ICPL_ICPL_fixed_rtshift
#end if
#if $param_algorithm_MSSim_Labeling_ICPL_label_proteins:
  -algorithm:MSSim:Labeling:ICPL:label_proteins $param_algorithm_MSSim_Labeling_ICPL_label_proteins
#end if
#if $param_algorithm_MSSim_Labeling_SILAC_fixed_rtshift:
  -algorithm:MSSim:Labeling:SILAC:fixed_rtshift $param_algorithm_MSSim_Labeling_SILAC_fixed_rtshift
#end if
#if $param_algorithm_MSSim_Labeling_SILAC_medium_channel_modification_lysine:
  -algorithm:MSSim:Labeling:SILAC:medium_channel:modification_lysine     "$param_algorithm_MSSim_Labeling_SILAC_medium_channel_modification_lysine"
#end if
#if $param_algorithm_MSSim_Labeling_SILAC_medium_channel_modification_arginine:
  -algorithm:MSSim:Labeling:SILAC:medium_channel:modification_arginine     "$param_algorithm_MSSim_Labeling_SILAC_medium_channel_modification_arginine"
#end if
#if $param_algorithm_MSSim_Labeling_SILAC_heavy_channel_modification_lysine:
  -algorithm:MSSim:Labeling:SILAC:heavy_channel:modification_lysine     "$param_algorithm_MSSim_Labeling_SILAC_heavy_channel_modification_lysine"
#end if
#if $param_algorithm_MSSim_Labeling_SILAC_heavy_channel_modification_arginine:
  -algorithm:MSSim:Labeling:SILAC:heavy_channel:modification_arginine     "$param_algorithm_MSSim_Labeling_SILAC_heavy_channel_modification_arginine"
#end if
#if $param_algorithm_MSSim_Labeling_itraq_iTRAQ:
  -algorithm:MSSim:Labeling:itraq:iTRAQ $param_algorithm_MSSim_Labeling_itraq_iTRAQ
#end if
#if $param_algorithm_MSSim_Labeling_itraq_reporter_mass_shift:
  -algorithm:MSSim:Labeling:itraq:reporter_mass_shift $param_algorithm_MSSim_Labeling_itraq_reporter_mass_shift
#end if

#if $rep_param_algorithm_MSSim_Labeling_itraq_channel_active_4plex:
-algorithm:MSSim:Labeling:itraq:channel_active_4plex
  #for token in $rep_param_algorithm_MSSim_Labeling_itraq_channel_active_4plex:
    #if " " in str(token):
      "$token.param_algorithm_MSSim_Labeling_itraq_channel_active_4plex"
    #else
      $token.param_algorithm_MSSim_Labeling_itraq_channel_active_4plex
    #end if
  #end for
#end if

#if $rep_param_algorithm_MSSim_Labeling_itraq_channel_active_8plex:
-algorithm:MSSim:Labeling:itraq:channel_active_8plex
  #for token in $rep_param_algorithm_MSSim_Labeling_itraq_channel_active_8plex:
    #if " " in str(token):
      "$token.param_algorithm_MSSim_Labeling_itraq_channel_active_8plex"
    #else
      $token.param_algorithm_MSSim_Labeling_itraq_channel_active_8plex
    #end if
  #end for
#end if
#if $param_algorithm_MSSim_Labeling_itraq_Y_contamination:
  -algorithm:MSSim:Labeling:itraq:Y_contamination $param_algorithm_MSSim_Labeling_itraq_Y_contamination
#end if
#if $param_algorithm_MSSim_Labeling_o18_labeling_efficiency:
  -algorithm:MSSim:Labeling:o18:labeling_efficiency $param_algorithm_MSSim_Labeling_o18_labeling_efficiency
#end if
#if $param_algorithm_RandomNumberGenerators_biological:
  -algorithm:RandomNumberGenerators:biological $param_algorithm_RandomNumberGenerators_biological
#end if
#if $param_algorithm_RandomNumberGenerators_technical:
  -algorithm:RandomNumberGenerators:technical $param_algorithm_RandomNumberGenerators_technical
#end if
#if $adv_opts.adv_opts_selector=='advanced':
    #if $adv_opts.param_force:
  -force
#end if
    #if $adv_opts.param_algorithm_MSSim_Ionization_esi_max_impurity_set_size:
  -algorithm:MSSim:Ionization:esi:max_impurity_set_size $adv_opts.param_algorithm_MSSim_Ionization_esi_max_impurity_set_size
#end if
    #if $adv_opts.param_algorithm_MSSim_Labeling_ICPL_ICPL_light_channel_label:
  -algorithm:MSSim:Labeling:ICPL:ICPL_light_channel_label     "$adv_opts.param_algorithm_MSSim_Labeling_ICPL_ICPL_light_channel_label"
#end if
    #if $adv_opts.param_algorithm_MSSim_Labeling_ICPL_ICPL_medium_channel_label:
  -algorithm:MSSim:Labeling:ICPL:ICPL_medium_channel_label     "$adv_opts.param_algorithm_MSSim_Labeling_ICPL_ICPL_medium_channel_label"
#end if
    #if $adv_opts.param_algorithm_MSSim_Labeling_ICPL_ICPL_heavy_channel_label:
  -algorithm:MSSim:Labeling:ICPL:ICPL_heavy_channel_label     "$adv_opts.param_algorithm_MSSim_Labeling_ICPL_ICPL_heavy_channel_label"
#end if
    
#if $rep_param_algorithm_MSSim_Labeling_itraq_isotope_correction_values_4plex:
-algorithm:MSSim:Labeling:itraq:isotope_correction_values_4plex
  #for token in $rep_param_algorithm_MSSim_Labeling_itraq_isotope_correction_values_4plex:
    #if " " in str(token):
      "$token.param_algorithm_MSSim_Labeling_itraq_isotope_correction_values_4plex"
    #else
      $token.param_algorithm_MSSim_Labeling_itraq_isotope_correction_values_4plex
    #end if
  #end for
#end if
    
#if $rep_param_algorithm_MSSim_Labeling_itraq_isotope_correction_values_8plex:
-algorithm:MSSim:Labeling:itraq:isotope_correction_values_8plex
  #for token in $rep_param_algorithm_MSSim_Labeling_itraq_isotope_correction_values_8plex:
    #if " " in str(token):
      "$token.param_algorithm_MSSim_Labeling_itraq_isotope_correction_values_8plex"
    #else
      $token.param_algorithm_MSSim_Labeling_itraq_isotope_correction_values_8plex
    #end if
  #end for
#end if
#end if
</command>
  <inputs>
    <param name="param_in" type="data" format="fasta" multiple="true" optional="False" size="30" label="Input protein sequences" help="(-in) ">
      <sanitizer>
        <valid initial="string.printable">
          <remove value="'"/>
          <remove value="&quot;"/>
        </valid>
      </sanitizer>
    </param>
    <param name="param_algorithm_MSSim_Digestion_enzyme" type="select" optional="False" value="Trypsin" label="Enzyme to use for digestion (select 'no cleavage' to skip digestion)" help="(-enzyme) ">
      <option value="leukocyte elastase">leukocyte elastase</option>
      <option value="Lys-C">Lys-C</option>
      <option value="no cleavage">no cleavage</option>
      <option value="unspecific cleavage">unspecific cleavage</option>
      <option value="Trypsin" selected="true">Trypsin</option>
      <option value="Trypsin/P">Trypsin/P</option>
      <option value="CNBr">CNBr</option>
      <option value="Formic_acid">Formic_acid</option>
      <option value="Lys-C/P">Lys-C/P</option>
      <option value="glutamyl endopeptidase">glutamyl endopeptidase</option>
      <option value="2-iodobenzoate">2-iodobenzoate</option>
      <option value="proline endopeptidase">proline endopeptidase</option>
      <option value="Chymotrypsin">Chymotrypsin</option>
      <option value="V8-E">V8-E</option>
      <option value="V8-DE">V8-DE</option>
      <option value="Asp-N_ambic">Asp-N_ambic</option>
      <option value="TrypChymo">TrypChymo</option>
      <option value="Arg-C">Arg-C</option>
      <option value="Asp-N">Asp-N</option>
      <option value="PepsinA">PepsinA</option>
    </param>
    <param name="param_algorithm_MSSim_Digestion_model" display="radio" type="select" optional="False" value="naive" label="The cleavage model to use for digestion" help="(-model) 'Trained' is based on a log likelihood model (see DOI:10.1021/pr060507u)">
      <option value="trained">trained</option>
      <option value="naive" selected="true">naive</option>
    </param>
    <param name="param_algorithm_MSSim_Digestion_min_peptide_length" type="integer" min="1" optional="True" value="3" label="Minimum peptide length after digestion (shorter ones will be discarded)" help="(-min_peptide_length) "/>
    <param name="param_algorithm_MSSim_Digestion_model_trained_threshold" type="float" min="-2.0" max="4.0" optional="True" value="0.5" label="Model threshold for calling a cleavage" help="(-threshold) Higher values increase the number of cleavages. -2 will give no cleavages, +4 almost full cleavage"/>
    <param name="param_algorithm_MSSim_Digestion_model_naive_missed_cleavages" type="integer" min="0" optional="True" value="1" label="Maximum number of missed cleavages considered" help="(-missed_cleavages) All possible resulting peptides will be created"/>
    <param name="param_algorithm_MSSim_RT_rt_column" display="radio" type="select" optional="False" value="HPLC" label="Modelling of an RT or CE column" help="(-rt_column) ">
      <option value="none">none</option>
      <option value="HPLC" selected="true">HPLC</option>
      <option value="CE">CE</option>
    </param>
    <param name="param_algorithm_MSSim_RT_auto_scale" display="radio" type="select" optional="False" value="true" label="Scale predicted RT's/MT's to given 'total_gradient_time'?" help="(-auto_scale) If 'true', for CE this means that 'CE:lenght_d', 'CE:length_total', 'CE:voltage' have no influence">
      <option value="true" selected="true">true</option>
      <option value="false">false</option>
    </param>
    <param name="param_algorithm_MSSim_RT_total_gradient_time" type="float" min="1e-05" optional="True" value="2500.0" label="The duration [s] of the gradient" help="(-total_gradient_time) "/>
    <param name="param_algorithm_MSSim_RT_sampling_rate" type="float" min="0.01" max="60.0" optional="True" value="2.0" label="Time interval [s] between consecutive scans" help="(-sampling_rate) "/>
    <param name="param_algorithm_MSSim_RT_scan_window_min" type="float" min="0.0" optional="True" value="500.0" label="Start of RT Scan Window [s]" help="(-min) "/>
    <param name="param_algorithm_MSSim_RT_scan_window_max" type="float" min="1.0" optional="True" value="1500.0" label="End of RT Scan Window [s]" help="(-max) "/>
    <param name="param_algorithm_MSSim_RT_variation_feature_stddev" type="integer" value="3" label="Standard deviation of shift in retention time [s] from predicted model (applied to every single feature independently)" help="(-feature_stddev) "/>
    <param name="param_algorithm_MSSim_RT_variation_affine_offset" type="integer" value="0" label="Global offset in retention time [s] from predicted model" help="(-affine_offset) "/>
    <param name="param_algorithm_MSSim_RT_variation_affine_scale" type="integer" value="1" label="Global scaling in retention time from predicted model" help="(-affine_scale) "/>
    <param name="param_algorithm_MSSim_RT_column_condition_distortion" type="integer" min="0" max="10" optional="True" value="0" label="Distortion of the elution profiles. Good presets are 0 for a perfect elution profile, 1 for a slightly distorted elution profile etc... For trapping instruments (" help="(-distortion) e.g. Orbitrap) distortion should be &gt;4"/>
    <param name="param_algorithm_MSSim_RT_profile_shape_width_value" type="float" min="0.0" optional="True" value="9.0" label="Width of the Exponential Gaussian Hybrid distribution shape of the elution profile" help="(-value) This does not correspond directly to the width in [s]"/>
    <param name="param_algorithm_MSSim_RT_profile_shape_width_variance" type="float" min="0.0" optional="True" value="1.6" label="Random component of the width (set to 0 to disable randomness), i.e" help="(-variance) scale parameter for the lorentzian variation of the variance (Note: The scale parameter has to be &gt;= 0)"/>
    <param name="param_algorithm_MSSim_RT_profile_shape_skewness_value" type="float" value="0.1" label="Asymmetric component of the EGH" help="(-value) Higher absolute(!) values lead to more skewness (negative values cause fronting, positive values cause tailing). Tau parameter of the EGH, i.e. time constant of the exponential decay of the Exponential Gaussian Hybrid distribution shape of the elution profile"/>
    <param name="param_algorithm_MSSim_RT_profile_shape_skewness_variance" type="float" min="0.0" optional="True" value="0.3" label="Random component of skewness (set to 0 to disable randomness), i.e" help="(-variance) scale parameter for the lorentzian variation of the time constant (Note: The scale parameter has to be &gt; 0)"/>
    <param name="param_algorithm_MSSim_RT_HPLC_model_file" type="text" size="30" value="examples/simulation/RTPredict.model" label="SVM model for retention time prediction" help="(-model_file) ">
      <sanitizer>
        <valid initial="string.printable">
          <remove value="'"/>
          <remove value="&quot;"/>
        </valid>
      </sanitizer>
    </param>
    <param name="param_algorithm_MSSim_RT_CE_pH" type="float" min="0.0" max="14.0" optional="True" value="3.0" label="pH of buffe" help="(-pH) "/>
    <param name="param_algorithm_MSSim_RT_CE_alpha" type="float" min="0.0" max="1.0" optional="True" value="0.5" label="Exponent Alpha used to calculate mobility" help="(-alpha) "/>
    <param name="param_algorithm_MSSim_RT_CE_mu_eo" type="float" min="0.0" max="5.0" optional="True" value="0.0" label="Electroosmotic flow" help="(-mu_eo) "/>
    <param name="param_algorithm_MSSim_RT_CE_lenght_d" type="float" min="0.0" max="1000.0" optional="True" value="70.0" label="Length of capillary [cm] from injection site to MS" help="(-lenght_d) "/>
    <param name="param_algorithm_MSSim_RT_CE_length_total" type="float" min="0.0" max="1000.0" optional="True" value="75.0" label="Total length of capillary [cm]" help="(-length_total) "/>
    <param name="param_algorithm_MSSim_RT_CE_voltage" type="float" min="0.0" optional="True" value="1000.0" label="Voltage applied to capillary" help="(-voltage) "/>
    <param name="param_algorithm_MSSim_Detectability_dt_simulation_on" display="radio" type="boolean" truevalue="-algorithm:MSSim:Detectability:dt_simulation_on" falsevalue="" checked="false" optional="True" label="Modelling detectibility enabled?" help="(-dt_simulation_on) This can serve as a filter to remove peptides which ionize badly, thus reducing peptide count"/>
    <param name="param_algorithm_MSSim_Detectability_min_detect" type="float" value="0.5" label="Minimum peptide detectability accepted" help="(-min_detect) Peptides with a lower score will be removed"/>
    <param name="param_algorithm_MSSim_Detectability_dt_model_file" type="text" size="30" value="examples/simulation/DTPredict.model" label="SVM model for peptide detectability prediction" help="(-dt_model_file) ">
      <sanitizer>
        <valid initial="string.printable">
          <remove value="'"/>
          <remove value="&quot;"/>
        </valid>
      </sanitizer>
    </param>
    <repeat name="rep_param_algorithm_MSSim_Ionization_esi_ionized_residues" min="0" max="1" title="param_algorithm_MSSim_Ionization_esi_ionized_residues">
      <param name="param_algorithm_MSSim_Ionization_esi_ionized_residues" type="select" optional="True" value="Arg Lys His" label="List of residues (as three letter code) that will be considered during ES ionization" help="(-ionized_residues) The N-term is always assumed to carry a charge. This parameter will be ignored during MALDI ionization">
        <option value="Ala">Ala</option>
        <option value="Cys">Cys</option>
        <option value="Asp">Asp</option>
        <option value="Glu">Glu</option>
        <option value="Phe">Phe</option>
        <option value="Gly">Gly</option>
        <option value="His">His</option>
        <option value="Ile">Ile</option>
        <option value="Lys">Lys</option>
        <option value="Leu">Leu</option>
        <option value="Met">Met</option>
        <option value="Asn">Asn</option>
        <option value="Pro">Pro</option>
        <option value="Gln">Gln</option>
        <option value="Arg">Arg</option>
        <option value="Sec">Sec</option>
        <option value="Ser">Ser</option>
        <option value="Thr">Thr</option>
        <option value="Val">Val</option>
        <option value="Trp">Trp</option>
        <option value="Tyr">Tyr</option>
      </param>
    </repeat>
    <repeat name="rep_param_algorithm_MSSim_Ionization_esi_charge_impurity" min="0" max="1" title="param_algorithm_MSSim_Ionization_esi_charge_impurity">
      <param name="param_algorithm_MSSim_Ionization_esi_charge_impurity" type="text" size="30" value="H+:1" label="List of charged ions that contribute to charge with weight of occurrence (their sum is scaled to 1 internally)," help="(-charge_impurity) e.g. ['H:1'] or ['H:0.7' 'Na:0.3'], ['H:4' 'Na:1'] (which internally translates to ['H:0.8' 'Na:0.2'])">
        <sanitizer>
          <valid initial="string.printable">
            <remove value="'"/>
            <remove value="&quot;"/>
          </valid>
        </sanitizer>
      </param>
    </repeat>
    <param name="param_algorithm_MSSim_Ionization_esi_ionization_probability" type="float" value="0.8" label="Probability for the binomial distribution of the ESI charge states" help="(-ionization_probability) "/>
    <repeat name="rep_param_algorithm_MSSim_Ionization_maldi_ionization_probabilities" min="0" max="1" title="param_algorithm_MSSim_Ionization_maldi_ionization_probabilities">
      <param name="param_algorithm_MSSim_Ionization_maldi_ionization_probabilities" type="text" size="30" value="0.9 0.1" label="List of probabilities for the different charge states during MALDI ionization (the list must sum up to 1.0)" help="(-ionization_probabilities) ">
        <sanitizer>
          <valid initial="string.printable">
            <remove value="'"/>
            <remove value="&quot;"/>
          </valid>
        </sanitizer>
      </param>
    </repeat>
    <param name="param_algorithm_MSSim_Ionization_mz_lower_measurement_limit" type="float" min="0.0" optional="True" value="200.0" label="Lower m/z detector limit" help="(-lower_measurement_limit) "/>
    <param name="param_algorithm_MSSim_Ionization_mz_upper_measurement_limit" type="float" min="0.0" optional="True" value="2500.0" label="Upper m/z detector limit" help="(-upper_measurement_limit) "/>
    <param name="param_algorithm_MSSim_RawSignal_enabled" display="radio" type="select" optional="False" value="true" label="Enable RAW signal simulation?" help="(-enabled) (select 'false' if you only need feature-maps)">
      <option value="true" selected="true">true</option>
      <option value="false">false</option>
    </param>
    <param name="param_algorithm_MSSim_RawSignal_peak_shape" display="radio" type="select" optional="False" value="Gaussian" label="Peak Shape used around each isotope peak (be aware that the area under the curve is constant for both types, but the maximal height will differ (~ 2:3 = Lorentz:Gaussian) due to the wider base of the Lorentzian" help="(-peak_shape) ">
      <option value="Gaussian" selected="true">Gaussian</option>
      <option value="Lorentzian">Lorentzian</option>
    </param>
    <param name="param_algorithm_MSSim_RawSignal_resolution_value" type="integer" value="50000" label="Instrument resolution at 400 Th" help="(-value) "/>
    <param name="param_algorithm_MSSim_RawSignal_resolution_type" display="radio" type="select" optional="False" value="linear" label="How does resolution change with increasing m/z?! QTOFs usually show 'constant' behavior, FTs have linear degradation, and on Orbitraps the resolution decreases with square root of mass" help="(-type) ">
      <option value="constant">constant</option>
      <option value="linear" selected="true">linear</option>
      <option value="sqrt">sqrt</option>
    </param>
    <param name="param_algorithm_MSSim_RawSignal_baseline_scaling" type="float" min="0.0" optional="True" value="0.0" label="Scale of baseline" help="(-scaling) Set to 0 to disable simulation of baseline"/>
    <param name="param_algorithm_MSSim_RawSignal_baseline_shape" type="float" min="0.0" optional="True" value="0.5" label="The baseline is modeled by an exponential probability density function (pdf) with f(x) = shape*e^(- shape*x)" help="(-shape) "/>
    <param name="param_algorithm_MSSim_RawSignal_mz_sampling_points" type="integer" min="2" optional="True" value="3" label="Number of raw data points per FWHM of the peak" help="(-sampling_points) "/>
    <param name="param_algorithm_MSSim_RawSignal_contaminants_file" type="text" size="30" value="examples/simulation/contaminants.csv" label="Contaminants file with sum formula and absolute RT interval" help="(-file) See 'OpenMS/examples/simulation/contaminants.txt' for details">
      <sanitizer>
        <valid initial="string.printable">
          <remove value="'"/>
          <remove value="&quot;"/>
        </valid>
      </sanitizer>
    </param>
    <param name="param_algorithm_MSSim_RawSignal_variation_mz_error_stddev" type="float" value="0.0" label="Standard deviation for m/z errors" help="(-error_stddev) Set to 0 to disable simulation of m/z errors"/>
    <param name="param_algorithm_MSSim_RawSignal_variation_mz_error_mean" type="float" value="0.0" label="Average systematic m/z error (Da)" help="(-error_mean) "/>
    <param name="param_algorithm_MSSim_RawSignal_variation_intensity_scale" type="float" min="0.0" optional="True" value="100.0" label="Constant scale factor of the feature intensity" help="(-scale) Set to 1.0 to get the real intensity values provided in the FASTA file"/>
    <param name="param_algorithm_MSSim_RawSignal_variation_intensity_scale_stddev" type="float" min="0.0" optional="True" value="0.0" label="Standard deviation of peak intensity (relative to the scaled peak height)" help="(-scale_stddev) Set to 0 to get simple rescaled intensities"/>
    <param name="param_algorithm_MSSim_RawSignal_noise_shot_rate" type="float" min="0.0" optional="True" value="0.0" label="Poisson rate of shot noise per unit m/z" help="(-rate) Set this to 0 to disable simulation of shot noise"/>
    <param name="param_algorithm_MSSim_RawSignal_noise_shot_intensity_mean" type="float" value="1.0" label="Shot noise intensity mean (exponentially distributed with given mean)" help="(-intensity-mean) "/>
    <param name="param_algorithm_MSSim_RawSignal_noise_white_mean" type="float" value="0.0" label="Mean value of white noise being added to each measured signal" help="(-mean) "/>
    <param name="param_algorithm_MSSim_RawSignal_noise_white_stddev" type="float" value="0.0" label="Standard deviation of white noise being added to each measured signal" help="(-stddev) "/>
    <param name="param_algorithm_MSSim_RawSignal_noise_detector_mean" type="float" value="0.0" label="Mean value of the detector noise being added to the complete measurement" help="(-mean) "/>
    <param name="param_algorithm_MSSim_RawSignal_noise_detector_stddev" type="float" value="0.0" label="Standard deviation of the detector noise being added to the complete measurement" help="(-stddev) "/>
    <param name="param_algorithm_MSSim_RawTandemSignal_status" display="radio" type="select" optional="False" value="disabled" label="Create Tandem-MS scans?" help="(-status) ">
      <option value="disabled" selected="true">disabled</option>
      <option value="precursor">precursor</option>
      <option value="MS^E">MS^E</option>
    </param>
    <param name="param_algorithm_MSSim_RawTandemSignal_tandem_mode" type="integer" min="0" max="2" optional="True" value="0" label="Algorithm to generate the tandem-MS spectra" help="(-tandem_mode) 0 - fixed intensities, 1 - SVC prediction (abundant/missing), 2 - SVR prediction of peak intensity  &lt;br&gt;"/>
    <param name="param_algorithm_MSSim_RawTandemSignal_svm_model_set_file" type="text" size="30" value="examples/simulation/SvmModelSet.model" label="File containing the filenames of SVM Models for different charge variants" help="(-svm_model_set_file) ">
      <sanitizer>
        <valid initial="string.printable">
          <remove value="'"/>
          <remove value="&quot;"/>
        </valid>
      </sanitizer>
    </param>
    <param name="param_algorithm_MSSim_RawTandemSignal_Precursor_ms2_spectra_per_rt_bin" type="integer" min="1" optional="True" value="5" label="Number of allowed MS/MS spectra in a retention time bin" help="(-ms2_spectra_per_rt_bin) "/>
    <param name="param_algorithm_MSSim_RawTandemSignal_Precursor_min_mz_peak_distance" type="float" min="0.0001" optional="True" value="2.0" label="The minimal distance (in Th) between two peaks for concurrent selection for fragmentation" help="(-min_mz_peak_distance) Also used to define the m/z width of an exclusion window (distance +/- from m/z of precursor). If you set this lower than the isotopic envelope of a peptide, you might get multiple fragment spectra pointing to the same precursor"/>
    <param name="param_algorithm_MSSim_RawTandemSignal_Precursor_mz_isolation_window" type="float" min="0.0" optional="True" value="2.0" label="All peaks within a mass window (in Th) of a selected peak are also selected for fragmentation" help="(-mz_isolation_window) "/>
    <param name="param_algorithm_MSSim_RawTandemSignal_Precursor_exclude_overlapping_peaks" display="radio" type="boolean" truevalue="-algorithm:MSSim:RawTandemSignal:Precursor:exclude_overlapping_peaks" falsevalue="" checked="false" optional="True" label="If true, overlapping or nearby peaks (within 'min_mz_peak_distance') are excluded for selection" help="(-exclude_overlapping_peaks) "/>
    <repeat name="rep_param_algorithm_MSSim_RawTandemSignal_Precursor_charge_filter" min="0" max="1" title="param_algorithm_MSSim_RawTandemSignal_Precursor_charge_filter">
      <param name="param_algorithm_MSSim_RawTandemSignal_Precursor_charge_filter" type="text" min="1" max="5" optional="True" size="30" value="2 3" label="Charges considered for MS2 fragmentation" help="(-charge_filter) ">
        <sanitizer>
          <valid initial="string.printable">
            <remove value="'"/>
            <remove value="&quot;"/>
          </valid>
        </sanitizer>
      </param>
    </repeat>
    <param name="param_algorithm_MSSim_RawTandemSignal_Precursor_Exclusion_use_dynamic_exclusion" display="radio" type="boolean" truevalue="-algorithm:MSSim:RawTandemSignal:Precursor:Exclusion:use_dynamic_exclusion" falsevalue="" checked="false" optional="True" label="If true dynamic exclusion is applied" help="(-use_dynamic_exclusion) "/>
    <param name="param_algorithm_MSSim_RawTandemSignal_Precursor_Exclusion_exclusion_time" type="float" min="0.0" optional="True" value="100.0" label="The time (in seconds) a feature is excluded" help="(-exclusion_time) "/>
    <param name="param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_max_list_size" type="integer" min="1" optional="True" value="1000" label="The maximal number of precursors in the inclusion list" help="(-max_list_size) "/>
    <param name="param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_rt_min_rt" type="float" min="0.0" optional="True" value="960.0" label="Minimal rt in seconds" help="(-min_rt) "/>
    <param name="param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_rt_max_rt" type="float" min="0.0" optional="True" value="3840.0" label="Maximal rt in seconds" help="(-max_rt) "/>
    <param name="param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_rt_rt_step_size" type="float" min="1.0" optional="True" value="30.0" label="rt step size in seconds" help="(-rt_step_size) "/>
    <param name="param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_rt_rt_window_size" type="integer" min="1" optional="True" value="100" label="rt window size in seconds" help="(-rt_window_size) "/>
    <param name="param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_thresholds_min_protein_id_probability" type="float" min="0.0" max="1.0" optional="True" value="0.95" label="Minimal protein probability for a protein to be considered identified" help="(-min_protein_id_probability) "/>
    <param name="param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_thresholds_min_pt_weight" type="float" min="0.0" max="1.0" optional="True" value="0.5" label="Minimal pt weight of a precurso" help="(-min_pt_weight) "/>
    <param name="param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_thresholds_min_mz" type="float" min="0.0" optional="True" value="500.0" label="Minimal mz to be considered in protein based LP formulation" help="(-min_mz) "/>
    <param name="param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_thresholds_max_mz" type="float" min="0.0" optional="True" value="5000.0" label="Minimal mz to be considered in protein based LP formulation" help="(-max_mz) "/>
    <param name="param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_thresholds_use_peptide_rule" display="radio" type="boolean" truevalue="-algorithm:MSSim:RawTandemSignal:Precursor:ProteinBasedInclusion:thresholds:use_peptide_rule" falsevalue="" checked="false" optional="True" label="Use peptide rule instead of minimal protein id probability" help="(-use_peptide_rule) "/>
    <param name="param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_thresholds_min_peptide_ids" type="integer" min="1" optional="True" value="2" label="If use_peptide_rule is true, this parameter sets the minimal number of peptide ids for a protein id" help="(-min_peptide_ids) "/>
    <param name="param_algorithm_MSSim_RawTandemSignal_Precursor_ProteinBasedInclusion_thresholds_min_peptide_probability" type="float" min="0.0" max="1.0" optional="True" value="0.95" label="If use_peptide_rule is true, this parameter sets the minimal probability for a peptide to be safely identified" help="(-min_peptide_probability) "/>
    <param name="param_algorithm_MSSim_RawTandemSignal_MS_E_add_single_spectra" display="radio" type="boolean" truevalue="-algorithm:MSSim:RawTandemSignal:MS_E:add_single_spectra" falsevalue="" checked="false" optional="True" label="If true, the MS2 spectra for each peptide signal are included in the output (might be a lot)" help="(-add_single_spectra) They will have a meta value 'MSE_DebugSpectrum' attached, so they can be filtered out. Native MS_E spectra will have 'MSE_Spectrum' instead"/>
    <param name="param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_add_isotopes" display="radio" type="boolean" truevalue="-algorithm:MSSim:RawTandemSignal:TandemSim:Simple:add_isotopes" falsevalue="" checked="false" optional="True" label="If set to 1 isotope peaks of the product ion peaks are added" help="(-add_isotopes) "/>
    <param name="param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_max_isotope" type="integer" value="2" label="Defines the maximal isotopic peak which is added, add_isotopes must be set to 1" help="(-max_isotope) "/>
    <param name="param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_add_metainfo" display="radio" type="boolean" truevalue="-algorithm:MSSim:RawTandemSignal:TandemSim:Simple:add_metainfo" falsevalue="" checked="false" optional="True" label="Adds the type of peaks as metainfo to the peaks, like y8+, [M-H2O+2H]++" help="(-add_metainfo) "/>
    <param name="param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_add_losses" display="radio" type="boolean" truevalue="-algorithm:MSSim:RawTandemSignal:TandemSim:Simple:add_losses" falsevalue="" checked="false" optional="True" label="Adds common losses to those ion expect to have them, only water and ammonia loss is considered" help="(-add_losses) "/>
    <param name="param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_add_precursor_peaks" display="radio" type="boolean" truevalue="-algorithm:MSSim:RawTandemSignal:TandemSim:Simple:add_precursor_peaks" falsevalue="" checked="false" optional="True" label="Adds peaks of the precursor to the spectrum, which happen to occur sometimes" help="(-add_precursor_peaks) "/>
    <param name="param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_add_abundant_immonium_ions" display="radio" type="boolean" truevalue="-algorithm:MSSim:RawTandemSignal:TandemSim:Simple:add_abundant_immonium_ions" falsevalue="" checked="false" optional="True" label="Add most abundant immonium ions" help="(-add_abundant_immonium_ions) "/>
    <param name="param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_add_first_prefix_ion" display="radio" type="boolean" truevalue="-algorithm:MSSim:RawTandemSignal:TandemSim:Simple:add_first_prefix_ion" falsevalue="" checked="false" optional="True" label="If set to true e.g. b1 ions are added" help="(-add_first_prefix_ion) "/>
    <param name="param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_add_y_ions" display="radio" type="select" optional="False" value="true" label="Add peaks of y-ions to the spectrum" help="(-add_y_ions) ">
      <option value="true" selected="true">true</option>
      <option value="false">false</option>
    </param>
    <param name="param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_add_b_ions" display="radio" type="select" optional="False" value="true" label="Add peaks of b-ions to the spectrum" help="(-add_b_ions) ">
      <option value="true" selected="true">true</option>
      <option value="false">false</option>
    </param>
    <param name="param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_add_a_ions" display="radio" type="boolean" truevalue="-algorithm:MSSim:RawTandemSignal:TandemSim:Simple:add_a_ions" falsevalue="" checked="false" optional="True" label="Add peaks of a-ions to the spectrum" help="(-add_a_ions) "/>
    <param name="param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_add_c_ions" display="radio" type="boolean" truevalue="-algorithm:MSSim:RawTandemSignal:TandemSim:Simple:add_c_ions" falsevalue="" checked="false" optional="True" label="Add peaks of c-ions to the spectrum" help="(-add_c_ions) "/>
    <param name="param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_add_x_ions" display="radio" type="boolean" truevalue="-algorithm:MSSim:RawTandemSignal:TandemSim:Simple:add_x_ions" falsevalue="" checked="false" optional="True" label="Add peaks of  x-ions to the spectrum" help="(-add_x_ions) "/>
    <param name="param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_add_z_ions" display="radio" type="boolean" truevalue="-algorithm:MSSim:RawTandemSignal:TandemSim:Simple:add_z_ions" falsevalue="" checked="false" optional="True" label="Add peaks of z-ions to the spectrum" help="(-add_z_ions) "/>
    <param name="param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_y_intensity" type="float" value="1.0" label="Intensity of the y-ions" help="(-y_intensity) "/>
    <param name="param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_b_intensity" type="float" value="1.0" label="Intensity of the b-ions" help="(-b_intensity) "/>
    <param name="param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_a_intensity" type="float" value="1.0" label="Intensity of the a-ions" help="(-a_intensity) "/>
    <param name="param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_c_intensity" type="float" value="1.0" label="Intensity of the c-ions" help="(-c_intensity) "/>
    <param name="param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_x_intensity" type="float" value="1.0" label="Intensity of the x-ions" help="(-x_intensity) "/>
    <param name="param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_z_intensity" type="float" value="1.0" label="Intensity of the z-ions" help="(-z_intensity) "/>
    <param name="param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_relative_loss_intensity" type="float" value="0.1" label="Intensity of loss ions, in relation to the intact ion intensity" help="(-relative_loss_intensity) "/>
    <param name="param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_precursor_intensity" type="float" value="1.0" label="Intensity of the precursor peak" help="(-precursor_intensity) "/>
    <param name="param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_precursor_H2O_intensity" type="float" value="1.0" label="Intensity of the H2O loss peak of the precurso" help="(-precursor_H2O_intensity) "/>
    <param name="param_algorithm_MSSim_RawTandemSignal_TandemSim_Simple_precursor_NH3_intensity" type="float" value="1.0" label="Intensity of the NH3 loss peak of the precurso" help="(-precursor_NH3_intensity) "/>
    <param name="param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_add_isotopes" display="radio" type="boolean" truevalue="-algorithm:MSSim:RawTandemSignal:TandemSim:SVM:add_isotopes" falsevalue="" checked="false" optional="True" label="If set to 1 isotope peaks of the product ion peaks are added" help="(-add_isotopes) "/>
    <param name="param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_max_isotope" type="integer" value="2" label="Defines the maximal isotopic peak which is added, add_isotopes must be set to 1" help="(-max_isotope) "/>
    <param name="param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_add_metainfo" display="radio" type="boolean" truevalue="-algorithm:MSSim:RawTandemSignal:TandemSim:SVM:add_metainfo" falsevalue="" checked="false" optional="True" label="Adds the type of peaks as metainfo to the peaks, like y8+, [M-H2O+2H]++" help="(-add_metainfo) "/>
    <param name="param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_add_first_prefix_ion" display="radio" type="boolean" truevalue="-algorithm:MSSim:RawTandemSignal:TandemSim:SVM:add_first_prefix_ion" falsevalue="" checked="false" optional="True" label="If set to true e.g. b1 ions are added" help="(-add_first_prefix_ion) "/>
    <param name="param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_hide_y_ions" display="radio" type="boolean" truevalue="-algorithm:MSSim:RawTandemSignal:TandemSim:SVM:hide_y_ions" falsevalue="" checked="false" optional="True" label="Add peaks of y-ions to the spectrum" help="(-hide_y_ions) "/>
    <param name="param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_hide_y2_ions" display="radio" type="boolean" truevalue="-algorithm:MSSim:RawTandemSignal:TandemSim:SVM:hide_y2_ions" falsevalue="" checked="false" optional="True" label="Add peaks of y-ions to the spectrum" help="(-hide_y2_ions) "/>
    <param name="param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_hide_b_ions" display="radio" type="boolean" truevalue="-algorithm:MSSim:RawTandemSignal:TandemSim:SVM:hide_b_ions" falsevalue="" checked="false" optional="True" label="Add peaks of b-ions to the spectrum" help="(-hide_b_ions) "/>
    <param name="param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_hide_b2_ions" display="radio" type="boolean" truevalue="-algorithm:MSSim:RawTandemSignal:TandemSim:SVM:hide_b2_ions" falsevalue="" checked="false" optional="True" label="Add peaks of b-ions to the spectrum" help="(-hide_b2_ions) "/>
    <param name="param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_hide_a_ions" display="radio" type="boolean" truevalue="-algorithm:MSSim:RawTandemSignal:TandemSim:SVM:hide_a_ions" falsevalue="" checked="false" optional="True" label="Add peaks of a-ions to the spectrum" help="(-hide_a_ions) "/>
    <param name="param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_hide_c_ions" display="radio" type="boolean" truevalue="-algorithm:MSSim:RawTandemSignal:TandemSim:SVM:hide_c_ions" falsevalue="" checked="false" optional="True" label="Add peaks of c-ions to the spectrum" help="(-hide_c_ions) "/>
    <param name="param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_hide_x_ions" display="radio" type="boolean" truevalue="-algorithm:MSSim:RawTandemSignal:TandemSim:SVM:hide_x_ions" falsevalue="" checked="false" optional="True" label="Add peaks of  x-ions to the spectrum" help="(-hide_x_ions) "/>
    <param name="param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_hide_z_ions" display="radio" type="boolean" truevalue="-algorithm:MSSim:RawTandemSignal:TandemSim:SVM:hide_z_ions" falsevalue="" checked="false" optional="True" label="Add peaks of z-ions to the spectrum" help="(-hide_z_ions) "/>
    <param name="param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_hide_losses" display="radio" type="boolean" truevalue="-algorithm:MSSim:RawTandemSignal:TandemSim:SVM:hide_losses" falsevalue="" checked="false" optional="True" label="Adds common losses to those ion expect to have them, only water and ammonia loss is considered" help="(-hide_losses) "/>
    <param name="param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_y_intensity" type="float" value="1.0" label="Intensity of the y-ions" help="(-y_intensity) "/>
    <param name="param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_b_intensity" type="float" value="1.0" label="Intensity of the b-ions" help="(-b_intensity) "/>
    <param name="param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_a_intensity" type="float" value="1.0" label="Intensity of the a-ions" help="(-a_intensity) "/>
    <param name="param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_c_intensity" type="float" value="1.0" label="Intensity of the c-ions" help="(-c_intensity) "/>
    <param name="param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_x_intensity" type="float" value="1.0" label="Intensity of the x-ions" help="(-x_intensity) "/>
    <param name="param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_z_intensity" type="float" value="1.0" label="Intensity of the z-ions" help="(-z_intensity) "/>
    <param name="param_algorithm_MSSim_RawTandemSignal_TandemSim_SVM_relative_loss_intensity" type="float" value="0.1" label="Intensity of loss ions, in relation to the intact ion intensity" help="(-relative_loss_intensity) "/>
    <param name="param_algorithm_MSSim_Global_ionization_type" display="radio" type="select" optional="False" value="ESI" label="Type of Ionization (MALDI or ESI)" help="(-ionization_type) ">
      <option value="MALDI">MALDI</option>
      <option value="ESI" selected="true">ESI</option>
    </param>
    <param name="param_algorithm_MSSim_Labeling_type" type="select" optional="False" value="labelfree" label="Select the labeling type you want for your experiment" help="(-type) ">
      <option value="ICPL">ICPL</option>
      <option value="SILAC">SILAC</option>
      <option value="itraq">itraq</option>
      <option value="labelfree" selected="true">labelfree</option>
      <option value="o18">o18</option>
    </param>
    <param name="param_algorithm_MSSim_Labeling_ICPL_ICPL_fixed_rtshift" type="float" value="0.0" label="Fixed retention time shift between labeled pairs" help="(-ICPL_fixed_rtshift) If set to 0.0 only the retention times, computed by the RT model step are used"/>
    <param name="param_algorithm_MSSim_Labeling_ICPL_label_proteins" display="radio" type="select" optional="False" value="true" label="Enables protein-labeling" help="(-label_proteins) (select 'false' if you only need peptide-labeling)">
      <option value="true" selected="true">true</option>
      <option value="false">false</option>
    </param>
    <param name="param_algorithm_MSSim_Labeling_SILAC_fixed_rtshift" type="float" min="0.0" optional="True" value="0.0001" label="Fixed retention time shift between labeled peptides" help="(-fixed_rtshift) If set to 0.0 only the retention times computed by the RT model step are used"/>
    <param name="param_algorithm_MSSim_Labeling_SILAC_medium_channel_modification_lysine" type="text" size="30" value="UniMod:481" label="Modification of Lysine in the medium SILAC channel" help="(-modification_lysine) ">
      <sanitizer>
        <valid initial="string.printable">
          <remove value="'"/>
          <remove value="&quot;"/>
        </valid>
      </sanitizer>
    </param>
    <param name="param_algorithm_MSSim_Labeling_SILAC_medium_channel_modification_arginine" type="text" size="30" value="UniMod:188" label="Modification of Arginine in the medium SILAC channel" help="(-modification_arginine) ">
      <sanitizer>
        <valid initial="string.printable">
          <remove value="'"/>
          <remove value="&quot;"/>
        </valid>
      </sanitizer>
    </param>
    <param name="param_algorithm_MSSim_Labeling_SILAC_heavy_channel_modification_lysine" type="text" size="30" value="UniMod:259" label="Modification of Lysine in the heavy SILAC channel" help="(-modification_lysine) If left empty, two channelSILAC is assumed">
      <sanitizer>
        <valid initial="string.printable">
          <remove value="'"/>
          <remove value="&quot;"/>
        </valid>
      </sanitizer>
    </param>
    <param name="param_algorithm_MSSim_Labeling_SILAC_heavy_channel_modification_arginine" type="text" size="30" value="UniMod:267" label="Modification of Arginine in the heavy SILAC channel" help="(-modification_arginine) If left empty, two-channel SILAC is assumed">
      <sanitizer>
        <valid initial="string.printable">
          <remove value="'"/>
          <remove value="&quot;"/>
        </valid>
      </sanitizer>
    </param>
    <param name="param_algorithm_MSSim_Labeling_itraq_iTRAQ" display="radio" type="select" optional="False" value="4plex" label="4plex or 8plex iTRAQ?" help="(-iTRAQ) ">
      <option value="4plex" selected="true">4plex</option>
      <option value="8plex">8plex</option>
    </param>
    <param name="param_algorithm_MSSim_Labeling_itraq_reporter_mass_shift" type="float" min="0.0" max="0.5" optional="True" value="0.1" label="Allowed shift (uniformly distributed - left to right) in Da from the expected position (of" help="(-reporter_mass_shift) e.g. 114.1, 115.1)"/>
    <repeat name="rep_param_algorithm_MSSim_Labeling_itraq_channel_active_4plex" min="0" max="1" title="param_algorithm_MSSim_Labeling_itraq_channel_active_4plex">
      <param name="param_algorithm_MSSim_Labeling_itraq_channel_active_4plex" type="text" size="30" value="114:myReference" label="Four-plex only: Each channel that was used in the experiment and its description (114-117) in format &lt;channel&gt;:&lt;name&gt;," help="(-channel_active_4plex) e.g. &quot;114:myref&quot;,&quot;115:liver&quot;">
        <sanitizer>
          <valid initial="string.printable">
            <remove value="'"/>
            <remove value="&quot;"/>
          </valid>
        </sanitizer>
      </param>
    </repeat>
    <repeat name="rep_param_algorithm_MSSim_Labeling_itraq_channel_active_8plex" min="0" max="1" title="param_algorithm_MSSim_Labeling_itraq_channel_active_8plex">
      <param name="param_algorithm_MSSim_Labeling_itraq_channel_active_8plex" type="text" size="30" value="113:myReference" label="Eight-plex only: Each channel that was used in the experiment and its description (113-121) in format &lt;channel&gt;:&lt;name&gt;," help="(-channel_active_8plex) e.g. &quot;113:myref&quot;,&quot;115:liver&quot;,&quot;118:lung&quot;">
        <sanitizer>
          <valid initial="string.printable">
            <remove value="'"/>
            <remove value="&quot;"/>
          </valid>
        </sanitizer>
      </param>
    </repeat>
    <param name="param_algorithm_MSSim_Labeling_itraq_Y_contamination" type="float" min="0.0" max="1.0" optional="True" value="0.3" label="Efficiency of labeling tyrosine ('Y') residues" help="(-Y_contamination) 0=off, 1=full labeling"/>
    <param name="param_algorithm_MSSim_Labeling_o18_labeling_efficiency" type="float" min="0.0" max="1.0" optional="True" value="1.0" label="Describes the distribution of the labeled peptide over the different states (unlabeled, mono- and di-labeled)" help="(-labeling_efficiency) "/>
    <param name="param_algorithm_RandomNumberGenerators_biological" display="radio" type="select" optional="False" value="random" label="Controls the 'biological' randomness of the generated data (" help="(-biological) e.g. systematic effects like deviations in RT). If set to 'random' each experiment will look different. If set to 'reproducible' each experiment will have the same outcome (given that the input data is the same)">
      <option value="reproducible">reproducible</option>
      <option value="random" selected="true">random</option>
    </param>
    <param name="param_algorithm_RandomNumberGenerators_technical" display="radio" type="select" optional="False" value="random" label="Controls the 'technical' randomness of the generated data (" help="(-technical) e.g. noise in the raw signal). If set to 'random' each experiment will look different. If set to 'reproducible' each experiment will have the same outcome (given that the input data is the same)">
      <option value="reproducible">reproducible</option>
      <option value="random" selected="true">random</option>
    </param>
    <expand macro="advanced_options">
      <param name="param_force" display="radio" type="boolean" truevalue="-force" falsevalue="" checked="false" optional="True" label="Overwrite tool specific checks" help="(-force) "/>
      <param name="param_algorithm_MSSim_Ionization_esi_max_impurity_set_size" type="integer" value="3" label="Maximal #combinations of charge impurities allowed (each generating one feature) per charge state" help="(-max_impurity_set_size) E.g. assuming charge=3 and this parameter is 2, then we could choose to allow '3H+, 2H+Na+' features (given a certain 'charge_impurity' constraints), but no '3H+, 2H+Na+, 3Na+'"/>
      <param name="param_algorithm_MSSim_Labeling_ICPL_ICPL_light_channel_label" type="text" size="30" value="UniMod:365" label="UniMod Id of the light channel ICPL label" help="(-ICPL_light_channel_label) ">
        <sanitizer>
          <valid initial="string.printable">
            <remove value="'"/>
            <remove value="&quot;"/>
          </valid>
        </sanitizer>
      </param>
      <param name="param_algorithm_MSSim_Labeling_ICPL_ICPL_medium_channel_label" type="text" size="30" value="UniMod:687" label="UniMod Id of the medium channel ICPL label" help="(-ICPL_medium_channel_label) ">
        <sanitizer>
          <valid initial="string.printable">
            <remove value="'"/>
            <remove value="&quot;"/>
          </valid>
        </sanitizer>
      </param>
      <param name="param_algorithm_MSSim_Labeling_ICPL_ICPL_heavy_channel_label" type="text" size="30" value="UniMod:364" label="UniMod Id of the heavy channel ICPL label" help="(-ICPL_heavy_channel_label) ">
        <sanitizer>
          <valid initial="string.printable">
            <remove value="'"/>
            <remove value="&quot;"/>
          </valid>
        </sanitizer>
      </param>
      <repeat name="rep_param_algorithm_MSSim_Labeling_itraq_isotope_correction_values_4plex" min="0" max="1" title="param_algorithm_MSSim_Labeling_itraq_isotope_correction_values_4plex">
        <param name="param_algorithm_MSSim_Labeling_itraq_isotope_correction_values_4plex" type="text" size="30" value="114:0/1/5.9/0.2 115:0/2/5.6/0.1 116:0/3/4.5/0.1 117:0.1/4/3.5/0.1" label="override default values (see Documentation); use the following format: &lt;channel&gt;:&lt;-2Da&gt;/&lt;-1Da&gt;/&lt;+1Da&gt;/&lt;+2Da&gt; ;" help="(-isotope_correction_values_4plex) e.g. '114:0/0.3/4/0' , '116:0.1/0.3/3/0.2' ">
          <sanitizer>
            <valid initial="string.printable">
              <remove value="'"/>
              <remove value="&quot;"/>
            </valid>
          </sanitizer>
        </param>
      </repeat>
      <repeat name="rep_param_algorithm_MSSim_Labeling_itraq_isotope_correction_values_8plex" min="0" max="1" title="param_algorithm_MSSim_Labeling_itraq_isotope_correction_values_8plex">
        <param name="param_algorithm_MSSim_Labeling_itraq_isotope_correction_values_8plex" type="text" size="30" value="113:0/0/6.89/0.22 114:0/0.94/5.9/0.16 115:0/1.88/4.9/0.1 116:0/2.82/3.9/0.07 117:0.06/3.77/2.99/0 118:0.09/4.71/1.88/0 119:0.14/5.66/0.87/0 121:0.27/7.44/0.18/0" label="override default values (see Documentation); use the following format: &lt;channel&gt;:&lt;-2Da&gt;/&lt;-1Da&gt;/&lt;+1Da&gt;/&lt;+2Da&gt; ;" help="(-isotope_correction_values_8plex) e.g. '113:0/0.3/4/0' , '116:0.1/0.3/3/0.2' ">
          <sanitizer>
            <valid initial="string.printable">
              <remove value="'"/>
              <remove value="&quot;"/>
            </valid>
          </sanitizer>
        </param>
      </repeat>
    </expand>
  </inputs>
  <outputs>
    <data name="param_out" format="mzml"/>
    <data name="param_out_pm" format="mzml"/>
    <data name="param_out_fm" format="featurexml"/>
    <data name="param_out_cm" format="consensusxml"/>
    <data name="param_out_lcm" format="consensusxml"/>
    <data name="param_out_cntm" format="featurexml"/>
    <data name="param_out_id" format="idxml"/>
  </outputs>
  <help>A highly configurable simulator for mass spectrometry experiments.


For more information, visit http://ftp.mi.fu-berlin.de/OpenMS/release-documentation/html/UTILS_MSSimulator.html</help>
</tool>
