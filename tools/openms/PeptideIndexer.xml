<?xml version="1.0" encoding="UTF-8"?>
  <!--This is a configuration file for the integration of a tools into Galaxy (https://galaxyproject.org/). This file was automatically generated using CTD2Galaxy.-->
  <!--Proposed Tool Section: [ID Processing]-->
  <tool id="PeptideIndexer" name="PeptideIndexer" version="2.0.0">
    <description>Refreshes the protein references for all peptide hits.</description>
    <macros>
      <token name="@EXECUTABLE@">PeptideIndexer</token>
      <import>macros.xml</import>
    </macros>
    <expand macro="references"/>
    <expand macro="stdio"/>
    <expand macro="requirements"/>
    <command>PeptideIndexer

#if $param_in:
  -in $param_in
#end if
#if $param_fasta:
  -fasta $param_fasta
#end if
#if $param_out:
  -out $param_out
#end if
#if $param_decoy_string:
  -decoy_string     &quot;$param_decoy_string&quot;
#end if
#if $param_prefix:
  -prefix
#end if
#if $param_missing_decoy_action:
  -missing_decoy_action
  #if &quot; &quot; in str($param_missing_decoy_action):
    &quot;$param_missing_decoy_action&quot;
  #else
    $param_missing_decoy_action
  #end if
#end if
#if $param_write_protein_sequence:
  -write_protein_sequence
#end if
#if $param_write_protein_description:
  -write_protein_description
#end if
#if $param_keep_unreferenced_proteins:
  -keep_unreferenced_proteins
#end if
#if $param_allow_unmatched:
  -allow_unmatched
#end if
#if $param_full_tolerant_search:
  -full_tolerant_search
#end if
#if $param_aaa_max:
  -aaa_max $param_aaa_max
#end if
#if $param_mismatches_max:
  -mismatches_max $param_mismatches_max
#end if
#if $param_IL_equivalent:
  -IL_equivalent
#end if
-threads \${GALAXY_SLOTS:-24}
#if $param_enzyme_name:
  -enzyme:name
  #if &quot; &quot; in str($param_enzyme_name):
    &quot;$param_enzyme_name&quot;
  #else
    $param_enzyme_name
  #end if
#end if
#if $param_enzyme_specificity:
  -enzyme:specificity
  #if &quot; &quot; in str($param_enzyme_specificity):
    &quot;$param_enzyme_specificity&quot;
  #else
    $param_enzyme_specificity
  #end if
#end if
#if $adv_opts.adv_opts_selector=='advanced':
    #if $adv_opts.param_force:
  -force
#end if
#end if
</command>
    <inputs>
      <param format="xml" help="(-in) " label="Input idXML file containing the identifications" name="param_in" optional="False" type="data"/>
      <param format="fasta" help="(-fasta) Non-existing relative filenames are looked up via 'OpenMS.ini:id_db_dir'" label="Input sequence database in FASTA format" name="param_fasta" optional="False" type="data"/>
      <param help="(-decoy_string) " label="String that was appended (or prefixed - see 'prefix' flag below) to the accessions in the protein database to indicate decoy proteins" name="param_decoy_string" size="30" type="text" value="_rev">
        <sanitizer>
          <valid initial="string.printable">
            <remove value="'"/>
            <remove value="&quot;"/>
          </valid>
        </sanitizer>
      </param>
      <param checked="false" falsevalue="" help="(-prefix) " label="If set, protein accessions in the database contain 'decoy_string' as prefix" name="param_prefix" optional="True" truevalue="-prefix" type="boolean"/>
      <param help="(-missing_decoy_action) " label="Action to take if NO peptide was assigned to a decoy protein (which indicates wrong database or decoy string): 'error' (exit with error, no output), 'warn' (exit with success, warning message)" name="param_missing_decoy_action" optional="True" type="select" value="error">
        <option value="error">error</option>
        <option value="warn">warn</option>
      </param>
      <param checked="false" falsevalue="" help="(-write_protein_sequence) " label="If set, the protein sequences are stored as well" name="param_write_protein_sequence" optional="True" truevalue="-write_protein_sequence" type="boolean"/>
      <param checked="false" falsevalue="" help="(-write_protein_description) " label="If set, the protein description is stored as well" name="param_write_protein_description" optional="True" truevalue="-write_protein_description" type="boolean"/>
      <param checked="false" falsevalue="" help="(-keep_unreferenced_proteins) " label="If set, protein hits which are not referenced by any peptide are kept" name="param_keep_unreferenced_proteins" optional="True" truevalue="-keep_unreferenced_proteins" type="boolean"/>
      <param checked="false" falsevalue="" help="(-allow_unmatched) By default (i.e. if this flag is not set) the program terminates with an error on unmatched peptides" label="If set, unmatched peptide sequences are allowed" name="param_allow_unmatched" optional="True" truevalue="-allow_unmatched" type="boolean"/>
      <param checked="false" falsevalue="" help="(-full_tolerant_search) Thus potentially more proteins (containing ambiguous amino acids) are associated. This is much slower!" label="If set, all peptide sequences are matched using tolerant search" name="param_full_tolerant_search" optional="True" truevalue="-full_tolerant_search" type="boolean"/>
      <param help="(-aaa_max) AAA's are 'B', 'Z' and 'X'" label="[tolerant search only] Maximal number of ambiguous amino acids (AAA) allowed when matching to a protein database with AAA's" min="0" name="param_aaa_max" optional="True" type="integer" value="4"/>
      <param help="(-mismatches_max) In general this param should only be changed if you want to look for other potential origins of a peptide which might have unknown SNPs or alike" label="[tolerant search only] Maximal number of real mismatches (will be used after checking for ambiguous AA's (see 'aaa_max' option)" min="0" name="param_mismatches_max" optional="True" type="integer" value="0"/>
      <param checked="false" falsevalue="" help="(-IL_equivalent) " label="Treat the isobaric amino acids isoleucine ('I') and leucine ('L') as equivalent (indistinguishable)" name="param_IL_equivalent" optional="True" truevalue="-IL_equivalent" type="boolean"/>
      <param help="(-name) e.g. trypsin cleaves after lysine (K) or arginine (R), but not before proline (P)" label="Enzyme which determines valid cleavage sites -" name="param_enzyme_name" optional="True" type="select" value="Trypsin">
        <option value="Chymotrypsin">Chymotrypsin</option>
        <option value="V8-DE">V8-DE</option>
        <option value="2-iodobenzoate">2-iodobenzoate</option>
        <option value="Lys-C/P">Lys-C/P</option>
        <option value="PepsinA">PepsinA</option>
        <option value="Lys-C">Lys-C</option>
        <option value="Trypsin">Trypsin</option>
        <option value="Asp-N_ambic">Asp-N_ambic</option>
        <option value="no cleavage">no cleavage</option>
        <option value="CNBr">CNBr</option>
        <option value="glutamyl endopeptidase">glutamyl endopeptidase</option>
        <option value="unspecific cleavage">unspecific cleavage</option>
        <option value="proline endopeptidase">proline endopeptidase</option>
        <option value="TrypChymo">TrypChymo</option>
        <option value="Trypsin/P">Trypsin/P</option>
        <option value="Arg-C">Arg-C</option>
        <option value="Formic_acid">Formic_acid</option>
        <option value="V8-E">V8-E</option>
        <option value="leukocyte elastase">leukocyte elastase</option>
        <option value="Asp-N">Asp-N</option>
      </param>
      <param help="(-specificity) &lt;br&gt;  'full': both internal cleavage sites must match. &lt;br&gt;  'semi': one of two internal cleavage sites must match. &lt;br&gt;  'none': allow all peptide hits no matter their context. Therefore, the enzyme chosen does not play a role here" label="Specificity of the enzyme" name="param_enzyme_specificity" optional="True" type="select" value="full">
        <option value="full">full</option>
        <option value="semi">semi</option>
        <option value="none">none</option>
      </param>
      <expand macro="advanced_options">
        <param checked="false" falsevalue="" help="(-force) " label="Overwrite tool specific checks" name="param_force" optional="True" truevalue="-force" type="boolean"/>
      </expand>
    </inputs>
    <outputs>
      <data format="xml" name="param_out"/>
    </outputs>
    <help>Refreshes the protein references for all peptide hits.


For more information, visit http://ftp.mi.fu-berlin.de/OpenMS/release-documentation/html/TOPP_PeptideIndexer.html</help>
  </tool>
