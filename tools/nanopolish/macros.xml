<macros>
    <token name="@VERSION@">0.14.0</token>
    <token name="@VERSION_SUFFIX@">0</token>
    <token name="@PROFILE@">22.01</token>

    <xml name="requirements">
        <requirements>
        <requirement type="package" version="@VERSION@">nanopolish</requirement>
            <yield/>
        </requirements>
    </xml>

<!--        index outputs 
        <data name="output_index" format="nanopolish_index" from_work_dir="reads.fasta.index"  />
        <data name="output_index_fai" format="nanopolish_index_fai" from_work_dir="reads.fasta.index.fai"  />
        <data name="output_index_gzi" format="nanopolish_index_gzi" from_work_dir="reads.fasta.index.gzi"  />
        <data name="output_index_readdb" format="nanopolish_index_readdb" from_work_dir="reads.fasta.index.readdb"  />
 -->      
<!--      <output name="output_index" file="reads.fasta.index" />
            <output name="output_index_fai" file="reads.fasta.index.fai" />
            <output name="output_index_gzi" file="reads.fasta.index.gzi" />
            <output name="output_index_readdb" file="reads.fasta.index.readdb" />
 -->


    <token name="@PREPROCESS_INPUTS@"><![CDATA[
        ln -s '$input_merged' reads.fasta && 
 
        mkdir fast5_files &&
        #if $input_reads_raw.extension == 'fast5':
             ln -s '$input_reads_raw' fast5_files/read1.fast5 &&

        #else if $input_reads_raw.extension == 'fast5.tar':
            ln -s '$input_reads_raw' fast5_files.tar &&
            tar -xf fast5_files.tar -C fast5_files &&

        #else if $input_reads_raw.extension == 'fast5.tar.bz2':
            ln -s '$input_reads_raw' fast5_files.tar.bz2 &&
            tar -xjf fast5_files.tar.bz2 -C fast5_files &&

        #else if $input_reads_raw.extension == 'fast5.tar.xz':
            ln -s '$input_reads_raw' fast5_files.tar.xz &&
            tar -xf fast5_files.tar.xz -C fast5_files &&

        #else if $input_reads_raw.extension == 'fast5.tar.gz':
            ln -s '$input_reads_raw' fast5_files.tar.gz &&
            tar -xzf fast5_files.tar.gz -C fast5_files &&

        #else:
            echo 'Unsupported fast5 input type' &&
            exit 1 &&

        #end if

        nanopolish index 
        -d fast5_files/
        #if $adv.input_seq_summary:
          -s '$adv.input_seq_summary'
        #end if 
        reads.fasta &&

        ln -s '$b' reads.bam &&
        ln -s '${b.metadata.bam_index}' reads.bam.bai &&
        #if $reference_source.reference_source_selector == 'history':
            ln -f -s '$reference_source.ref_file' genome.fa &&
        #else:
            ln -f -s '$reference_source.ref_file.fields.path' genome.fa &&
        #end if
    ]]></token>

    <xml name="citations">
        <citations>
            <citation type="doi">10.1038/nmeth.3444</citation>
            <citation type="doi">10.1038/nmeth.4184</citation>
            <yield />
        </citations>
    </xml>
</macros>
