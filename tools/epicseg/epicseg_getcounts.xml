<tool id="epicseg_getcounts" name="EpiCSeg - Get counts" version="0.1.0">
    <macros>
        <import>macros.xml</import>
    </macros>
    <requirements>
        <requirement type="package" version="1.0">epicseg</requirement>
        <requirement type="package" version="1.7">samtools</requirement>
    </requirements>
    <command detect_errors="exit_code"><![CDATA[
        #for $mark in $marks#
          samtools index ${mark.reads} &&
        #end for#

        Rscript '${__tool_directory__}/epicseg.R' getcounts
        --binsize $binsize --nthreads $nthreads --regions "$regions"

        #for $mark in $marks#
          --mark ${mark.label}:${mark.reads} --mapq ${mark.mapq}
            ${mark.pairedend} --shift ${mark.shift}
        #end for#

        --target "$countmatrix"
    ]]></command>
    <inputs>
        <param type="data" name="regions" format="bed" label="Regions"
               help="BED file with the genomic regions of interest.
                     These regions will be automatically partitioned into
                     smaller, consecutive bins. Only the first three fields
                     in the file matter.  If the region lengths are not
                     multiples of the given binsize a new bed file will be
                     produced where each coordinate is a multiple of binsize.
                     Use this new file together with the count matrix for
                     later analyses." />
        <repeat name="marks" title="Chromatin mark">
            <param type="text" name="label" label="Mark name"
                   value="H3K4me3" />
            <param type="data" name="reads" label="Bam-file"
                   format="bam"
                   help="The bam files must be indexed and the chromosome
                         names must match with those specified in the
                         BED file. Multiple bam-files with the same mark
                         name will be treated as replicates and collapsed
                         into one experiment."/>
            <param type="integer" name="mapq" min="0" value="0"
                   help="Minimum mapping quality for the reads (see the
                         bam format specification for the mapq field).
                         Only reads with the mapq field above or equal
                         to the specified value will be considered."/>
            <param type="boolean" name="pairedend"
                   truevalue="--pairedend TRUE" falsevalue="--pairedend FALSE"
                   help="Set this option to TRUE or FALSE to activate or
                         deactivate the paired-end mode. Only read pairs
                         where both ends are mapped will be considered and
                         assigned to the bin where the midpoint of the
                         read pair is located. If this flag is set, the
                         `shift` option will be ignored."/>
            <param type="integer" name="shift" value="75"
                   help="Shift the reads in the 5' direction by a fixed
                         number of base pairs. The read will be assigned
                         to the bin where the shifted 5' end of the read
                         is located. This option will be ignored in
                         paired-end mode."/>
        </repeat>
        <param type="integer" name="binsize" min="0" value="200"
               help="Size of a bin in base pairs. Each given region will
                     be partitioned into bins of this size."/>
        <param type="integer" name="nthreads" value="1"
               help="Number of threads to use."/>

    </inputs>
    <outputs>
        <data name="countmatrix" format="txt" />
    </outputs>
    <tests>
      <test>
        <param name="regions" value="chr1.bed"/>
        <repeat name="marks">
          <param name="label" value="H3K4me3" />
          <param name="reads" value="chr1_h1hesc_h3k4me3.bam" />
          <param name="mapq" value="0"/>
          <param name="pairedend" value="--pairedend FALSE"/>
          <param name="shift" value="75"/>
        </repeat>
        <repeat name="marks">
          <param name="label" value="H3K4me1" />
          <param name="reads" value="chr1_h1hesc_h3k4me1.bam" />
          <param name="mapq" value="0"/>
          <param name="pairedend" value="--pairedend FALSE"/>
          <param name="shift" value="75"/>
        </repeat>
        <repeat name="marks">
          <param name="label" value="H3K4me1" />
          <param name="reads" value="chr1_h1hesc_h3k4me1_rep2.bam" />
          <param name="mapq" value="0"/>
          <param name="pairedend" value="--pairedend FALSE"/>
          <param name="shift" value="75"/>
        </repeat>
        <repeat name="marks">
          <param name="label" value="H4K27me3" />
          <param name="reads" value="chr1_h1hesc_h3k27me3.bam" />
          <param name="mapq" value="0"/>
          <param name="pairedend" value="--pairedend FALSE"/>
          <param name="shift" value="75"/>
        </repeat>
        <param name="binsize" value="200" />
        <output name="countmatrix" file="countmatrix.txt"/>
      </test>
    </tests>
    <help><![CDATA[
.. class:: infomark

**What it does**

**EpiCSeg - Get counts** creates a counts matrix from several
bam files for the purpose of chromatin segmentation.

**EpiCSeg - Get counts** takes as input

  1. a set of bam files (e.g. corresponding to a set of chromating marks)
  2. a bed file containing the regions over which to collect the counts from.

It produces a count matrix that serves as input
for the subsequent chromatin segmenation step (see **EpiCSeg - Segment**).

    ]]></help>
    <expand macro="citations" />
</tool>
