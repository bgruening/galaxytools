<tool id="rbc_gotohscan" name="GotohScan" version="1.3.0">
    <description>Find subsequences in db</description>
    <requirements>
        <requirement type="package" version="1.3">gotohscan</requirement>
    </requirements>
    <stdio>
        <exit_code range="1:"  level="fatal" description="Error occurred. Please check Tool Standard Error"/>
        <exit_code range=":-1" level="fatal" description="Error occurred. Please check Tool Standard Error"/>
    </stdio>
    <version_command><![CDATA[GotohScan --version | sed -n -e 2p]]></version_command>
    <command><![CDATA[
        GotohScan
        
        -d $dbase
        -q $query
        
        #if $split and $split is not None
            --split $split
        #end if
        
        #if $e and $e is not None
            -e $e
        #end if
        
        #if $p and $p is not None
            -p $p
        #end if
        
        $s
        -o $o
        > 
        
        #if $o.value == '0'
            $output0
        #elif $o.value == '1'
            $output1
        #elif $o.value == '2'
            $output2
        #elif $o.value == '3'
            $output3
        #elif $o.value == '4'
            $output4
        #elif $o.value == '5'
            $output5
        #end if
    ]]></command>
    <inputs>
        <param argument="-d" name="dbase" type="data" format="fasta" label="Input Database"/>
        <param argument="-q" name="query" type="data" format="fasta" label="Input Query"/>
        <param argument="--split" name="split" type="integer" optional="true" label="Database is split into subsequences of size:" help="default: 10000"/>
        <param argument="-e" name="e" type="float" optional="true" label="E-value" help="Value should be &lt; 10. default: 1e-3"/>
        <param argument="-p" name="p" type="float" optional="true" label="Percent identity of aligned sequences" help="Value should be in [0.0,100.00]"/>
        <param argument="-s" name="s" type="boolean" checked="false" truevalue="-s" falsevalue="" label="Print score distribution data for each query to a file"/>
        <param argument="-o" name="o" type="select" label="Output Format">
            <option value="0" selected="true">Blast tabular output</option>
            <option value="1">Blast tabular output + aligned sequences</option>
            <option value="2">FASTA format. NOTE: Hit sequence only, without gaps !</option>
            <option value="3">MAF format. NOTE: Header truncated to 30 characters!</option>
            <option value="4">BED + aligned sequences</option>
            <option value="5">GFF + aligned sequences</option>
        </param>
    </inputs>
    <outputs>
        <data name="output0" format="tabular" label="${tool.name} on ${on_string}">
            <filter>o == '0'</filter>
        </data>
        <data name="output1" format="tabular" label="${tool.name} on ${on_string}">
            <filter>o == '1'</filter>
        </data>
        <data name="output2" format="fasta" label="${tool.name} on ${on_string}">
            <filter>o == '2'</filter>
        </data>
        <data name="output3" format="maf" label="${tool.name} on ${on_string}">
            <filter>o == '3'</filter>
        </data>
        <data name="output4" format="bed" label="${tool.name} on ${on_string}">
            <filter>o == '4'</filter>
        </data>
        <data name="output5" format="gff" label="${tool.name} on ${on_string}">
            <filter>o == '5'</filter>
        </data>
    </outputs>
    <tests>
        <test>
            <param name="dbase" value="NC_000913.fna"/>
            <param name="query" value="C0299.fa"/>
            <param name="o" value="2"/>
            <output name="" ftype="fasta" file="gotohscan.result1"/>
        </test>
    </tests>
    <help>
<![CDATA[
**GotohScan** is a search tool that finds shorter sequences
(usually genes) in large database sequences (chromosomes, genomes, ..)
by computing all semi-global alignments.  Thus, the query sequence is
never truncated or split into subsequences, but always mapped to the
database over its complete length. The alignment is computed via the
Gotoh-alignment algorithm using affine gap costs.
]]></help>
    <citations>
        <citation type="doi">10.1093/nar/gkn1084</citation>
    </citations>
</tool>
