<?xml version='1.0' encoding='utf-8'?>
<tool id="antismash" name="Antismash" version="5.1.2" profile="17.01">
    <description>allows the genome-wide identification, annotation and analysis of secondary metabolite biosynthesis gene clusters</description>
    <requirements>
        <requirement type="package" version="5.1.2">antismash</requirement>
    </requirements>
    <version_command>antismash --version</version_command>
    <command detect_errors="aggressive">
<![CDATA[
        export PYTHONWARNINGS="ignore::FutureWarning" &&

        #import os, glob
        #set $htmloutputfolder = $html.files_path
        #if str($infile.ext) == 'genbank':
            #set $file_extension = 'gb'
        #else:
            #set $file_extension = $infile.ext
        #end if

        ln -s '$infile' input_tempfile.$file_extension &&

        ## create html folder
        mkdir -p '$htmloutputfolder' &&

        antismash
            --cpus "\${GALAXY_SLOTS:-12}"
            --taxon '${cond_taxon.taxon}'

            --genefinding-tool $cond_taxon.genefinding_tool

            ${cb_general}
            ${cb_subclusters}
            ${cb_knownclusters}
            ${smcog_trees}
            --tta-threshold ${tta_threshold}
            ${asf}

            ${extra_cluster}
            ${clusterhmmer}
            ${fullhmmer}
            #if $cond_taxon.taxon == 'fungi':
                $cond_taxon.cassis
            #end if

            input_tempfile.$file_extension &&

        ## copy all content to html folder
        cp input_tempfile/index.html '${html}' 2> /dev/null &&
        cp -r input_tempfile/* '${htmloutputfolder}'

]]>
    </command>
    <inputs>
        <param name="infile" type="data" format="genbank,fasta,embl" label="Sequence file in GenBank,EMBL or FASTA format"/>

        <conditional name="cond_taxon">
            <param argument="--taxon" type="select" label="Origin of DNA">
                <option value="bacteria" selected="True">Bacteria</option>
                <option value="fungi">Fungi</option>
            </param>
            <when value="bacteria">
                <param argument="--genefinding-tool" type="select" label="Specify algorithm used for gene finding"
                    help="The 'error' option will raise an error if genefinding is attempted. The 'none' option will not run genefinding">
                    <option value="prodigal" selected="True">Prodigal</option>
                    <option value="prodigal-m">Prodigal Metagenomic/Anonymous</option>
                    <option value="glimmerhmm">GlimmerHMM</option>
                    <option value="none">None</option>
                    <option value="error">Error</option>
                </param>
            </when>
            <when value="fungi">
                <param argument="--genefinding-tool" type="select" label="Specify algorithm used for gene finding"
                    help="The 'error' option will raise an error if genefinding is attempted. The 'none' option will not run genefinding">
                    <option value="glimmerhmm">GlimmerHMM</option>
                    <option value="none">None</option>
                    <option value="error">Error</option>
                </param>
                <param argument="--cassis" type="boolean" truevalue="--cassis" falsevalue="" checked="False"
                       label="Motif based prediction of SM gene cluster regions" />
            </when>
        </conditional>


        <param argument="--cb-general" type="boolean" truevalue="--cb-general" falsevalue="" checked="False"
               label="BLAST identified clusters against known clusters"
               help="Compare identified clusters against a database of antiSMASH-predicted clusters." />
        <param argument="--cb-subclusters" type="boolean" truevalue="--cb-subclusters" falsevalue="" checked="True"
               label="Subcluster BLAST analysis"
               help="Compare identified clusters against known subclusters responsible for synthesising precursors." />
        <param argument="--cb-knownclusters" type="boolean" truevalue="--cb-knownclusters" falsevalue="" checked="True"
               label="KnowCluster BLAST analysis"
               help="Compare identified clusters against known gene clusters from the MIBiG database."/>
        <param argument="--smcog-trees" type="boolean" checked="True" truevalue="--smcog-trees" falsevalue=""
               label="Analysis of secondary metabolism gene families (smCOGs)"
               help="Look for sec. met. clusters of orthologous groups."/>
        <param argument="--asf" type="boolean" truevalue="--asf" falsevalue="" checked="True"
               label="Run active site finder analysus" />
        <param argument="-pfam2go" type="boolean" truevalue="-pfam2go" falsevalue="" checked="True"
               label="Run Pfam to Gene Ontology mapping module" />
        <param argument="--tta-threshold" type="float" value="0.65" label="Lowest GC content to annotate TTA codons at" />

        <param argument="--clusterhmmer" type="boolean" truevalue="--clusterhmmer" falsevalue="" checked="False"
               label="Run a cluster-limited HMMer analysis" />
        <param argument="--fullhmmer" type="boolean" truevalue="--fullhmmer" falsevalue="" checked="False"
               label="Run a whole-genome HMMer analysis" />

        <param name="extra_cluster" type="select" label="Clusters">
            <option value="--cf-create-clusters" selected="True">Find extra clusters</option>
            <option value="--cf-borders-only">Only annotate borders of existing clusters</option>
        </param>

        <param name="outputs" type="select" multiple="true" label="Outputs">
            <option value="html" selected="True">HTML file</option>
            <option value="all">All results</option>
            <option value="embl">EMBL files</option>
            <option value="gb">GenBank files</option>
            <option value="genecluster_tabular">Gene clusters</option>
        </param>

    </inputs>
    <outputs>
        <collection type="list" name="genecluster_tabular" label="${tool.name} on ${on_string} (Gene Cluster)">
            <discover_datasets pattern="(?P&lt;designation&gt;.*)\.txt" directory="input_tempfile" ext="txt" visible="false" />
            <filter>'genecluster_tabular' in outputs</filter>
        </collection>
        <collection name="genbank" type="list" label="${tool.name} on ${on_string} (GenBank)">
            <discover_datasets pattern="(?P&lt;designation&gt;.*)\.gbk" directory="input_tempfile" ext="genbank" visible="false" />
            <filter>'gb' in outputs</filter>
        </collection>
        <collection name="embl" type="list" label="${tool.name} on ${on_string} (EMBL)">
            <discover_datasets pattern="(?P&lt;designation&gt;.*)\.gbk" directory="input_tempfile" ext="embl" visible="false" />
            <filter>'embl' in outputs</filter>
        </collection>
        <collection name="archive" type="list" label="${tool.name} on ${on_string} (all files compressed)">
            <discover_datasets pattern="(?P&lt;designation&gt;.*)\.zip" directory="input_tempfile" ext="zip" visible="false" />
            <filter>'all' in outputs</filter>
        </collection>
        <data format="html" name="html" label="${tool.name} on ${on_string} (html report)" />
    </outputs>
    <tests>
        <test>
            <param name="infile" value="sequence.fasta"/>
            <output name="html" file="index.html"/>
        </test>
        <test>
            <param name="infile" value="sequence.gb"/>
            <param name="outputs" value="html,gb"/>
            <param name="taxon" value="fungi"/>
            <param name="clusterhmmer" value="True"/>
            <param name="fullhmmer" value="True"/>
            <param name="extra_cluster" value="--cf-create-clusters"/>
            <param name="cassis" value="True"/>
            <param name="cb_general" value="True"/>
            <output_collection name="genbank" type="list">
                <element name="ARBH01000003.1.cluster001" file="ARBH01000003.1.cluster001" ftype="genbank" />
                <element name="ARBH01000003.1.final" file="ARBH01000003.1.final" ftype="genbank"/>
            </output_collection>
            <output name="html" file="index.2.html"/>
        </test>
    </tests>
    <help>
<![CDATA[

**What it does**

AntiSMASH allows the rapid genome-wide identification, annotation and analysis of secondary metabolite biosynthesis gene clusters in bacterial and fungal genomes.
It integrates and cross-links with a large number of in silico secondary metabolite analysis tools that have been published earlier.

antiSMASH is powered by several open source tools: NCBI BLAST+, HMMer 3, Muscle 3, Glimmer 3, FastTree, TreeGraph 2, Indigo-depict, PySVG and JQuery SVG.

**Input**

The ideal input for antiSMASH is an annotated nucleotide file in Genbank format or EMBL format.
You can either upload a GenBank/EMBL file manually, or simply enter the GenBank/RefSeq accession number of your sequence for antiSMASH to upload it.
If no annotation is available, we recommend running your sequence through an annotation pipeline like RAST to obtain GBK/EMBL files with high-quality annotations.

Alternatively, you can provide a FASTA file containing a single sequence. antiSMASH will generate a preliminary annotation using Prodigal, and use that to run the rest of the analysis.
You can also provide gene annotations in GFF3 foramt. Input files should be properly formatted.
If you are creating your GBK/EMBL/FASTA file manually, be sure to do so in a plain text editor like Notepad or Emacs, and saving your files as "All files (.)", ending with the correct extension (for example ".fasta", ".gbk", or ".embl".

There are several optional analyses that may or may not be run on your sequence. Highly recommended is the Gene Cluster Blast Comparative Analysis, which runs BlastP using each amino acid sequence from a detected gene cluster as a query on a large database of predicted protein sequences from secondary metabolite biosynthetic gene clusters, and pools the results to identify the gene clusters that are most homologous to the gene cluster that was detected in your query nucleotide sequence.
This analysis is selected by default

Also available is the analysis of secondary metabolism gene families (smCOGs). This analysis attempts to allocate each gene in the detected gene clusters to a secondary metabolism-specific gene family using profile hidden Markov models specific for the conserved sequence region characteristic of this family.
Additionally, a phylogenetic tree is constructed of each gene together with the (max. 100) sequences of the smCOG seed alignment. This analysis is selected by default

**Ouput**

The output of the antiSMASH analysis pipeline is organized in an interactive HTML page with SVG graphics, and different parts of the analysis are displayed in different panels for every gene cluster

In the upper right, a small list of buttons offers further functionality. The house-shaped button will get you back on the antiSMASH start page.
The question-mark button will get you to this help page. The exclamation-mark button leads to a page explaining about antiSMASH.
The downward-pointing arrow will open a menu offering to download the complete set of results from the antiSMASH run, a summary Excel file and to the summary EMBL/GenBank output file.
The EMBL/GenBank file can be viewed in a genome browser such as Artemis.

]]>
    </help>
    <citations>
        <citation type="doi">10.1093/nar/gkv437</citation>
    </citations>
</tool>
