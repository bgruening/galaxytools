<tool id="juicer_hiccups" name="Annotating loops" version="0.1.0">
    <requirements>
    </requirements>
    <stdio>
        <exit_code range="1:" />
    </stdio>
    <command><![CDATA[
        java -jar juicebox_tools.7.0.jar hiccups '$hic_files'
        #if $advanced_options.m
            -m design_dir $advanced_options.m
        #end if
        #if $advanced_options.c
            -c $advanced_options.c
        #end if
        #if $advanced_options.r
            -r $advanced_options.r 
        #end if
        #if $advanced_options.k
            -k $advanced_options.k
        #end if
        #if $advanced_options.f
            -f $advanced_options.f
        #end if
        #if $advanced_options.p
            -p $advanced_options.p
        #end if
        #if $advanced_options.i
            -i $advanced_options.i
        #end if
        #if $advanced_options.t
            -t $advanced_options.t
        #end if
        #if $advanced_options.d
            -d $advanced_options.d
        #end if
    ]]></command>
    <inputs>
        <param name="hic_files" type="data" format="hic" label="HiC file(s)" help="" />
        <section name="advanced_options" title="Advanced options">
            <param argument="-m" type="integer" label="Maximum size of the submatrix within the chromosome passed on to GPU." 
            help="Maximum size of the submatrix within the chromosome passed on to GPU (Must be an even number greater than 40 to prevent issues from running the CUDA kernel). The upper limit will depend on your GPU. Dedicated GPUs should be able to use values such as 500, 1000, or 2048 without trouble. Integrated GPUs are unlikely to run sizes larger than 90 or 100. Matrix size will not effect the result, merely the time it takes for hiccups. Larger values (with a dedicated GPU) will run fastest." value="512" />
            <param argument="-c" type="text" label="Chromosome(s) on which HiCCUPS will be run." help="Chromosome(s) on which HiCCUPS will be run. The number/letter for the chromosome can be used with or without appending the 'chr' string. Multiple chromosomes can be specified using commas (e.g. 1,chr2,X,chrY)"/>
            <param argument="-r" type="integer" label="Resolution(s) for which HiCCUPS will be run." value="10000" help="Resolution(s) for which HiCCUPS will be run. Multiple resolutions can be specified using commas (e.g. 25000,10000,5000). Due to the nature of DNA looping, it is unlikely that loops will be found at lower resolutions (i.e. 50kB or 100kB) IMPORTANT: if multiple resolutions are used, the flags below can be configured so that different parameters are used for the different resolutions."/>
            <param argument="-k" type="select" label="Normalization" help="Normalizations that can be selected. Generally, KR (Knight-Ruiz) balancing should be used when available.">
                <option value="" >None</option>
                <option value="VC">VC</option>
                <option value="VC_SQRT">VC_square</option>
                <option value="KR" selected="True">KR</option>
            </param>
            <param argument="-f" type="float" label="FDR values actually corresponding to max_q_val" value="0.1" help="FDR values actually corresponding to max_q_val (i.e. for 1% FDR use 0.01, for 10%FDR use 0.1). Different FDR values can be used for each resolution using commas. (e.g'-r 5000,10000 -f 0.1,0.15' would run HiCCUPS at 10% FDR for resolution 5000 and 15% FDR for resolution 10000)"/>
            <param argument="-p" type="integer" label="Peak width used for finding enriched pixels." value="2" help="Peak width used for finding enriched pixels in HiCCUPS. Different peak widths can be used for each resolution using commas. (e.g '-r 5000,10000 -p 4,2'' would run at peak width 4 for resolution 5000 and peak width 2 for resolution 10000)"/>
            <param argument="-i" type="integer" label="Window width used for finding enriched pixels." value="5" help=" Window width used for finding enriched pixels in HiCCUPS. Different window widths can be used for each resolution using commas. (e.g '-r 5000,10000 -p 10,6' would run at window width 10 for resolution 5000 and window width 6 for resolution 10000)"/>
            <param argument="-t" type="text" label="Thresholds for merging loop lists of different resolutions. " value="0.02,1.5,1.75,2" help="Thresholds for merging loop lists of different resolutions. Four values must be given, separated by commas (e.g. 0.02,1.5,1.75,2). These thresholds (in order) represent: - threshold allowed for sum of FDR values of the horizontal, vertical, donut, and bottom left filters (an accepted loop must stay below this threshold) - threshold ratio that both the horizontal and vertical filters must exceed - threshold ratio that both the donut and bottom left filters must exceed - threshold ratio that at least one of the donut and bottom left filters must exceed"/>
            <param argument="-d" type="text" label="Distances used for merging nearby pixels to a centroid." value="20000,20000,50000"  help="Distances used for merging nearby pixels to a centroid. Different distances can be used for each resolution using commas. (e.g '-r 5000,10000 -d 20000,21000' would merge pixels within 20kB of each other at 5kB resolution and within 21kB at 10kB resolution."/>
        </section>
    </inputs>
    <outputs>
    </outputs>
    <help><![CDATA[
    As default parameters the configuration for the medium resolution is choosen:

    Medium resolution maps:
        -m 512
        -c (all chromosomes)
        -r 10000
        -k KR
        -f .1
        -p 2
        -i 5
        -t 0.02,1.5,1.75,2
        -d 20000,20000,50000

    For a high resolution change the parameters to:
        High resolution maps:
        -m 512
        -c (all chromosomes)
        -r 5000,10000
        -k KR
        -f .1,.1
        -p 4,2
        -i 7,5
        -t 0.02,1.5,1.75,2
        -d 20000,20000,50000
    ]]></help>
</tool>
