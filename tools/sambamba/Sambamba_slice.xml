<tool id="sambamba_slice" name="Slice" version="@WRAPPER_VERSION@">
    <description>Copying a slice of BAM file</description>
    <macros>
        <import>Sambamba_macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <expand macro="stdio"/>
    <command>
<![CDATA[
        #set $input = 'infile1.bam'

        ln -s "$input_file1" $input &&
        ln -s "$input_file1.metadata.bam_index" infile1.bai &&

        @EXECUTABLE
            slice
            -o '$output'
            $input
            $region
]]>
    </command>
    
    <inputs>
        <expand macro="inputSetup1"/>
        <param name="region"
               value="*"
               type="text"
               label="Fast copy of a genomic region from indexed BAM file to a new file"
               help="Region is given in standard form ref:beg-end."/>
    </inputs>
    
    <outputs>
        <data name="output" format_source="input" metadata_source="input_file1" />
    </outputs>

    <tests>
        <test>
            <expand macro="inputSetup1"/>
            <param name="input_file1" value="Example.bam" ftype="bam"/>
            <param name="region" value="chr17" />
            <output name="o" file="Slice.text">
                <assert_contents>
                    <has_text text="chr" />
                </assert_contents>
            </output>    
        </test>
    </tests>
    <help>
<![CDATA[

@REFERENCES@

Sambamba_slice outputs reads overlapping a specified region into new BAM file. The input file must be coordinate-sorted and indexed.

Sambamba-slice leverages knowledge about structure of BAM file and recompresses only a few BGZF blocks at the beginning and the end of the region, while the BGZF blocks in the middle are copied as is. As such, this tool doesn't offer any options related to number of threads or compression level - most of the time is spent on I/O operations.

]]>
    </help>
    <expand macro="citations" />
</tool>
