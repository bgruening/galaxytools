<tool id="sambamba_view" name="View" version="@WRAPPER_VERSION@">
    <description>View and filter BAM files</description>
    <macros>
        <import>Sambamba_macros.xml</import>
    </macros>
    <expand macro="requirements" />
    <expand macro="stdio" />

    <command><![CDATA[
        @EXECUTABLE
            view
            -f 'bam'
            -o '${output}'
            #if $Filter
                -F '${Filter}'
            #end if 
            -l $Compression_level
               '${input_file1}'
    ]]></command>

    <inputs>
        <expand macro="inputSetup1"/>
        <expand macro="compression_level"/>
        <expand macro="filter"/>
    </inputs>

    <outputs>
        <data name="output" format="text"/>
    </outputs>

    <tests>
        <test>
            <param name="input_file1" value="1.bam" ftype="bam"/>
            <param name="Compression_level" value="3"/>

            <output name="output" file="1.bam" compare="sim_size" delta="434"/>
        </test>
    </tests>

    <help><![CDATA[
@REFERENCES@

sambamba-view allows to efficiently view and filter BAM file for alignments satisfying various conditions, as well as access its SAM header and information about reference sequences. In order to make these data readily available for consumption by scripts in Perl/Python/Ruby, JSON output is provided.

By default, the tool expects BAM file as an input. In order to work with SAM file, specify -S|--sam-input command-line option, the tool does NOT try to guess file format from extension. Beware that when reading SAM, the tool will skip tags which don't conform to the SAM/BAM specification, and set invalid fields to their default values. However, only syntax is checked, use --valid for full validation.

CRAM functionality has been added recently. For more information on VIEW, see also the original samtools documentation.

    ]]></help>
    <expand macro="citations"/>
</tool>
