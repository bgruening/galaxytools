<tool id="sambamba_sort" name="Sort" version="@WRAPPER_VERSION@">
    <description>Tool to sort BAM files!</description>
    <macros>
        <import>Sambamba_macros.xml</import>
    </macros>
    <expand macro="requirements"/>
    <expand macro="stdio"/>
    <command><![CDATA[
        ln -s '${input_file1}' infile1.bam &&
        
        @EXECUTABLE sort 
            -o '$output'
            $sort_order
            
            #if $Filter
                -F $Filter
            #end if 
            -l $Compression_level
            $Uncompressed_chunks
            infile1.bam
    ]]></command>
    
    <inputs>
        <expand macro="inputSetup1"/>

        <param name="sort_order" type="select" label="Select Sambamba depth mode">
            <option value="">Coordinate based</option>
            <option value="-n">Sort by read name lexicographically</option>
            <option value="-N">Sort by read name using natural order (like samtools)</option>
        </param>

        <expand macro="compression_level"/>
        <param name="Uncompressed_chunks" type="boolean" truevalue="-u" falsevalue="" checked="false" label="Write sorted chunks as uncompressed BAM (default is writing with compression level 1), that might be faster in some cases but uses more disk space"/>
        <expand macro="filter"/>
    </inputs>
    
    <outputs>
        <data name="output" format="bam"/>
    </outputs>

    <tests>
        <test>
            <expand macro="inputSetup1"/>
            <param name="input_file1" value="Example.bam" ftype="bam"/>
            <param name="Compression_level" value="3"/>   
            <param name="Uncompressed_chunks" value="true"/> 
            <param name="sort_order" value="-N"/> 
            <output name="o" file="Sort.bam">
                <assert_contents>
                    <has_text text="chr"/>
                </assert_contents>
            </output>
        </test>
    </tests>
    <help>
<![CDATA[
@REFERENCES@

BAM files can have either 'coordinate' sort order, or 'qname' one.
  - 'coordinate' sorting order : sort the file by (integer) reference ID, and for each reference sort corresponding reads by start coordinate.
  - 'qname' sorting order : reads are sorted lexicographically by their names.

sambamba-sort does an external sort on an input file. That means it reads the source BAM file in chunks that fit into memory, sorts them and writes to a temporary directory, and then merges them. After merging, temporary files are removed automatically. The sort is stable, and efforts have been done to make it multithreaded.
]]>
    </help>
    <expand macro="citations"/>
</tool>
