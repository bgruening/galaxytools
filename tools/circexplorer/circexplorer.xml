<tool id="circexplorer" name="CIRCexplorer" version="1.1.9.0">
    <requirements>
        <requirement type="package" version="1.1.9">circexplorer</requirement>
    </requirements>
    <command><![CDATA[
        #if str($input_selection.input_type) == "star"
            star_parse.py "$input_selection.junc" ./fusion_junctions.txt &&
        #end if

        CIRCexplorer.py

        #if str($input_selection.input_type) == "tophat"
            -f "$input_selection.fusion"
        #elif str($input_selection.input_type) == "star"
            -j ./fusion_junctions.txt
        #end if

        -g "$genome"
        -r "$ref"
        $no_fix
]]>
    </command>
    <inputs>
        <conditional name="input_selection">
            <param name="input_type" type="select" label="Select input type" help="">
                <option value="tophat">TopHat &amp; TopHat-Fusion</option>
                <option value="star">STAR</option>
            </param>
            <when value="tophat">
                <param argument="--fusion" type="data" format="bam" label="TopHat-Fusion fusion BAM file (used in TopHat-Fusion mapping)" />
            </when>
            <when value="star">
                <param argument="--junc" type="data" format="bam" label="STAR Chimeric junction file (used in STAR mapping)" />
            </when>
        </conditional>

        <param argument="--genome" type="data" format="fasta" label="Genome FASTA file" />

        <param argument="--ref" type="data" format="txt" label="Gene annotation" />

        <param name="no_fix" type="boolean" checked="false" truevalue="--no-fix" falsevalue=""
               label="No-fix mode (useful for species with poor gene annotations)" help="(--no-fix)" />
    </inputs>
    <outputs>
        <data name="output" format="txt"/>
    </outputs>
    <tests>
        <test>
            <param name="input_type" value="tophat" />
            <param name="fusion" value="circ_tophat.bam" />
            <param name="genome" value="circ_genome.fasta" />
            <param name="ref" value="circ_ref.txt" />
            <output name="output" file="circ_output.txt" ftype="txt"/>
        </test>
        <test>
            <param name="input_type" value="star" />
            <param name="junc" value="circ_Chimeric.out.junction" />
            <param name="genome" value="circ_genome.fasta" />
            <param name="ref" value="circ_ref.txt" />
            <output name="output" file="circ_output.txt" ftype="txt"/>
        </test>
    </tests>
    <help>
**What it does**

`CIRCexplorer`_ is a combined strategy to identify junction reads from back spliced exons and intron lariats.

**A schematic flow shows the pipeline**

.. image:: $PATH_TO_IMAGES/flow.jpg

.. _CIRCexplorer: https://github.com/YangLab/CIRCexplorer

**Notice**

CIRCexplorer is now only a circular RNA annotating tool and it parses fusion junction information from mapping results of other aligners. The result of circular RNA annotating directly depends on the mapping strategy of aligners. Different aligners may have different circular RNA annotations. CIRCexplorer is now only in charge of giving fusion junctions a correct gene annotation. Other functions and supports for more aligners are under development.
    </help>
    <citations>
        <citation type="bibtex">
            @article{Cell,
                author = {Zhang XO, Wang HB, Zhang Y, Lu X, Chen LL and Yang L},
                year = {2014},
                title = {Complementary Sequence-Mediated Exon Circularization},
                publisher = {Cell},
                journal = {Cell},
                url = {http://www.cell.com/cell/abstract/S0092-8674(14)01111-8},
            }
        </citation>
    </citations>
</tool>
