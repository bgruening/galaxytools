<tool id="bg_eden_fit" name="EDeN Fit" version="0.1">
    <description></description>
    <macros>
        <import>eden_macros.xml</import>
    </macros>
    <expand macro="requirements" />
    <command>
<![CDATA[
        fit.py
            --num-jobs \${GALAXY_SLOTS:-4}
            --output-dir ./
            @common_parameters@
            --neg-file-name $neg_file_name
            --optimization $optimization
            $predicitve_performance_estimation

]]>
    </command>
    <inputs>
        <expand macro="common_parameters" />
        <param name="neg_file_name" format="gspan,json" type="data" label="Path to your graph file of negative instances" help="GSPAN or JSON encoded networkx graph (--input-file)" />

        <param name="optimization" type="select" label="Output format" help="--output-format">
            <option value="none">none</option>
            <option value="predictor">predictor</option>
            <option value="full">full</option>
        </param>

        <param name="predicitve_performance_estimation" type="boolean" truevalue="--output-CV-performance" falsevalue="" checked="false"
            label="Performe cross validated predictive performace estimation" help="(--output-CV-performance)" />

    </inputs>
    <outputs>
        <data format="text" name="ofile_vectorizer" from_work_dir="vectorizer" label="${tool.name} on ${on_string}: Vectorizer"/>
        <data format="text" name="ofile_model" from_work_dir="model" label="${tool.name} on ${on_string}: Model"/>
    </outputs>
    <tests>
        <test>
            <param name="infile" value="3_molceuls.sdf" />
            <output name="outfile" file="3_molecules.gspan" />
        </test>
    </tests>
    <help>
<![CDATA[

.. class:: infomark

**What it does**

Explicit Decomposition with Neighborhood Utility program.
Fit predictive model.

The linear model is induced using the accelerated stochastic gradient descent technique by Léon Bottou and Yann LeCun.
When the target information is 0, a self-training algorithm is used to impute a positive or negative class to the unsupervised instances.
If the target information is imbalanced a minority class resampling technique is used to rebalance the training set.

@references@

The code for Stochastic Gradient Descent SVM is adapted from http://leon.bottou.org/projects/sgd. Léon Bottou and Yann LeCun, ''Large Scale Online Learning'',
Advances in Neural Information Processing Systems 16, Edited by Sebastian Thrun, Lawrence Saul and Bernhard Schölkopf, MIT Press, Cambridge, MA, 2004.



]]>
    </help>
</tool>
