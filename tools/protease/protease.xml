<tool id="eden_cleave_protease" name="EDeN-Cleave tool" version="@VERSION@">
    <description></description>
    <macros>
        <import>main_macros.xml</import>
    </macros>
    <expand macro="python_requirements"/>
    <expand macro="macro_stdio"/>
    <version_command>echo "@VERSION@"</version_command>
    <command><![CDATA[
    python $__tool_directory__/protease_model.py
    #if $selected_tasks.selected_task == 'fit':
        fit
        -i $selected_tasks.infile_train
        --negative-ratio $selected_tasks.options.negative_ratio
        --shuffle-order $selected_tasks.options.shuffle_order
        -r  $selected_tasks.options.random_state

    #else:
        predict
        -m $selected_tasks.infile_model
        -i $selected_tasks.infile_data
    #end if
]]>
    </command>
    <inputs>
        <expand macro="train_loadConditional">
            <section name="options" title="Advanced Options" expanded="False">
                <param name="negative_ratio" type="integer" optional="true" value="2" label="Negative to positive instance ratio" help="Relative size ratio for the randomly permuted negative instances w.r.t. the positive instances."/>
                <param name="shuffle_order" type="integer" optional="true" value="2" label="Order of k-mer shuffling" help="Order of the k-mer for the random shuffling procedure."/>
                <param name="random_state" type="integer" value="1" label="Random seed."/>
            </section>
        </expand>
    </inputs>
    <outputs>
        <data format="tabular" name="outfile_predict" from_work_dir="out/predictions.txt">
            <filter>selected_tasks['selected_task'] == 'predict'</filter>
        </data>
        <data format="txt" name="outfile_fit" from_work_dir="out/model">
            <filter>selected_tasks['selected_task'] == 'fit'</filter>
        </data>

    </outputs>
    <tests>
        <test>
            <param name="infile_train" value="CTSL_train.fasta" ftype="fasta"/>
            <param name="selected_task" value="fit"/>
            <param name="shuffle_order" value="3"/>
            <output name="outfile_fit" file="model" ftpye="txt" compare="sim_size" delta="100000"/>
        </test>
        <test>
            <param name="infile_model" value="model" ftype="txt"/>
            <param name="infile_data" value="CTSL_test.fasta" ftype="fasta"/>
            <param name="selected_task" value="predict"/>
            <output name="outfile_predict" file="predictions.txt" ftpye="tabular"/>
        </test>
    </tests>
    <help><![CDATA[
**What it does**
The EDeN-Cleave tool can learn the cleavage specificity of a given class of peptidases. 
The method assumes that the candidate cleavage point is between the two amino acids adjacent to the central position. 
The method is based on an efficient string kernel implemented in the Explicit Decomposition with Neighbourhood (EDeN) library (DOI:10.5281/zenodo.27945). This approach uses the notion of k-mers with gaps to enumerate all possible substrings of increasing order which are used as features in an efficient linear binary classification estimator.
    ]]></help>
    <expand macro="eden_citation"/>
</tool>
