<tool id="mcxload" name="mcxload" >
  <description>Load matrices and tab files from label format for the mcl tool</description>
  <command >
	mcxload -abc $inputfile $stream_mirror $stream_neg_log10 $stream_tf -o $output -write-tab $tabOutput  2> /dev/null;
</command>
  <inputs>
	<param name="inputfile" type="data" format="txt" label="Label file" help="Dataset missing? See TIP below"/>
	<param name='labelForamt' type='select' format='text'>
		<option value='-abc'>abc</option>
		<option value='-etc'>etc</option>
		<option value='-sif'>sif</option>
	</param>
	<param name="stream_mirror" label="mirror stream (if the output should be an undirected graph) " type="boolean" truevalue="--stream-mirror" falsevalue="" value="--stream-mirror" checked="true"/>	
	<param name="stream_neg_log10" label="stream neg log10 (negative log-10 transform stream values)" type="boolean" truevalue="--stream-neg-log10" falsevalue="" value="--stream-neg-log10" checked="true"/>
	<param name="stream_log" label="stream log" type="boolean" truevalue="--stream-log" falsevalue="" />
	<param name="stream_tf" label="stream transfrom" type="boolean" truevalue="-stream-tf 'ceil(200)'" falsevalue="" value="-stream-tf 'ceil(200)'" checked="true"/>
  </inputs>
  <outputs>
    <data format="txt" name="output" />
    <data format="txt" name="tabOutput" />
  </outputs>
  <tests>
	<test>
	</test>	
 </tests>

<help>


**What it does**

	mcxload will transform the labels into mcl numerical identifiers and the pairs of labels into graph edges or equivalently matrix entries. The weight of an edge is the value associated with the associated labels. mcxload constructs dictionaries (sometimes just one) that map labels onto mcl identifiers as it goes along. It can optionally write these to file. In MCL (family) parlance, such a dictionary written to file is called a tab file .

-----

**Input** 

- Label input:

	Label input is a line based input where two nodes and an optional value are specified on each line. The nodes should be specified by labels. If the labels contain spaces they should be separated by tabs (and the value if present should be separated from the second label by a tab as well). The parse code will assume tab-separated labels if it sees a tab character in the input, otherwise it will split the input on any kind of whitespace. Any line where the first non-whitespace character is the octothorp (#) is ignored .

- abc fromat:

	&lt;source-label&gt;	 &lt;destination-label&gt; 	[&lt;weight&gt;]
	
- sif format:

	&lt;source-label&gt; 	&lt;relation-type&gt; 	&lt;destination-label&gt;:&lt;weight&gt;  	&lt;destination-label&gt;:&lt;weight&gt;  ...

- etc format:

	the same as sif format without the relation-tzpe column .

------



**Example**

* input::

	-Label File :
	
		tr|Q56P96|Q56P96_9BACT	2vz9_B	1e-45
		tr|Q56P96|Q56P96_9BACT	2vz9_A	1e-45
		tr|Q56P96|Q56P96_9BACT	2vz8_B	1e-45
		tr|Q56P96|Q56P96_9BACT	2vz8_A	1e-45
		tr|Q56P96|Q56P96_9BACT	3hhd_D	2e-44
		tr|Q56P96|Q56P96_9BACT	3hhd_C	2e-44
		tr|Q56P96|Q56P96_9BACT	3hhd_B	2e-44
		tr|Q56P96|Q56P96_9BACT	3hhd_A	2e-44
		tr|Q56P96|Q56P96_9BACT	2qo3_B	2e-43
		tr|Q56P96|Q56P96_9BACT	2qo3_A	2e-43
		tr|Q56P96|Q56P96_9BACT	2hg4_F	2e-41
		tr|Q56P96|Q56P96_9BACT	2hg4_E	2e-41
		....

* output::

	-Dictionary File :

		0	tr|Q56P96|Q56P96_9BACT
		1	2vz9_B
		2	2vz9_A
		3	2vz8_B
		4	2vz8_A
		5	3hhd_D
		6	3hhd_C
		7	3hhd_B
		8	3hhd_A
		9	2qo3_B
		10	2qo3_A
		11	2hg4_F
		12	2hg4_E
		13	2hg4_D
		14	2hg4_C
		15	2hg4_B
		16	2hg4_A
		17	1kas_A	
		...

	-Matrix File :
		(mclheader
		mcltype matrix
		dimensions 68x68
		)
		(mclmatrix
		begin
		0  1:45 2:45 3:45 4:45 5:43.69897 6:43.69897 7:43.69897 8:43.69897 9:42.69897
		     10:42.69897 11:40.69897 12:40.69897 13:40.69897 14:40.69897 15:40.69897
		     16:40.69897 17:8 18:8 19:8 20:8 21:8 22:8 23:8 24:8 25:8 26:7.522879
		     27:7.522879 28:6.69897 29:6.69897 30:6.69897 31:6.69897 32:6.69897
		     33:6.69897 34:6.69897 35:6.522879 36:6.522879 37:6.522879 38:6.522879
		     39:6.30103 40:5.522879 41:5.522879 42:5.522879 43:5.522879 44:5.09691
		     45:5.09691 46:5.045757 47:5.045757 48:5.045757 49:5.045757 50:5.045757
		     51:5 52:5 53:5 54:5 55:5 56:5 57:5 58:5 59:4.69897 60:4.69897 61:4.69897
		     62:4.69897 63:4.30103 64:4.30103 65:4 66:4 67:4 $
		1  0:45 $
		2  0:45 $
		3  0:45 $
		4  0:45 $
		5  0:43.69897 $
		6  0:43.69897 $
		7  0:43.69897 $
		8  0:43.69897 $
		9  0:42.69897 $
		10 0:42.69897 $
		11 0:40.69897 $
		12 0:40.69897 $
		13 0:40.69897 $
		14 0:40.69897 $
		15 0:40.69897 $
		16 0:40.69897 $
		17 0:8 $		
		....

 
 </help>

</tool>
