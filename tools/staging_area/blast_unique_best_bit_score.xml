<tool id="best_blast_hit" name="Best Blast hit" version="0.1">
    <description>from BLAST output or similar data</description>
    <command interpreter="python">
      blast_unique_best_bit_score.py $blast_tabular $output $score $order
    </command>
    <inputs>
        <param name="blast_tabular" type="data" format="tabular" label="Blast Tabular File" description="Tabular file, e.g. BLAST output" /> 
        <param name="score" type="data_column" data_ref="blast_tabular" multiple="False" numerical="False" value="c12" label="Column containing containing score to rank on" help="The bit score is column 12 in standard BLAST tabular output (highest is best), while e-value is column 11 (lowest is best)"/>
        <param name="order" type="select" label="Highest or lowest score is best?">
            <option value="high">Highest is best (e.g. BLAST bitscore)</option>
            <option value="low">Lowest is best (e.g. BLAST e-value)</option>
        </param>
    </inputs>
    <outputs>
        <data name="output" format="tabular" label="Best Blast Hit" />
    </outputs>
    <requirements>
    </requirements>
    <tests>
    </tests>
    <help>
**What it does**

Takes a tabular search result file and extract the best hit from each query-id
according to the specified score, e.g e-value or bitscore.

NCBI BLAST+ (and the older NCBI 'legacy' BLAST) and other related search
tools like Bill Pearson's FASTA suite can can output matches (hits) in a
tabular form suitable for use with this tool.

The output from this tool is a tabular file like the input file with the
difference that each query id occurce only once.

See *Suggested Filters* below for an example of the output columns.


.. class:: warningmark

**Note**

This tool does not do any filtering of the data. If you are trying to use
BLAST RBH matches to identify candidate orthologues or transfer annotation,
you *must* use a percentage identity and minimum coverage threshold or
similiar. See *Suggested Filters* below for examples of how to do this in
Galaxy. See also:

Punta and Ofran (2008) The Rough Guide to In Silico Function Prediction,
or How To Use Sequence and Structure Information To Predict Protein
Function. PLoS Comput Biol 4(10): e1000160.
http://dx.doi.org/10.1371/journal.pcbi.1000160


**Suggested settings**

The suggested settings of the score is the bit score in column 12 of the 
standard 12 column Blast+ output.

The standard 12 column output from BLAST+ is as follows:

====== ========= ============================================
Column NCBI name Description
------ --------- --------------------------------------------
     1 qseqid    Query Seq-id (ID of your sequence)
     2 sseqid    Subject Seq-id (ID of the database hit)
     3 pident    Percentage of identical matches (between 0 and 100)
     4 length    Alignment length
     5 mismatch  Number of mismatches
     6 gapopen   Number of gap openings
     7 qstart    Start of alignment in query
     8 qend      End of alignment in query
     9 sstart    Start of alignment in subject (database hit)
    10 send      End of alignment in subject (database hit)
    11 evalue    Expectation value (E-value)
    12 bitscore  Bit score
====== ========= ============================================


**Suggested filters**

To require 70% sequence identity over the aligned region, use 'c3 >= 70'
in Galaxy's tool for filtering tabular data.

To require the alignment to cover at least 50% of the query sequence, you
will need the extended BLAST tabular output (with additional extra
columns), and use 'c8-c7+1 >= 0.5*c23'. Here 'c23' is the query length,
and 'c8-c7+1' gives the length of the aligned part of the query from its
start and end coordinates. If you used 'c4' instead which is the alignment
length, it could include gap characters.

Similarly, to require the alignment covers at least 50% of the subject
sequence, use 'c10-c9+1 >= 0.5*c24' as the filter expression.

Note for BLASTX or TBLASTN, those expressions may need adjustment for
converting from nucleotide coordinates to amino acids (factor of 3).

    </help>
</tool>
