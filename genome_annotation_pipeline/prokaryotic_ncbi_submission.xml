<tool id="prokaryotic_ncbi_submission" name="Prokaryotic NCBI submission" version="0.1.1">
    <description>creates all files necessary for a NCBI submission</description>
    <requirements>
        <requirement type="package" version="2.2.26+">blast+</requirement>
        <requirement type="package">blast+</requirement>
        <requirement type="package" version="22.4">tbl2asn</requirement>
        <requirement type="package">tbl2asn</requirement>
        <requirement type="package" version="3.02b">glimmer</requirement>
        <requirement type="package">glimmer</requirement>
        <requirement type="package" version="1.61">biopython</requirement>
        <requirement type="package">biopython</requirement>
    </requirements>
    <command interpreter="python">
<![CDATA[

        prokaryotic_ncbi_submission.py
            --blastdb ${database.fields.path}
            --num-threads "\${GALAXY_SLOTS:-12}"
            --locus-tag $locus_tag
            --glimmer-trainingset $glimmer_trainingset
            --agp-file $agp_file
            --cleaned-sequence $cleaned_sequence

            #if $adv_opts['adv_opts_selector'] == "advanced":

                --minimal-identity $adv_opts.identity
                --minimal-coverage $adv_opts.coverage

                #if str($adv_opts.sbt_file) != 'None':
                    --sbt-file $adv_opts.sbt_file
                #end if


                #if 'genbank_file' in str($adv_opts.outputs).split(','):
                    --genbank-file $genbank_file
                #end if

                #if 'feature_table' in str($adv_opts.outputs).split(','):
                    --feature-table $featureTable
                #end if

                #if 'compressed_archive' in str($adv_opts.outputs).split(','):
                    --compressed-archive $compressed_archive
                #end if

                #if 'sequin_file' in str($adv_opts.outputs).split(','):
                    --sequin-file $sequin_file
                #end if

                #if 'validation_file' in str($adv_opts.outputs).split(','):
                    --validation-file $validation_file
                #end if

                #if 'discrepancy_file' in str($adv_opts.outputs).split(','):
                    --discrepancy_report $discrepancy_report
                #end if

            #else:
                --genbank-file $genbank_file
                --compressed-archive $compressed_archive
                --discrepancy_report $discrepancy_report
            ## End of advanced options:
            #end if

        2>&1

]]>
    </command>
    <inputs>
        <param name="database" type="select" label="Protein BLAST database">
            <options from_file="blastdb_p.loc">
                <column name="value" index="0"/>
                <column name="name" index="1"/>
                <column name="path" index="2"/>
            </options>
        </param>
        <param name="cleaned_sequence" type="data" format="fasta" label="FASTA sequence file" help="Dataset missing? See TIP below"/>
        <param name="glimmer_trainingset" type="data" format="txt" label="Glimmer Trainingset" help="Dataset missing? See TIP below"/>
        <param name="locus_tag" type="text" value="SCI" label="Locus Tag" help="Please specify a locus_tag prefix, it must be at least 3 characters."/>
        <param name="agp_file" type="data" format="tabular" label="AGP file containing the scaffold information." help="Its generated in the scaffold2fasta tool."/>

        <conditional name="adv_opts">
            <param name="adv_opts_selector" type="select" label="Advanced Options">
                <option value="basic" selected="True">Hide Advanced Options</option>
                <option value="advanced">Show Advanced Options</option>
            </param>
            <when value="basic" />
            <when value="advanced">
                <param name="coverage" type="float" value="0.5" label="minimal coverage" help="Minimal coverage of a BLAST hit to include the annotation in the output.">
                    <validator type="in_range" min="0" max="1"/>
                </param>
                <param name="identity" type="float" value="0.5" label="minimal identity" help="Minimal identity of a BLAST hit to include the annotation in the output.">
                    <validator type="in_range" min="0" max="1"/>
                </param>
                <param name="sbt_file" type="data" format="txt" optional="True" label="SBT File" help="The NCBI author file. It can be created on the ncbi page. http://www.ncbi.nlm.nih.gov/WebSub/template.cgi"/>

                <param name="outputs" type="select" multiple="true" label="Output formats">
                    <option value="genbank_file" selected="True">Annotated Genome (GenBank)</option>
                    <option value="feature_table">NCBI FeatureTable</option>
                    <option value="compressed_archive" selected="True">Compressed archive, with all relevant files</option>
                    <option value="sequin_file">NCBI Sequin file</option>
                    <option value="validation_file">Validation file</option>
                    <option value="discrepancy_file" selected="True">Discrepancy report file</option>
                </param>

            </when>
        </conditional>
    </inputs>
    <outputs>
        <data format="txt" name="featureTable" label="Prokaryotic annotation (FeatureTable)">
            <filter>adv_opts['adv_opts_selector'] == 'advanced' and 'feature_table' in adv_opts['outputs']</filter>
        </data>
        <data format="genbank" name="genbank_file" label="Prokaryotic annotation (Genbank)">
          <filter>adv_opts['adv_opts_selector'] == 'basic' or (adv_opts['adv_opts_selector'] == 'advanced' and 'genbank_file' in adv_opts['outputs'])</filter>
        </data>
        <data format="txt" name="sequin_file" label="Prokaryotic annotation (Sequin)">
          <filter>adv_opts['adv_opts_selector'] == 'advanced' and 'sequin_file' in adv_opts['outputs']</filter>
        </data>
        <data format="txt" name="validation_file" label="Prokaryotic annotation (Validation)" >
          <filter>adv_opts['adv_opts_selector'] == 'advanced' and 'validation_file' in adv_opts['outputs']</filter>
        </data>
        <data format="txt" name="discrepancy_report" label="Prokaryotic annotation (Discrepancy report)" >
          <filter>adv_opts['adv_opts_selector'] == 'basic' or (adv_opts['adv_opts_selector'] == 'advanced' and 'discrepancy_file' in adv_opts['outputs'])</filter>
        </data>
        <data format="tar.gz" name="compressed_archive" label="All files required for NCBI submission" >
          <filter>adv_opts['adv_opts_selector'] == 'basic' or (adv_opts['adv_opts_selector'] == 'advanced' and 'compressed_archive' in adv_opts['outputs'])</filter>
        </data>
    </outputs>
    <tests>
        <test>
        </test>
    </tests>

<help>
<![CDATA[

**Note**. That tool may take a substantial amount of time. For large input datasets it is advisable to allow overnight processing.
Please also note that it is a good choise to removes contamination from your genomic FASTA sequence before you use that tool.
Also the NCBI does not allow large gaps in a scaffold, so please convert your scaffold-sequence to a Sequence wihtout gaps using the tool 'Split scaffold'. The scaffold will be saved in a special AGP-file.


**What it does**

1. Gene prediction of your entire eukaryotic genome, using Augustus
2. Similarity searches against against SwissProt or UniProt with predicted genes
3. Convertion of all Annotations to the NCBI Feature Table format, suitable to submit your sequence to NCBI
4. All files necessary to submit your sequence data will be created, including the Sequin file for further processing


Please check the validation file for errors before you submit the sequence.

-----

**Params**

- Locus Tag
    That tag should be the same you specified in 'Split scaffolds' tool, if you used it. It's a prefix for your unique sequence ID's.
    It must be at least 3 characters. See http://www.ncbi.nlm.nih.gov/genomes/locustag/Proposal.pdf and check if your prefix is available here: http://www.ncbi.nlm.nih.gov/genomes/lltp.cgi


- SBT-File
    The author file. It can be created on the ncbi page. http://www.ncbi.nlm.nih.gov/WebSub/template.cgi


- Glimmer Trainingset
    An Glimmer3 HMM. Its used to get the best gene prediction from Glimmer3.


- Output Feature Table
    output the NCBI Feature-Table


- Output GenBank file
    The whole annotation in the genbank format.


- Output Sequin file
    Sequin is a special NCBI tool and the output is required for the submission to NCBI.


- Output Validation file
    The Validation file gives you a hint of potential errors that needs to be fixed before submission.


]]>
    </help>
</tool>
