<tool id="segemehl" name="segemehl" version="0.1">
    <description>suffix arrays based short read aligner</description>
    <requirements>
        <requirement type="binary">segemehl.x</requirement>
    </requirements>
    <command>
        ## prepare segemehl index
        #set index_path = ''
        #set db_path = ''
        #set index_path = $reference_genome.fields.index
        #set db_path = $reference_genome.fields.db
        
        ## execute segemehl
        segemehl.x
        
        ## number of threads
        -t 4
        
        ## db file path
        -d $db_path
        ## index file path
        -i $index_path
        
        ## check for single/pair-end
        #if str( $library.type ) == "single":
            #set $query_list = list()
            ## prepare inputs
            #for $fastq in $library.reads:
                $query_list.append('%s' %($fastq.input_query))
            #end for
            -q "#echo ' '.join( $query_list )#"
        #else
            ## prepare inputs
            -q $library.first_strand_query
            -p $library.second_strand_query
            -I $library.maxinsertsize
        #end if
        -m $minsize
        -A $accuracy
        -H $hitstrategy
        #if str( $prime5.strip() ):
            -P $prime5
        #end if
        #if str( $prime3.strip() ):
            -Q $prime3
        #end if
        $polyA
        $autoclip
        $hardclip
        $order
        -s
        -o $segemehl_out
    </command>
    <stdio>
        <regex match="Exit forced" 
           source="both" 
           level="fatal" 
           description="Execution halted." />
    </stdio>
    <inputs>
        <param name="reference_genome" type="select" label="Select a reference genome" help="If your genome of interest is not listed, contact the Galaxy team">
            <options from_data_table="segemehl_indexes">
                <filter type="sort_by" column="2"/>
                <validator type="no_options" message="No indexes are available for the selected input dataset"/>
            </options>
        </param>
        <conditional name="library">
            <param name="type" type="select" label="Sequencing type">
                <option value="single">Single-end</option>
                <option value="paired">Paired-end</option>
            </param>
            <when value="single">
                <repeat name="reads" title="FASTQ/FASTA files">
                    <param name="input_query" type="data" format="fasta" label="Reads fasta/fastq file" />
                </repeat>
            </when>
            <when value="paired">
                <param name="first_strand_query" type="data" format="fasta" label="Reads from first strand" />
                <param name="second_strand_query" type="data" format="fasta" label="Reads from second strand" />
                <param name="maxinsertsize" type="integer" value="5000" label="Maximum size of the inserts (paired end) (default:5000)" />
            </when>
        </conditional>
        <param name="minsize" type="integer" value="12" size="5" label="Minimum size of queries (default:12)">
            <validator type="in_range" min="1"/>
        </param>
        <param name="accuracy" type="integer" value="85" size="5" label="Min percentage of matches per read in semi-global alignment (default:85)" >
            <validator type="in_range" min="1" max="100"/>
        </param>
        <param name="hitstrategy" type="integer" value="1" size="5" label="report only best scoring hits (=1) or all (=0) (default:1)" />
        <param name="prime5" type="text" size="80" label="add 5' adapter (default:none)" />
        <param name="prime3" type="text" size="80" label="add 3' adapter (default:none)" />
        <param name="polyA" type="boolean" truevalue="--polyA" falsevalue="" checked="false" label="Clip polyA tail"/>
        <param name="autoclip" type="boolean" truevalue="--autoclip" falsevalue="" checked="false" label="Autoclip unknown 3prime adapter"/>
        <param name="hardclip" type="boolean" truevalue="--hardclip" falsevalue="" checked="false" label="Enable hard clipping"/>
        <param name="order" type="boolean" truevalue="--order" falsevalue="" checked="false" label="Sorts the output by chromsome and position (might take a while!)"/>
    </inputs>

    <outputs>
        <data format="sam" name="segemehl_out" label="Read alignments on ${on_string}"/>
    </outputs>
    <help>

.. class:: infomark

**What it does** 

`DESeq` is a tool for differential expression testing of RNA-Seq data.


**Inputs**

`DESeq` requires three input files to run:

1. Annotation file in GFF3, containing the necessary information about the transcripts that are to be quantified.
2. The BAM alignment files grouped into replicate groups, each containing several replicates. BAM files store the read alignments in a compressed format. They can be generated using the `SAM-to-BAM` tool in the NGS: SAM Tools section. (The script will also work with only two groups containing only a single replicate each. However, this analysis has less statistical power and is  therefor not recommended.)

**Output**

`DESeq` generates a text file containing the gene name and the p-value.

------

**Licenses**

If **DESeq** is used to obtain results for scientific publications it
should be cited as [1]_.

**References** 

.. [1] Anders, S and Huber, W (2010): `Differential expression analysis for sequence count data`_. 

.. _Differential expression analysis for sequence count data: http://dx.doi.org/10.1186/gb-2010-11-10-r106

------

.. class:: infomark

**About formats**


**GFF3 format** General Feature Format is a format for describing genes
and other features associated with DNA, RNA and protein
sequences. GFF3 lines have nine tab-separated fields:

1. seqid - The name of a chromosome or scaffold.
2. source - The program that generated this feature.
3. type - The name of this type of feature. Some examples of standard feature types are "gene", "CDS", "protein", "mRNA", and "exon". 
4. start - The starting position of the feature in the sequence. The first base is numbered 1.
5. stop - The ending position of the feature (inclusive).
6. score - A score between 0 and 1000. If there is no score value, enter ".".
7. strand - Valid entries include '+', '-', or '.' (for don't know/care).
8. phase - If the feature is a coding exon, frame should be a number between 0-2 that represents the reading frame of the first base. If the feature is not a coding exon, the value should be '.'.
9. attributes - All lines with the same group are linked together into a single item.

For more information see http://www.sequenceontology.org/gff3.shtml

**SAM/BAM format** The Sequence Alignment/Map (SAM) format is a
tab-limited text format that stores large nucleotide sequence
alignments. BAM is the binary version of a SAM file that allows for
fast and intensive data processing. The format specification and the
description of SAMtools can be found on
http://samtools.sourceforge.net/.

------

DESeq-hts Wrapper Version 0.3 (Feb 2012)

    </help>
</tool>
